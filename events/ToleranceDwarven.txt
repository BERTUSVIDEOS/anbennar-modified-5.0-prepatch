
namespace = dwarven_tolerance_events

# Event organizer for the dwarven tolerance events - should be a huge improvement to performance - having 1 overall check for having the minority instead of one for EACH new event that gets added
country_event = {
	id = dwarven_tolerance_events.0
	title = race_setup_events.1.d
	desc = race_setup_events.1.d
	picture = BORDER_TENSION_eventPicture

	#is_triggered_only = yes
	hidden = yes

	trigger = {
		any_owned_province = {
			has_any_dwarven_pop_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		days = 3650
		modifier = {
			factor = 0.75
			has_country_modifier = racial_focus_dwarven
		}
		modifier = {
			factor = 0.75
			has_idea = tolerance_idea_2
		}
	}

	option = {
		random_list = {
			# Dwarven stronghold
			1 = {
				#do nothing
				modifier = {
					factor = 5
					high_tolerance_dwarven_race_trigger = yes
				}
			}
			1 = {
				trigger = {
					any_owned_province = {
						NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
						NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
						NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					}
			
				}
				modifier = {
					factor = 2
					low_tolerance_dwarven_race_trigger = yes
				}
				modifier = {
					factor = 2
					average_unrest = 1
				}
				country_event = {
					id = dwarven_tolerance_events.2
				}
			}
			# Rise of dwarven cartels
			1 = {
				trigger = {
					any_owned_province = {
						has_dwarven_minority_trigger = yes
						NOT = { has_province_modifier = dwarven_guilds_upset }
						NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					}
				}
				country_event = {
					id = dwarven_tolerance_events.3
				}
			}
			# Recruit dwarven minister
			1 = {
				trigger = {
					any_owned_province = {
						has_any_dwarven_pop_trigger = yes
					}
				}
				modifier = {
					factor = 1.5
					medium_tolerance_dwarven_race_trigger = yes
				}
				modifier = {
					factor = 2
					high_tolerance_dwarven_race_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.4
				}
			}
			# Clan rivalries come to a head
			1 = {
				modifier = {
					factor = 1.1
					any_owned_province = {
						has_any_dwarven_pop_trigger = yes
						unrest = 0
					}
				}
				modifier = {
					factor = 2
					has_any_dwarven_pop_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.5
				}
			}
			# Dwarven craftsmen dominate market
			1 = {
				modifier = {
					factor = 2
					high_tolerance_dwarven_race_trigger = yes
				}
				modifier = {
					factor = 1.5
					medium_tolerance_dwarven_race_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.7
				}
			}
			# Long-term grudges come to fruition
			1 = {
				modifier = {
					factor = 2
					any_owned_province = {
						has_large_dwarven_minority_trigger = yes
					}
				}
				country_event = {
					id = dwarven_tolerance_events.8
				}
			}
			# Dwarven cartel thugs
			1 = {
				modifier = {
					factor = 2
					low_tolerance_dwarven_race_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.9
				}
			}
		}
	}
}

# country_event = {
# 	id = dwarven_tolerance_events.1
# 	title = dwarven_tolerance_events.1.t
# 	desc = dwarven_tolerance_events.1.d
# 	picture = COURT_eventPicture
	
# 	is_triggered_only = yes
	
# 	trigger = {
# 		NOT = { culture_group = dwarven }
# 		any_owned_province = {
# 			NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 			NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 			has_dwarven_minority_trigger = yes
# 			OR = {
# 				has_terrain = mountain
# 				trade_goods = iron
# 				trade_goods = copper
# 				trade_goods = gold
# 				trade_goods = coal
# 			}
# 		}
# 	}
	
# 	mean_time_to_happen = {
# 		days = 1
# 	}
	
# 	immediate = {
# 		hidden_effect = {
# 			random_owned_province = {
# 				limit = {
# 					NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 					NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 					has_dwarven_minority_trigger = yes
# 					OR = {
# 						has_terrain = mountain
# 						trade_goods = iron
# 						trade_goods = copper
# 						trade_goods = gold
# 						trade_goods = coal
# 					}
# 				}
# 				save_event_target_as = dwarven_poor_mining_province
# 			}
# 			random_owned_province = {
# 				limit = {
# 					NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 					NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 					has_dwarven_minority_trigger = yes
# 					has_terrain = mountain
# 					OR = {
# 						trade_goods = iron
# 						trade_goods = copper
# 						trade_goods = gold
# 						trade_goods = coal
# 					}
# 				}
# 				save_event_target_as = dwarven_poor_mining_province
# 			}
# 			random_owned_province = {
# 				limit = {
# 					NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 					NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 					has_dwarven_minority_trigger = yes
# 					has_terrain = mountain
# 					base_production = 3
# 					OR = {
# 						trade_goods = iron
# 						trade_goods = copper
# 						trade_goods = gold
# 						trade_goods = coal
# 					}
# 				}
# 				save_event_target_as = dwarven_poor_mining_province
# 			}
# 		}
# 	}
	
# 	option = {	# Send them back to the mines
# 		name = dwarven_tolerance_events.1.a
# 		ai_chance = {
# 			factor = 50
# 			modifier = {
# 				factor = 0.5
# 				wants_to_maintain_tolerance_dwarven = yes
# 			}
# 			modifier = {
# 				factor = 0.1
# 				wants_to_increase_tolerance_dwarven = yes
# 			}
# 		}
# 		small_decrease_of_dwarven_tolerance_effect = yes
# 		event_target:dwarven_poor_mining_province = {
# 			add_province_modifier = {
# 				name = dwarven_forced_back_to_poor_mines_prov
# 				duration = 3650
# 			}
# 		}
# 	}
	
# 	option = {	# Divert resources to help their efforts
# 		name = dwarven_tolerance_events.1.b
# 		ai_chance = {
# 			factor = 50
# 		}
# 		add_adm_power = -25
# 		if = {
# 			limit = { NOT = { monthly_income = 25 } }
# 			add_years_of_income = -0.33
# 		}
# 		if = {
# 			limit = { monthly_income = 25 }
# 			add_treasury = -100
# 		}
# 		event_target:dwarven_poor_mining_province = {
# 			add_province_modifier = {
# 				name = dwarven_poor_mines_prov
# 				duration = 1825
# 			}
# 		}
# 	}
	
# 	option = {	# Let's give them new land
# 		name = dwarven_tolerance_events.1.c
# 		ai_chance = {
# 			factor = 50
# 			modifier = {
# 				factor = 0.5
# 				wants_to_maintain_tolerance_dwarven = yes
# 			}
# 			modifier = {
# 				factor = 0.1
# 				wants_to_decrease_tolerance_dwarven = yes
# 			}
# 		}
# 		add_adm_power = -50
# 		small_increase_of_dwarven_tolerance_effect = yes
# 		event_target:dwarven_poor_mining_province = {
# 			add_local_autonomy = 10
# 		}
# 	}
# }

# Dwarven Stronghold (Hostile)
country_event = {
	id = dwarven_tolerance_events.2
	title = dwarven_tolerance_events.2.t
	desc = dwarven_tolerance_events.2.d
	picture = FORT_eventPicture
	GOTO = dwarven_stronghold_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = dwarven_stronghold_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
					is_capital = no
				}
				save_event_target_as = dwarven_stronghold_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
					is_capital = no
				}
				save_event_target_as = dwarven_stronghold_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
					is_capital = no
				}
				save_event_target_as = dwarven_stronghold_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# They can have the land for now
		name = dwarven_tolerance_events.2.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { prestige = 0 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		#add_prestige = -10	#-10→-0.5 per dev
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_stronghold_province = {
			add_local_autonomy = 5
			add_province_modifier = {
				name = dwarven_independent_stronghold_prov
				duration = 3650
			}
			get_prestige_from_provinces = {	#bertus mod
				prestige_per_dev = -0.5
			}
		}
	}
	
	option = {	# We could simply buy back the land
		name = dwarven_tolerance_events.2.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.2 }
			}
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.4 }
			}
		}
		#add_years_of_income = -0.2	#-0.2→0
		event_target:dwarven_stronghold_province = {
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}
	
	option = {	# Send in the military, that land is rightfully ours
		name = dwarven_tolerance_events.2.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { manpower_percentage = 0.33 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		#add_mil_power = -50	#-50→0		
		small_decrease_of_dwarven_tolerance_effect = yes
		event_target:dwarven_stronghold_province = {
			add_province_modifier = {
				name = dwarven_independent_stronghold_attacked_prov
				duration = 1825
			}
			get_manpower_from_provinces = {	#bertus mod
				manpower_per_dev = -1
			}
			remove_dwarven_minority_size_effect = yes
		}
	}
	
	option = {	# This is an opportunity in disguise
		name = dwarven_tolerance_events.2.e
		trigger = { ruler_has_personality = entrepreneur_personality }
		highlight = yes
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.1 }
			}
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.2 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		#add_years_of_income = -0.1	#-0.1→0
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_stronghold_province = {
			add_local_autonomy = 3
			add_province_modifier = {
				name = dwarven_independent_stronghold_deal_prov
				duration = 3650
			}
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}
}

# Rise of dwarven cartels (estate)
country_event = {
	id = dwarven_tolerance_events.3
	title = dwarven_tolerance_events.3.t
	desc = dwarven_tolerance_events.3.d
	picture = TRADEGOODS_eventPicture
	GOTO = dwarven_guild_province
	
	is_triggered_only = yes
			
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = dwarven_guild_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
					province_trade_power = 5
				}
				save_event_target_as = dwarven_guild_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
					province_trade_power = 10
				}
				save_event_target_as = dwarven_guild_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# Their competence should be rewarded
		name = dwarven_tolerance_events.3.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { prestige = 0 }
			}
			modifier = {
				factor = 0.5
				NOT = {
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 40
					}
				}
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		small_increase_of_dwarven_tolerance_effect = yes
		reduce_estate_burghers_loyalty_effect = yes
		event_target:dwarven_guild_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				add_province_modifier = {
					name = dwarven_guilds_given_privileges
					duration = 3650
				}
			}
			get_prestige_from_provinces = {	#bertus mod
				prestige_per_dev = -0.1
			}
		}
	}
	
	option = {	# We sadly cannot agree to this
		name = dwarven_tolerance_events.3.b
		ai_chance = {
			factor = 50
		}
		event_target:dwarven_guild_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				add_province_modifier = {
					name = dwarven_guilds_upset
					duration = 1825
				}
			}
		}
	}
	
	option = {	# Outrageous! No dwarf deserve such privileges
		name = dwarven_tolerance_events.3.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		small_decrease_of_dwarven_tolerance_effect = yes
		event_target:dwarven_guild_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				add_province_modifier = {
					name = dwarven_guilds_upset
					duration = 3650
				}
			}
			get_prestige_from_provinces = {	#bertus mod
				prestige_per_dev = 0.1
			}
		}
	}
}

# Recruit Dwarven Minister
country_event = {
	id = dwarven_tolerance_events.4
	title = dwarven_tolerance_events.4.t
	desc = dwarven_tolerance_events.4.d
	picture = EXPLORERS_eventPicture
	GOTO = dwarven_advisor_culture_province
	
	is_triggered_only = yes

	# If you have a dwarven culture province, that's the one the advisor comes from
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { has_dwarven_minority_trigger = yes }
				save_event_target_as = dwarven_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { has_dwarven_majority_trigger = yes }
				save_event_target_as = dwarven_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Recruit the dwarf
	option = {
		name = dwarven_tolerance_events.4.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		small_increase_of_dwarven_tolerance_effect = yes		
		country_event = {	#long lived advisor
			id = bertus_changes.1011
		}
		add_estate_loyalty = {
			estate = estate_dwarven
			loyalty = 10
		}
		event_target:dwarven_advisor_culture_province = {
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
			get_prestige_from_provinces = {	#bertus mod
				prestige_per_dev = -0.5
			}
		}
	}

	# A true exemplar of their race
	option = {
		name = dwarven_tolerance_events.4.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_advisor_culture_province = {
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}

	# We dun give a shit
	option = {
		name = dwarven_tolerance_events.4.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		small_decrease_of_dwarven_tolerance_effect = yes
		event_target:dwarven_advisor_culture_province = {
			get_prestige_from_provinces = {	#bertus mod
				prestige_per_dev = 0.5
			}
		}
	}

	after = {
	}
}

# Clan rivalries come to a head
country_event = {
	id = dwarven_tolerance_events.5
	title = dwarven_tolerance_events.5.t
	desc = dwarven_tolerance_events.5.d
	picture = CONQUEST_eventPicture
	GOTO = dwarven_rivalry_province
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { has_any_dwarven_pop_trigger = yes }
				save_event_target_as = dwarven_rivalry_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { has_dwarven_majority_trigger = yes }
				save_event_target_as = dwarven_rivalry_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Attempt to settle this peacefully
	option = {
		name = dwarven_tolerance_events.5.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = charismatic_negotiator_personality
					ruler_has_personality = silver_tongue_personality
				}
			}
		}
		#add_dip_power = -20	#-20→0
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_rivalry_province = {
			add_province_modifier = {
				name = dwarven_clans_fighting
				duration = 365
			}
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}
	# It is not our place to interfere
	option = {
		name = dwarven_tolerance_events.5.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_increase_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = careful_personality
					ruler_has_personality = craven_personality
				}
			}
		}
		#medium_increase_of_dwarven_tolerance_effect = yes	#yes→no
		event_target:dwarven_rivalry_province = {
			add_province_modifier = {
				name = dwarven_clans_fighting
				duration = 1825
			}
		}
	}
	# Settle by force
	option = {
		name = dwarven_tolerance_events.5.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_decrease_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = strict_personality
					ruler_has_personality = malevolent_personality
				}
			}
		}
		#add_mil_power = -20	#-20→0
		medium_decrease_of_dwarven_tolerance_effect = yes
		event_target:dwarven_rivalry_province = {
			get_manpower_from_provinces = {
				manpower_per_dev = -1
			}
			remove_dwarven_minority_size_effect = yes
		}
	}
}

# Dwarven banks seek payment
# country_event = {
# 	id = dwarven_tolerance_events.6
# 	title = dwarven_tolerance_events.6.t
# 	desc = dwarven_tolerance_events.6.d
# 	picture = MERCHANTS_TALKING_eventPicture
	
# 	is_triggered_only = yes

#	 trigger = {
# 		num_of_loans = 1
# 		NOT = { has_country_flag = dwarven_banks_demand_payment }
# 		any_owned_province = {
# 			has_any_dwarven_pop_trigger = yes
# 		}
#	 }

# 	mean_time_to_happen = {
# 		days = 1
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 2
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 3
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 4
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 5
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 10
# 		}
# 		modifier = {
# 			factor = 2
# 			NOT = { stability = 0 }
# 		}
# 	}

# 	# Pay them back with interest
# 	option = {
# 		name = dwarven_tolerance_events.6.a

# 	}
# 	# Extend the loan
# 	option = {
# 		name = dwarven_tolerance_events.6.b

# 	}
# 	# You're not getting any more money from me!
# 	option = {
# 		name = dwarven_tolerance_events.6.c
# 		large_decrease_of_dwarven_tolerance_effect = yes
# 	}
# }

# Dwarven craftsmen dominate market
country_event = {
	id = dwarven_tolerance_events.7
	title = dwarven_tolerance_events.7.t
	desc = dwarven_tolerance_events.7.d
	picture = ECONOMY_eventPicture
	GOTO = dwarven_craftsmen_province
	
	is_triggered_only = yes

	mean_time_to_happen = {
		days = 1
		
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = dwarven_craftsmen_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Commission a masterwork
	option = {
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				NOT = { years_of_income = 0.2 }
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		name = dwarven_tolerance_events.7.a
		#add_prestige = 10
		#add_years_of_income = -0.2
		event_target:dwarven_craftsmen_province = {			
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}		
			get_prestige_from_provinces = {	#bertus mod
				prestige_per_dev = 1
			}
		}
		medium_increase_of_dwarven_tolerance_effect = yes
	}
	# They're good at their job
	option = {
		name = dwarven_tolerance_events.7.b
		#add_prestige = -5	#-5→0
		#small_increase_of_dwarven_tolerance_effect = yes	#yes→no
	}
	# They took our jerbs!
	option = {
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		name = dwarven_tolerance_events.7.c
		event_target:dwarven_craftsmen_province = {	#bertus mod	
			get_manpower_from_provinces = {
				manpower_per_dev = -1
			}		
			remove_dwarven_minority_size_effect = yes
		}
		small_decrease_of_dwarven_tolerance_effect = yes
	}
}

# Long-term grudges come to fruition
country_event = {
	id = dwarven_tolerance_events.8
	title = dwarven_tolerance_events.8.t
	desc = dwarven_tolerance_events.8.d
	picture = ACCUSATION_eventPicture
	
	is_triggered_only = yes

	# Support the wronged descendant
	option = {
		name = dwarven_tolerance_events.8.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		#add_dip_power = -30	#-30→0
		add_prestige = -10	#-5→-10
		small_increase_of_dwarven_tolerance_effect = yes
	}
	# Mediate in the court of law
	option = {
		name = dwarven_tolerance_events.8.b
		add_adm_power = -30
	}
	# Support the attacked descendant
	option = {
		name = dwarven_tolerance_events.8.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		large_decrease_of_dwarven_tolerance_effect = yes
	}
}

# Dwarven cartel thugs
country_event = {
	id = dwarven_tolerance_events.9
	title = dwarven_tolerance_events.9.t
	desc = dwarven_tolerance_events.9.d
	picture = ANGRY_MOB_eventPicture
	GOTO = cartel_province_target
	
	is_triggered_only = yes

	# Support the cartels
	immediate = {
		hidden_effect = {
			random_owned_province = {	#bertus mod
				limit = {
					has_any_dwarven_pop_trigger = yes
				}
				save_event_target_as = cartel_province_target
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {	#bertus mod
				limit = {
					has_large_dwarven_minority_trigger = yes
				}
				save_event_target_as = cartel_province_target
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	option = {
		name = dwarven_tolerance_events.9.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		event_target:cartel_province_target = {	#bertus mod
			get_treasury_from_provinces = {
				cash_per_dev = -5
			}
		}
		small_increase_of_dwarven_tolerance_effect = yes
		
	}
	# Assign more members to the guard
	option = {
		name = dwarven_tolerance_events.9.b
		event_target:cartel_province_target = {	#bertus mod
			get_manpower_from_provinces = {
				manpower_per_dev = -1
			}
		}
		#add_mil_power = -40	#-40→0

	}
	# Fine the cartels for not handling their own
	option = {
		name = dwarven_tolerance_events.9.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		#add_years_of_income = 0.3	#0.3→0
		event_target:cartel_province_target = {	#bertus mod
			get_treasury_from_provinces = {
				cash_per_dev = 20
			}
		}
		medium_decrease_of_dwarven_tolerance_effect = yes
	}
}
