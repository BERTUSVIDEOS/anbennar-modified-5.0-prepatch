
namespace = kobold_tolerance_events

# Event organizer for the kobold tolerance events - should be a huge improvement to performance - having 1 overall check for having the minority instead of one for EACH new event that gets added
country_event = {
	id = kobold_tolerance_events.0
	title = race_setup_events.1.d
	desc = race_setup_events.1.d
	picture = BORDER_TENSION_eventPicture


	hidden = yes
	#is_triggered_only = yes

	trigger = {
		any_owned_province = {
			has_any_kobold_pop_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		days = 3650
		modifier = {
			factor = 0.75
			has_country_modifier = racial_focus_kobold
		}
		modifier = {
			factor = 0.75
			has_idea = tolerance_idea_2
		}
	}

	option = {
		random_list = {
			1 = {
				#do nothing
				modifier = {
					factor = 5
					high_tolerance_kobold_race_trigger = yes
				}
			}
			# Pesky kobolds
			1 = {
				trigger = {
					any_owned_province = {
						has_kobold_minority_trigger = yes
						NOT = { has_province_modifier = kobold_bands_recruited }
						NOT = { has_province_modifier = kobold_scared_into_submission }
						NOT = { has_province_modifier = kobold_angered_by_attempts_to_submit }
					}
				}
				modifier = {
					factor = 0.5
					high_tolerance_kobold_race_trigger = yes
				}
				modifier = {
					factor = 1.5
					NOT = { stability = 0 }
				}
				country_event = {
					id = kobold_tolerance_events.1
				}
			}
			# Pesky kobolds redux
			1 = {
				trigger = {
					is_at_war = yes
					any_owned_province = {
						NOT = { has_province_modifier = kobold_bands_punished_harshly }
						NOT = { has_province_modifier = kobold_bands_punished }
						NOT = { has_province_modifier = kobold_bands_not_punished }
						has_kobold_minority_trigger = yes
					}
				}
				modifier = {
					factor = 0.5
					high_tolerance_kobold_race_trigger = yes
				}
				modifier = {
					factor = 1.5
					NOT = { stability = 1 }
				}
				modifier = {
					factor = 1.5
					NOT = { manpower_percentage = 0.5 }
				}
				country_event = {
					id = kobold_tolerance_events.2
				}
			}
			# Kobolds being harassed
			1 = {
				trigger = {
					any_owned_province = {
						has_kobold_minority_trigger = yes
					}
				}
				modifier = {
					factor = 1.5
					low_tolerance_kobold_race_trigger = yes
				}
				modifier = {
					factor = 0.5
					high_tolerance_kobold_race_trigger = yes
				}
				country_event = {
					id = kobold_tolerance_events.3
				}
			}
			# Kobold minister
			1 = {
				modifier = {
					factor = 1.5
					medium_tolerance_kobold_race_trigger = yes
				}
				modifier = {
					factor = 2
					high_tolerance_kobold_race_trigger = yes
				}
				country_event = {
					id = kobold_tolerance_events.4
				}
			}
			# Kobolds rob a bank!
			1 = {
				modifier = {
					factor = 1.1
					years_of_income = 0.5
				}
				modifier = {
					factor = 1.2
					years_of_income = 1
				}
				modifier = {
					factor = 1.5
					years_of_income = 2
				}
				country_event = {
					id = kobold_tolerance_events.5
				}
			}
			# Kobold tinkers release a new invention
			1 = {
				trigger = {
					any_owned_province = {
						has_any_kobold_pop_trigger = yes
						NOT = { has_province_modifier = kobold_inventions_unsafe }
						NOT = { has_province_modifier = kobold_inventions_OSHA_approved }
					}
					has_estate = estate_artificers
				}
				modifier = {
					factor = 0.1
					NOT = { is_year = 1500 }
				}
				modifier = {
					factor = 1.25
					is_year = 1600
				}
				modifier = {
					factor = 1.5
					is_year = 1700
				}
				country_event = {
					id = kobold_tolerance_events.6
				}
			}
			# Kobold hoard found by mob
			1 = {
				modifier = {
					factor = 1.5
					low_tolerance_kobold_race_trigger = yes
				}
				country_event = {
					id = kobold_tolerance_events.7
				}
			}
			# Kobold tunnels collapse building
			1 = {
				country_event = {
					id = kobold_tolerance_events.8
				}
			}
			# Burrows in the way of development
			1 = {
				trigger = {
					any_owned_province = {
						has_kobold_minority_trigger = yes
						NOT = { has_province_modifier = kobold_burrows }
					}
				}
				modifier = {
					factor = 2
					any_owned_province = {
						has_construction = building
						has_kobold_minority_trigger = yes
					}
				}
				country_event = {
					id = kobold_tolerance_events.9
				}
			}
			# Pesky traps!
			1 = {
				trigger = {
					any_owned_province = {
						has_kobold_minority_trigger = yes
						NOT = { has_province_modifier = kobold_pesky_traps }
					}
				}
				modifier = {
					factor = 1.5
					low_tolerance_kobold_race_trigger = yes
				}
				modifier = {
					factor = 0.1
					high_tolerance_kobold_race_trigger = yes
				}
				modifier = {
					factor = 1.5
					NOT = { stability = 0 }
				}
				country_event = {
					id = kobold_tolerance_events.10
				}
			}
		}
	}
}

# Pesky kobolds
country_event = {
	id = kobold_tolerance_events.1
	title = kobold_tolerance_events.1.t
	desc = kobold_tolerance_events.1.d
	picture = BORDER_TENSION_eventPicture
	GOTO = kobold_causing_havoc_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_recruited }
					NOT = { has_province_modifier = kobold_scared_into_submission }
					NOT = { has_province_modifier = kobold_angered_by_attempts_to_submit }
					has_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_causing_havoc_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_recruited }
					NOT = { has_province_modifier = kobold_scared_into_submission }
					NOT = { has_province_modifier = kobold_angered_by_attempts_to_submit }
					has_kobold_minority_trigger = yes
					local_autonomy = 25
				}
				save_event_target_as = kobold_causing_havoc_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# Scare them into submission
		name = kobold_tolerance_events.1.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { manpower_percentage = 0.4 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		#add_mil_power = -25	#-25→0		
		small_decrease_of_kobold_tolerance_effect = yes
		event_target:kobold_causing_havoc_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_recruited }
					NOT = { has_province_modifier = kobold_scared_into_submission }
					NOT = { has_province_modifier = kobold_angered_by_attempts_to_submit }
					has_kobold_minority_trigger = yes
				}
				random_list = {
					80 = {
						add_province_modifier = {
							name = kobold_scared_into_submission
							duration = 1095
						}
					}
					20 = {
						add_province_modifier = {
							name = kobold_angered_by_attempts_to_submit
							duration = 1095
						}
					}
				}
				get_manpower_from_provinces = {	#bertus mod
					manpower_per_dev = -0.5
				}
			}
		}
	}
	
	option = {	# Swiftly enforce our will on them
		name = kobold_tolerance_events.1.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { manpower_percentage = 0.4 }
			}
		}
		#add_mil_power = -20	#-20→0	
		event_target:kobold_causing_havoc_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_recruited }
					NOT = { has_province_modifier = kobold_scared_into_submission }
					NOT = { has_province_modifier = kobold_angered_by_attempts_to_submit }
					has_kobold_minority_trigger = yes
				}
				add_province_modifier = {
					name = kobold_angered_by_attempts_to_submit
					duration = 1825
				}
				get_manpower_from_provinces = {	#bertus mod
					manpower_per_dev = -0.5
				}
			}
		}
	}
	
	option = {	# Recruit these brave souls
		name = kobold_tolerance_events.1.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.5 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		#add_prestige = -10	#-10→0
		#add_yearly_manpower = 0.025	#0.025→0
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_causing_havoc_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_recruited }
					NOT = { has_province_modifier = kobold_scared_into_submission }
					NOT = { has_province_modifier = kobold_angered_by_attempts_to_submit }
					has_kobold_minority_trigger = yes
				}
				add_province_modifier = {
					name = kobold_bands_recruited
					duration = 1825
				}
				get_treasury_from_provinces = {	#bertus mod
					cash_per_dev = -2
				}
				get_manpower_from_provinces = {	#bertus mod
					manpower_per_dev = 1
				}
			}
		}
	}
}

# Pesky kobolds redux
country_event = {	# Similiar event to above, but sabotage recruitment rather than just causing havoc
	id = kobold_tolerance_events.2
	title = kobold_tolerance_events.2.t
	desc = kobold_tolerance_events.2.d
	GOTO = kobold_hindering_military_operations
	picture = {
		trigger = {
			event_target:kobold_hindering_military_operations = {
				development = 20
			}
		}
		picture = SIEGE_eventPicture
	}
	picture = {
		trigger = {
			event_target:kobold_hindering_military_operations = {
				NOT = { development = 20 }
			}
		}
		picture = BORDER_TENSION_eventPicture
	}
	
	is_triggered_only = yes
		
	immediate = {
		hidden_effect = {
			random_known_country = {
				limit = {
					war_with = ROOT
				}
				save_event_target_as = kobold_war_target_chance
			}
			random_known_country = {
				limit = {
					OR = {
						is_subject = no
						offensive_war_with = ROOT
					}
					war_with = ROOT
				}
				save_event_target_as = kobold_war_target_chance
			}
			random_known_country = {
				limit = {
					is_subject = no
					offensive_war_with = ROOT
				}
				save_event_target_as = kobold_war_target_chance
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_hindering_military_operations
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
					controlled_by = ROOT
				}
				save_event_target_as = kobold_hindering_military_operations
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
					controlled_by = ROOT
					any_neighbor_province = {
						owner = { war_with = ROOT }
					}
				}
				save_event_target_as = kobold_hindering_military_operations
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# Punish all of them!
		name = kobold_tolerance_events.2.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.2
				has_dlc = "The Cossacks"
				has_estate = estate_nobles
				NOT = {
					estate_loyalty = {
						estate = estate_nobles
						loyalty = 40
					}
				}
			}
			modifier = {
				factor = 0.8
				NOT = { manpower_percentage = 0.5 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		increase_legitimacy_small_effect = yes				
		small_decrease_of_kobold_tolerance_effect = yes
		
		if = {
			limit = { has_estate = estate_kobold }
			add_estate_loyalty = {
				estate = estate_kobold
				loyalty = -5
			}
		}
		event_target:kobold_hindering_military_operations = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
				}
				add_province_modifier = {
					name = kobold_bands_punished_harshly
					duration = 1825
				}
				get_manpower_from_provinces = {	#bertus mod
					manpower_per_dev = -0.5
				}
				get_prestige_from_provinces = {	#bertus mod
					prestige_per_dev = 0.1
				}
			}
		}
	}
	
	option = {	# Punish the Kobolds found guilty
		name = kobold_tolerance_events.2.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { manpower_percentage = 0.5 }
			}
		}
		if = {
			limit = { has_estate = estate_kobold }
			add_estate_loyalty = {
				estate = estate_kobold
				loyalty = 5
			}
		}
		event_target:kobold_hindering_military_operations = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
				}
				add_province_modifier = {
					name = kobold_bands_punished
					duration = 1825
				}
			}
		}
	}
	option = {	# Ignore them
		name = kobold_tolerance_events.2.c
		ai_chance = {
			factor = 50
		}
		event_target:kobold_hindering_military_operations = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
				}
				add_province_modifier = {
					name = kobold_bands_not_punished
					duration = 1825
				}
			}
		}
	}
	option = {	# Maybe they can be recruited?
		name = kobold_tolerance_events.2.e
		trigger = { MIL = 2 }
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				has_dlc = "The Cossacks"
				has_estate = estate_nobles
				NOT = {
					estate_loyalty = {
						estate = estate_nobles
						loyalty = 50
					}
				}
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_hindering_military_operations = {
			area = {
				limit = {
					NOT = { has_province_modifier = kobold_bands_punished_harshly }
					NOT = { has_province_modifier = kobold_bands_punished }
					NOT = { has_province_modifier = kobold_bands_not_punished }
					has_kobold_minority_trigger = yes
				}
				add_province_modifier = {
					name = kobold_bands_not_punished
					duration = 1825
				}
				get_prestige_from_provinces = {	#bertus mod
					prestige_per_dev = -0.1
				}
				get_manpower_from_provinces = {	#bertus mod
					manpower_per_dev = 1
				}
			}
		}
	}
}

# Kobolds being harassed
country_event = {
	id = kobold_tolerance_events.3
	title = kobold_tolerance_events.3.t
	desc = kobold_tolerance_events.3.d
	picture = ANGRY_MOB_eventPicture
	GOTO = kobold_treated_unfairly_province
	
	is_triggered_only = yes
		
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = kobold_prefered_before_administration }
					NOT = { has_province_modifier = kobold_treated_unfairly }
					has_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_treated_unfairly_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# Support the kobolds
		name = kobold_tolerance_events.3.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		#add_dip_power = -10	#-10→0
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_treated_unfairly_province = {
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}
	
	option = {	# We cannot change how people think
		name = kobold_tolerance_events.3.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		small_decrease_of_kobold_tolerance_effect = yes	
	}
	
	option = {	# They ARE Pests!
		name = kobold_tolerance_events.3.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		medium_decrease_of_kobold_tolerance_effect = yes
		event_target:kobold_treated_unfairly_province = {
			get_manpower_from_provinces = {	#bertus mod
				manpower_per_dev = -1
			}
			remove_kobold_minority_size_effect = yes
		}
	}

}

# Kobold minister
country_event = {
	id = kobold_tolerance_events.4
	title = kobold_tolerance_events.4.t
	desc = kobold_tolerance_events.4.d
	picture = EXPLORERS_eventPicture

	is_triggered_only = yes

	# If you have a kobold culture province, that's the culture of the advisor
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_kobold_majority_trigger = yes
				}
				save_event_target_as = kobold_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Recruit the kobold
	option = {
		name = kobold_tolerance_events.4.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}		
		add_corruption = 2
		add_estate_loyalty = {
			estate = estate_kobold
			loyalty = 10
		}
		define_advisor = {
			type = idea_var_advisor_17
			skill = 3
			cost_multiplier = 0.75	#bertus mod
			culture = event_target:kobold_advisor_culture_province
			religion = event_target:kobold_advisor_culture_province
		}
		event_target:kobold_advisor_culture_province = {			
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}

	# A true exemplar of their race
	option = {
		name = kobold_tolerance_events.4.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_increase_tolerance_kobold = yes
			}
		}
		small_increase_of_kobold_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_kobold
			loyalty = 10
		}
	}

	# We dun give a shit
	option = {
		name = kobold_tolerance_events.4.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		small_decrease_of_kobold_tolerance_effect = yes
		increase_legitimacy_small_effect = yes
	}

	after = {
	}
}

# Kobolds rob a bank!
country_event = {
	id = kobold_tolerance_events.5
	title = kobold_tolerance_events.5.t
	desc = kobold_tolerance_events.5.d
	picture = COURT_eventPicture

	is_triggered_only = yes
	immediate = {
		random_owned_province = {	#bertus mod
			limit = {
				has_kobold_minority_trigger = yes
				controlled_by = ROOT
			}
			save_event_target_as = kobold_bank_robery
			set_variable = {which = province_manpower value = 0}
			export_to_variable = {which = province_manpower value = base_manpower}
			set_variable = {which = province_development value = 0}
			export_to_variable = {which = province_development value = development}
		}
		random_owned_province = {	#bertus mod
			limit = {
				has_kobold_minority_trigger = yes
				controlled_by = ROOT
				development = 20
			}
			save_event_target_as = kobold_bank_robery
			set_variable = {which = province_manpower value = 0}
			export_to_variable = {which = province_manpower value = base_manpower}
			set_variable = {which = province_development value = 0}
			export_to_variable = {which = province_development value = development}
		}
		random_owned_province = {	#bertus mod
			limit = {
				has_kobold_minority_trigger = yes
				controlled_by = ROOT
				development = 30
			}
			save_event_target_as = kobold_bank_robery
			set_variable = {which = province_manpower value = 0}
			export_to_variable = {which = province_manpower value = base_manpower}
			set_variable = {which = province_development value = 0}
			export_to_variable = {which = province_development value = development}
		}
		random_owned_province = {	#bertus mod
			limit = {
				has_kobold_minority_trigger = yes
				controlled_by = ROOT
				development = 40
			}
			save_event_target_as = kobold_bank_robery
			set_variable = {which = province_manpower value = 0}
			export_to_variable = {which = province_manpower value = base_manpower}
			set_variable = {which = province_development value = 0}
			export_to_variable = {which = province_development value = development}
		}
		random_owned_province = {	#bertus mod
			limit = {
				has_kobold_minority_trigger = yes
				controlled_by = ROOT
				development = 50
			}
			save_event_target_as = kobold_bank_robery
			set_variable = {which = province_manpower value = 0}
			export_to_variable = {which = province_manpower value = base_manpower}
			set_variable = {which = province_development value = 0}
			export_to_variable = {which = province_development value = development}
		}
	}
	# Educate them on the error of their ways
	option = {
		name = kobold_tolerance_events.5.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_bank_robery = {	#bertus mod
			get_treasury_from_provinces = {
				cash_per_dev = -5
			}
		}
		#add_dip_power = -20	#-20→0
	}
	# Punish them like any other criminal
	option = {
		name = kobold_tolerance_events.5.b
		#add_mil_power = -20	#-20→0
		event_target:kobold_bank_robery = {	#bertus mod
			get_manpower_from_provinces = {
				manpower_per_dev = -0.5
			}
		}
	}
	# Tax local kobold communities harder as a lesson
	option = {
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		name = kobold_tolerance_events.5.c
		small_decrease_of_kobold_tolerance_effect = yes
		#add_years_of_income = 0.3	#0.3→0
		event_target:kobold_bank_robery = {	#bertus mod
			area = {
				get_treasury_from_provinces = {
					cash_per_dev = 5
				}
			}
		}
	}
}

# Kobold tinkers release new invention
country_event = {
	id = kobold_tolerance_events.6
	title = kobold_tolerance_events.6.t
	desc = kobold_tolerance_events.6.d
	picture = INVENTION_eventPicture
	GOTO = kobold_invention_province

	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_any_kobold_pop_trigger = yes
					NOT = { has_province_modifier = kobold_inventions_unsafe }
					NOT = { has_province_modifier = kobold_inventions_OSHA_approved }
				}
				save_event_target_as = kobold_invention_province
			}
			random_owned_province = {
				limit = {
					has_any_kobold_pop_trigger = yes
					NOT = { has_province_modifier = kobold_inventions_unsafe }
					NOT = { has_province_modifier = kobold_inventions_OSHA_approved }
					OR = {
						trade_goods = iron
						trade_goods = gold
						trade_goods = copper
						trade_goods = gems
					}
				}
				save_event_target_as = kobold_invention_province
			}
			random_owned_province = {
				limit = {
					has_any_kobold_pop_trigger = yes
					NOT = { has_province_modifier = kobold_inventions_unsafe }
					NOT = { has_province_modifier = kobold_inventions_OSHA_approved }
					OR = {
						trade_goods = coal
						trade_goods = cloth
						trade_goods = paper
						trade_goods = glass
						trade_goods = dyes
						trade_goods = silk
					}
				}
				save_event_target_as = kobold_invention_province
			}
		}
	}

	# Cheap and effective? Go ahead!
	option = {
		name = kobold_tolerance_events.6.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		small_increase_of_kobold_tolerance_effect = yes
		if = {
			limit = { has_estate = estate_artificers }
			add_estate_loyalty = {
				estate = estate_artificers
				loyalty = -20
			}
		}
		if = {
			limit = { has_estate = estate_kobold }
			add_estate_loyalty = {
				estate = estate_kobold
				loyalty = 10
			}
		}
		event_target:kobold_invention_province = {
			area = {
				limit = { has_any_kobold_pop_trigger = yes }
				add_province_modifier = {
					name = kobold_inventions_unsafe
					duration = 3650
				}
			}
		}
	}
	# Demand they make it safer
	option = {
		name = kobold_tolerance_events.6.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_increase_tolerance_kobold = yes
			}
		}
		event_target:kobold_invention_province = {
			area = {
				limit = { has_any_kobold_pop_trigger = yes }
				add_province_modifier = {
					name = kobold_inventions_OSHA_approved
					duration = 3650
				}
			}
		}
	}
	# Stick with artificer-approved methods
	option = {
		name = kobold_tolerance_events.6.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		small_decrease_of_kobold_tolerance_effect = yes
		if = {
			limit = { has_estate = estate_kobold }
			add_estate_loyalty = {
				estate = estate_kobold
				loyalty = -10
			}
		}
		if = {
			limit = { has_estate = estate_artificers }
			add_estate_loyalty = {
				estate = estate_artificers
				loyalty = 10
			}
		}
	}
}

# Kobold hoard found by mob
country_event = {
	id = kobold_tolerance_events.7
	title = kobold_tolerance_events.7.t
	desc = kobold_tolerance_events.7.d
	picture = ACCUSATION_eventPicture
	GOTO = kobold_personal_hoard_province
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_personal_hoard_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					trade_goods = gold
				}
				save_event_target_as = kobold_personal_hoard_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_large_kobold_minority_trigger = yes
				}
				save_event_target_as = kobold_personal_hoard_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_large_kobold_minority_trigger = yes
					trade_goods = gold
				}
				save_event_target_as = kobold_personal_hoard_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# A kobold has a right to their hoard! Disperse the crowd!
	option = {
		name = kobold_tolerance_events.7.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
		}
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_personal_hoard_province = {
			get_manpower_from_provinces = {
				manpower_per_dev = -1
			}
		}
		add_estate_loyalty = {
			estate = estate_kobold
			loyalty = 10
		}		
	}

	# And what do you want me to do about it?
	option = {
		name = kobold_tolerance_events.7.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 5
				wants_to_maintain_tolerance_kobold = yes
			}
		}
		event_target:kobold_personal_hoard_province = {
			add_unrest = 5
			get_prestige_from_provinces = {
				prestige_per_dev = -0.5
			}
		}
	}

	# "Redistribute" the wealth to the people - after skimming a little off the top, of course
	option = {
		name = kobold_tolerance_events.7.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		medium_decrease_of_kobold_tolerance_effect = yes
		event_target:kobold_personal_hoard_province = {
			add_unrest = 5
			get_treasury_from_provinces = {
				cash_per_dev = 20
			}
		}
		add_estate_loyalty = {
			estate = estate_kobold
			loyalty = -20
		}		
	}
	# Let's make a little contribution ourselves
	option = {
		name = kobold_tolerance_events.7.e
		trigger = {
			OR = {
				ruler_has_personality = kind_hearted_personality
				ruler_has_personality = tolerant_personality
			}
		}
		highlight = yes
		ai_chance = {
			factor = 50
		}
		medium_increase_of_kobold_tolerance_effect = yes
		every_owned_province = {
			limit = { has_kobold_minority_trigger = yes }
			add_unrest = -3
		}
		event_target:kobold_personal_hoard_province = {
			get_treasury_from_provinces = {
				cash_per_dev = -5
			}
		}
		add_estate_loyalty = {
			estate = estate_kobold
			loyalty = 10
		}		
	}
}

# Kobold tunnels collapse building
country_event = {
	id = kobold_tolerance_events.8
	title = kobold_tolerance_events.8.t
	desc = kobold_tolerance_events.8.d
	picture = REVOLUTION_eventPicture
	GOTO = kobold_collapsed_building_province

	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { has_kobold_minority_trigger = yes }
				save_event_target_as = kobold_collapsed_building_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { 
					has_kobold_minority_trigger = yes
					has_any_building_trigger = yes
				}
				save_event_target_as = kobold_collapsed_building_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { 
					has_kobold_minority_trigger = yes
					has_any_building_trigger = yes
					development = 12
				}
				save_event_target_as = kobold_collapsed_building_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { 
					has_kobold_minority_trigger = yes
					has_any_building_trigger = yes
					development = 12
					has_terrain = farmlands
				}
				save_event_target_as = kobold_collapsed_building_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { 
					has_kobold_minority_trigger = yes
					has_any_building_trigger = yes
					development = 12
					has_terrain = city_terrain
				}
				save_event_target_as = kobold_collapsed_building_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Appease/work with them to have them build their tunnels in safer places
	option = {
		name = kobold_tolerance_events.8.a
		ai_chance = {
			factor = 50
		}
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_collapsed_building_province = {
			add_devastation = 25
			get_prestige_from_provinces = {
				prestige_per_dev = -0.5
			}
		}
	}
	# Focus on rebuilding efforts
	option = {
		name = kobold_tolerance_events.8.b
		ai_chance = {
			factor = 50
		}
		event_target:kobold_collapsed_building_province = {
			get_treasury_from_provinces = {
				cash_per_dev = -5
			}
		}
	}
	# Force them to help rebuild
	option = {
		name = kobold_tolerance_events.8.c
		ai_chance = {
			factor = 50
		}
		small_decrease_of_kobold_tolerance_effect = yes
		event_target:kobold_collapsed_building_province = {
			add_devastation = 15
		}
		add_estate_loyalty = {
			estate = estate_kobold
			loyalty = -10
		}
	}
}

# Burrows in the way of development
country_event = {
	id = kobold_tolerance_events.9
	title = kobold_tolerance_events.9.t
	desc = kobold_tolerance_events.9.d
	picture = REVOLUTION_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					has_construction = building
				}
				save_event_target_as = kobold_burrows_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Bribe them to leave
	option = {
		name = kobold_tolerance_events.9.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.1
				NOT = { years_of_income = 0.33 }
			}
		}
		#add_years_of_income = -0.33	#-0.33→0
		small_increase_of_kobold_tolerance_effect = yes
		event_target:kobold_burrows_province = {
			add_province_modifier = {
				name = kobold_burrows
				duration = 3650
			}			
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}
	# Scare them away
	option = {
		name = kobold_tolerance_events.9.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_increase_tolerance_kobold = yes
			}
		}
		small_decrease_of_kobold_tolerance_effect = yes
		event_target:kobold_burrows_province = {
			add_province_modifier = {
				name = kobold_burrows
				duration = 1825
			}		
			get_manpower_from_provinces = {	#bertus mod
				manpower_per_dev = -1
			}
		}
	}
	# Kill them all
	option = {
		name = kobold_tolerance_events.9.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_kobold = yes
			}
		}
		#add_mil_power = -20	#-20→0
		event_target:kobold_burrows_province = {
			get_manpower_from_provinces = {
				manpower_per_dev = -1
			}
			remove_kobold_minority_size_effect = yes
			add_devastation = 10
		}
		large_decrease_of_kobold_tolerance_effect = yes
	}
}

# Pesky traps!
country_event = {
	id = kobold_tolerance_events.10
	title = kobold_tolerance_events.10.t
	desc = kobold_tolerance_events.10.d
	picture = SIEGE_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					NOT = { has_province_modifier = kobold_pesky_traps }
				}
				save_event_target_as = kobold_traps_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					NOT = { has_province_modifier = kobold_pesky_traps }
					NOT = { development = 15 }
				}
				save_event_target_as = kobold_traps_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					NOT = { has_province_modifier = kobold_pesky_traps }
					NOT = { development = 10 }
				}
				save_event_target_as = kobold_traps_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					NOT = { has_province_modifier = kobold_pesky_traps }
					NOT = { development = 15 }
					NOT = { has_terrain = city_terrain }
				}
				save_event_target_as = kobold_traps_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_kobold_minority_trigger = yes
					NOT = { has_province_modifier = kobold_pesky_traps }
					NOT = { development = 10 }
					NOT = { has_terrain = city_terrain }
				}
				save_event_target_as = kobold_traps_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Hire willing kobolds to dismantle them
	option = {
		name = kobold_tolerance_events.10.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.5
				NOT = { years_of_income = -0.2 }
			}
		}
		event_target:kobold_traps_province = {	#bertus mod
			get_treasury_from_provinces = {
				cash_per_dev = -5
			}
		}
		#add_years_of_income = -0.2	#-0.2→0
		small_increase_of_kobold_tolerance_effect = yes
	}
	# Try to dismantle them ourselves
	option = {
		ai_chance = {
			factor = 50
		}
		name = kobold_tolerance_events.10.b
		event_target:kobold_traps_province = {
			add_province_modifier = {
				name = kobold_pesky_traps
				duration = 1825
			}
		}
	}
	# Send a force to smoke the perpetrators themselves out
	option = {
		name = kobold_tolerance_events.10.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_increase_tolerance_kobold = yes
			}
			modifier = {
				factor = 0.5
				NOT = { manpower_percentage = 0.5 }
			}
		}
		event_target:kobold_traps_province = {	#bertus mod
			get_manpower_from_provinces = {
				manpower_per_dev = -1
			}
		}
		medium_decrease_of_kobold_tolerance_effect = yes
	}
}