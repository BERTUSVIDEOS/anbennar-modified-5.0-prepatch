
namespace = halfling_tolerance_events

# Event organizer for the halfling tolerance events - should be a huge improvement to performance - having 1 overall check for having the minority instead of one for EACH new event that gets added
country_event = {
	id = halfling_tolerance_events.0
	title = race_setup_events.1.d
	desc = race_setup_events.1.d
	picture = BORDER_TENSION_eventPicture

	hidden = yes
	
	#is_triggered_only = yes
	trigger = {
		any_owned_province = {
			has_any_halfling_pop_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		days = 3650
		modifier = {
			factor = 0.75
			has_country_modifier = racial_focus_halfling
		}
		modifier = {
			factor = 0.75
			has_idea = tolerance_idea_2
		}
	}

	option = {
		random_list = {
			1 = {
				#do nothing
				modifier = {
					factor = 5
					high_tolerance_halfling_race_trigger = yes
				}
			}
			# Low quality goods
			1 = {
				trigger = {
					any_owned_province = {
						has_any_halfling_pop_trigger = yes
						NOT = { has_province_modifier = halfling_not_allowed_to_trade }
						NOT = { has_province_modifier = halfling_low_quality_wares }
						OR = {
							trade_goods = grain
							trade_goods = livestock
							trade_goods = fish
							trade_goods = wine
							trade_goods = sugar
							trade_goods = coffee
							trade_goods = tobacco
							trade_goods = cocoa
							trade_goods = dyes
						}
					}
				}
				modifier = {
					factor = 2
					low_tolerance_halfling_race_trigger = yes
				}
				modifier = {
					factor = 0.5
					high_tolerance_halfling_race_trigger = yes
				}
				country_event = {
					id = halfling_tolerance_events.1
				}
			}
			# Halflings demand compensation
			1 = {
				trigger = {
					any_owned_province = {
						NOT = { has_province_modifier = halfling_was_not_given_compensation }
						has_any_halfling_pop_trigger = yes
						OR = {
							trade_goods = grain
							trade_goods = livestock
							trade_goods = dyes
						}
					}
				}
				modifier = {
					factor = 0.9
					low_tolerance_halfling_race_trigger = yes
				}
				modifier = {
					factor = 1.1
					high_tolerance_halfling_race_trigger = yes
				}
				country_event = {
					id = halfling_tolerance_events.2
				}
			}
			# Halfling gift
			1 = {
				trigger = {
					any_owned_province = {
						NOT = { has_province_modifier = halfling_angry_over_not_accepting_gift }
						NOT = { has_province_modifier = halfling_punishment_of_local_traitors }
						has_any_halfling_pop_trigger = yes
					}
				}
				modifier = {
					factor = 1.5
					high_tolerance_halfling_race_trigger = yes
				}
				modifier = {
					factor = 2
					stability = 1
				}
				country_event = {
					id = halfling_tolerance_events.3
				}
			}
			# Halfling minister
			1 = {
				modifier = {
					factor = 1.5
					medium_tolerance_halfling_race_trigger = yes
				}
				modifier = {
					factor = 2
					high_tolerance_halfling_race_trigger = yes
				}
				country_event = {
					id = halfling_tolerance_events.4
				}
			}
			# halfling crime runs rampant
			1 = {
				trigger = {
					any_owned_province = {
						has_halfling_minority_trigger = yes
						NOT = { has_province_modifier = high_halfling_crime }
					}
				}
				modifier = {
					factor = 2
					low_tolerance_halfling_race_trigger = yes
				}
				modifier = {
					factor = 2
					NOT = { stability = 0 }
				}
				country_event = {
					id = halfling_tolerance_events.5
				}
			}
			# Halfling food festival
			1 = {
				trigger = {
					any_owned_province = {
						has_any_halfling_pop_trigger = yes
						NOT = { has_province_modifier = halfling_food_festival }
					}
				}
				modifier = {
					factor = 1.5
					high_tolerance_halfling_race_trigger = yes
				}
				modifier = {
					factor = 1.5
					medium_tolerance_halfling_race_trigger = yes
				}
				country_event = {
					id = halfling_tolerance_events.6
				}
			}
			# Halfling overpopulation
			1 = {
				trigger = {
					OR = {
						any_owned_province = {
							has_halfling_minority_trigger = yes
							has_large_halfling_minority_trigger = yes
						}
						any_owned_province = {
							has_halfling_minority_trigger = yes
							has_halfling_majority_trigger = yes
						}
					}
				}
				modifier = {
					factor = 1.5
					any_owned_province = {
						has_halfling_majority_trigger = yes
					}
				}
				modifier = {
					factor = 1.5
					stability = 1
				}
				country_event = {
					id = halfling_tolerance_events.7
				}
			}
			# Cheap workers
			1 = {
				trigger = {
					NOT = { culture_group = halfling }
					any_owned_province = {
						has_halfling_minority_trigger = yes
						NOT = { has_province_modifier = cheap_halfling_labour }	
					}
				}
				modifier = {
					factor = 2
					low_tolerance_halfling_race_trigger = yes
				}
				country_event = {
					id = halfling_tolerance_events.8
				}
			}
		}
	}
}

# Low quality goods (estate) - old event adapted
country_event = {
	id = halfling_tolerance_events.1
	title = halfling_tolerance_events.1.t
	desc = halfling_tolerance_events.1.d
	picture = MERCHANTS_TALKING_eventPicture
	GOTO = poor_wares_halfling_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
					has_halfling_minority_trigger = yes
					OR = {
						trade_goods = grain
						trade_goods = livestock
						trade_goods = fish
						trade_goods = wine
						trade_goods = sugar
						trade_goods = coffee
						trade_goods = tobacco
						trade_goods = cocoa
						trade_goods = dyes
					}
				}
				save_event_target_as = poor_wares_halfling_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
					has_halfling_minority_trigger = yes
					development = 6
					OR = {
						trade_goods = grain
						trade_goods = livestock
						trade_goods = fish
						trade_goods = wine
						trade_goods = tobacco
						trade_goods = dyes
					}
				}
				save_event_target_as = poor_wares_halfling_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
					has_halfling_majority_trigger = yes
					development = 12
					OR = {
						trade_goods = grain
						trade_goods = livestock
						trade_goods = dyes
					}
				}
				save_event_target_as = poor_wares_halfling_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# The merchants are right
		name = halfling_tolerance_events.1.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		small_decrease_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -10
		}
		event_target:poor_wares_halfling_province = {
			area = {
				limit = {
					owned_by = ROOT
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
				}
				add_province_modifier = {
					name = halfling_not_allowed_to_trade
					duration = 730
				}
			}
		}
	}
	
	option = {	# Let them trade
		name = halfling_tolerance_events.1.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_increase_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 10
		}
		event_target:poor_wares_halfling_province = {
			area = {
				limit = {
					owned_by = ROOT
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
				}
				add_province_modifier = {
					name = halfling_low_quality_wares
					duration = 730
				}
				get_prestige_from_provinces = {
					prestige_per_dev = -0.1
				}
			}
		}
	}
	
	option = {	# We need to confiscate their goods
		name = halfling_tolerance_events.1.c
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.01
				wants_to_increase_tolerance_halfling = yes
			}
		}
		medium_decrease_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -20
		}
		event_target:poor_wares_halfling_province = {
			area = {
				limit = {
					owned_by = ROOT
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
				}
				add_unrest = 5
				add_province_modifier = {
					name = halfling_not_allowed_to_trade
					duration = 730
				}
				get_treasury_from_provinces = {
					cash_per_dev = 5
				}
			}
		}
	}
	
	option = {	# Compesensate both parties to avoid further issues
		name = halfling_tolerance_events.1.e
		trigger = {
			OR = {
				ruler_has_personality = just_personality
				ruler_has_personality = kind_hearted_personality
			}
		}
						highlight = yes
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_increase_of_halfling_tolerance_effect = yes
		event_target:poor_wares_halfling_province = {
			area = {
				limit = {
					owned_by = ROOT
					NOT = { has_province_modifier = halfling_not_allowed_to_trade }
					NOT = { has_province_modifier = halfling_low_quality_wares }
				}
				get_treasury_from_provinces = {
					cash_per_dev = -2
				}
			}
		}
	}
	
	option = {	# Get rid of the complainers
		name = halfling_tolerance_events.1.f
		trigger = {
			OR = {
				ruler_has_personality = cruel_personality
				ruler_has_personality = malevolent_personality
			}
		}
		highlight = yes
		ai_chance = {
			factor = 100
		}
		event_target:poor_wares_halfling_province = {
			area = {
				limit = {
					owned_by = ROOT
				}				
				get_manpower_from_provinces = {
					manpower_per_dev = -0.1
				}
			}
		}
	}
}

# Old event - need review for inclusion
country_event = {
	id = halfling_tolerance_events.2
	title = halfling_tolerance_events.2.t
	desc = halfling_tolerance_events.2.d
	picture = ANGRY_MOB_eventPicture
	GOTO = halfling_prov
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_any_halfling_pop_trigger = yes
					NOT = { has_province_modifier = halfling_was_not_given_compensation }
				}
				save_event_target_as = halfling_prov
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# Comply with their demands
		name = halfling_tolerance_events.2.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_increase_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 20
		}
		every_owned_province = {
			limit = {
				NOT = { has_province_modifier = halfling_was_not_given_compensation }
				has_any_halfling_pop_trigger = yes
				OR = {
					trade_goods = grain
					trade_goods = livestock
					trade_goods = dyes
				}
			}
			get_treasury_from_provinces = {
				cash_per_dev = -1
			}
		}
	}
	option = {	# Greedy little...
		name = halfling_tolerance_events.2.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		small_decrease_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -20
		}
		every_owned_province = {
			limit = {
				NOT = { has_province_modifier = halfling_was_not_given_compensation }
				has_any_halfling_pop_trigger = yes
			}
			add_unrest = 5
			add_province_modifier = {
				name = halfling_was_not_given_compensation
				duration = 1825
			}
		}
	}	
	option = {	# We'll show them!
		name = halfling_tolerance_events.2.c
		trigger = {
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -20
		}
		small_decrease_of_halfling_tolerance_effect = yes
		every_owned_province = {
			limit = {
				NOT = { has_province_modifier = halfling_was_not_given_compensation }
				has_any_halfling_pop_trigger = yes
			}
			get_manpower_from_provinces = {
				manpower_per_dev = -0.1
			}
			add_province_modifier = {
				name = halfling_was_not_given_compensation
				duration = 730
			}
		}
	}
}

# Old event - need review for inclusion
country_event = {
	id = halfling_tolerance_events.3
	title = halfling_tolerance_events.3.t
	desc = halfling_tolerance_events.3.d
	picture = COURT_eventPicture
	GOTO = gift_halfling_province

	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = halfling_angry_over_not_accepting_gift }
					has_halfling_minority_trigger = yes
				}
				save_event_target_as = gift_halfling_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = halfling_angry_over_not_accepting_gift }
					has_halfling_minority_trigger = yes
					is_in_capital_area = yes
				}
				save_event_target_as = gift_halfling_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = halfling_angry_over_not_accepting_gift }
					has_any_halfling_pop_trigger = yes
				}
				save_event_target_as = gift_halfling_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	option = {	# Accept their gift...
		name = halfling_tolerance_events.3.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		reduce_legitimacy_small_effect = yes
		event_target:gift_halfling_province = {
			get_treasury_from_provinces = {
				cash_per_dev = 10
			}
		}
	}
	
	option = {	# This is indeed suspicious...
		name = halfling_tolerance_events.3.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				event_target:gift_halfling_province = { unrest = 1 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -10
		}
		small_decrease_of_halfling_tolerance_effect = yes
		event_target:gift_halfling_province = {
			add_province_modifier = {
				name = halfling_angry_over_not_accepting_gift
				duration = 1460
			}
		}
	}
	
	option = {	# We should reward them for their generousity!
		name = halfling_tolerance_events.3.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_increase_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 20
		}
		event_target:gift_halfling_province = {
			add_unrest = -1
		}
	}
	
	option = {	# ...this has to be a trap! Guards get them!
		name = halfling_tolerance_events.3.e
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.8
				event_target:gift_halfling_province = { unrest = 1 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		small_decrease_of_halfling_tolerance_effect = yes
		event_target:gift_halfling_province = {
			add_province_modifier = {
				name = halfling_punishment_of_local_traitors
				duration = 730
			}
			get_manpower_from_provinces = {
				manpower_per_dev = -0.5
			}
			remove_halfling_minority_size_effect = yes
		}
	}
}

# Recruit Halfling Minister
country_event = {
	id = halfling_tolerance_events.4
	title = halfling_tolerance_events.4.t
	desc = halfling_tolerance_events.4.d
	picture = MERCHANTS_TALKING_eventPicture
	GOTO = halfling_advisor_culture_province
	
	is_triggered_only = yes

	# If you have a halfling culture province, that's the one the advisor comes from
	immediate = {
		hidden_effect = {
			set_country_flag = halfling_advisor_culture_set
			random_owned_province = {
				limit = { has_halfling_minority_trigger = yes }
				save_event_target_as = halfling_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = { has_halfling_majority_trigger = yes }
				save_event_target_as = halfling_advisor_culture_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Recruit the halfling
	option = {
		name = halfling_tolerance_events.4.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_halfling = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_increase_of_halfling_tolerance_effect = yes
		add_corruption = 2
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 10
		}
		define_advisor = {
			type = trader
			skill = 3
			cost_multiplier = 0.75	#bertus mod
			culture = event_target:halfling_advisor_culture_province
			religion = event_target:halfling_advisor_culture_province
		}
		event_target:halfling_advisor_culture_province = {			
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}

	# A true exemplar of their race
	option = {
		name = halfling_tolerance_events.4.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_increase_tolerance_halfling = yes
			}
		}
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 10
		}
	}

	# We dun give a shit
	option = {
		name = halfling_tolerance_events.4.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_decrease_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -10
		}
		increase_legitimacy_small_effect = yes
	}

	after = {
		clr_country_flag = halfling_advisor_culture_set
	}
}

# Halfling crime runs rampant
country_event = {
	id = halfling_tolerance_events.5
	title = halfling_tolerance_events.5.t
	desc = halfling_tolerance_events.5.d
	picture = ASSASSINATION_eventPicture
	GOTO = high_halfling_crime_province

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_halfling_minority_trigger = yes
					NOT = { has_province_modifier = high_halfling_crime }
				}
				save_event_target_as = high_halfling_crime_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	# Crime is crime
	option = {
		name = halfling_tolerance_events.5.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		small_increase_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 10
		}
		event_target:high_halfling_crime_province = {
			add_province_modifier = {
				name = high_halfling_crime
				duration = 730
			}
			add_devastation = 10
		}
	}
	# Double the guards!
	option = {
		name = halfling_tolerance_events.5.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				wants_to_increase_tolerance_halfling = yes
			}
		}
		event_target:high_halfling_crime_province = {
			get_manpower_from_provinces = {	#bertus mod
				manpower_per_dev = -0.5
			}
		}
	}
	# All halflings are thieves! Arrest them all!
	option = {
		name = halfling_tolerance_events.5.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_halfling = yes
			}
		}
		large_decrease_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -10
		}
		event_target:high_halfling_crime_province = {
			add_unrest = 5
		}
	}
	# Make a deal with them
	option = {
		name = halfling_tolerance_events.5.e
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		medium_increase_of_halfling_tolerance_effect = yes
		event_target:high_halfling_crime_province = {
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
		}
	}
}

# Halfling food festival
country_event = {
	id = halfling_tolerance_events.6
	title = halfling_tolerance_events.6.t
	desc = halfling_tolerance_events.6.d
	picture = FEAST_eventPicture
	GOTO = halfling_food_festival_province

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_halfling_minority_trigger = yes
					NOT = { has_province_modifier = halfling_food_festival }
				}
				save_event_target_as = halfling_food_festival_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_large_halfling_minority_trigger = yes
					NOT = { has_province_modifier = halfling_food_festival }
				}
				save_event_target_as = halfling_food_festival_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_halfling_majority_trigger = yes
					NOT = { has_province_modifier = halfling_food_festival }
				}
				save_event_target_as = halfling_food_festival_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	# Support the festival
	option = {
		name = halfling_tolerance_events.6.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				NOT = { years_of_income = 0.3 }
			}
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.6 }
			}
			modifier = {
				factor = 0.5
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		medium_increase_of_halfling_tolerance_effect = yes
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 10
		}
		event_target:halfling_food_festival_province = {
			add_province_modifier = {
				name = food_festival
				duration = 1095
			}	
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -2
			}
		}
	}
	# An excellent tradition!
	option = {
		name = halfling_tolerance_events.6.b
		ai_chance = {
			factor = 50
		}
		event_target:halfling_food_festival_province = {
			add_province_modifier = {
				name = goblin_food_festival
				duration = 365
			}
		}
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 5
		}
	}
	# Damn gluttons
	option = {
		name = halfling_tolerance_events.6.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_increase_tolerance_halfling = yes
			}
		}
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -10
		}
		event_target:halfling_food_festival_province = {		
			remove_halfling_minority_size_effect = yes
			get_manpower_from_provinces = {	#bertus mod
				manpower_per_dev = -0.5
			}
			add_unrest = 5
		}
		medium_decrease_of_halfling_tolerance_effect = yes
	}
	# Invite the court to attend
	option = {
		name = halfling_tolerance_events.6.e
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		event_target:halfling_food_festival_province = {
			add_province_modifier = {
				name = food_festival
				duration = 365
			}
		}
		largest_increase_of_halfling_tolerance_effect = yes	
		if = {
			limit = {
				high_tolerance_halfling_race_trigger = yes
			}		
			add_estate_loyalty = {
				estate = all
				loyalty = 10
			}
		}
		else = {			
			add_estate_loyalty = {
				estate = all
				loyalty = -10
			}
			add_estate_loyalty = {
				estate = estate_halfling
				loyalty = 20
			}
			add_estate_loyalty = {
				estate = estate_mages
				loyalty = 20
			}
			add_estate_loyalty = {
				estate = estate_adventurers
				loyalty = 20
			}
		}
	}
}

# Halfling overpopulation - there do be a lot of them
country_event = {
	id = halfling_tolerance_events.7
	title = halfling_tolerance_events.7.t
	desc = halfling_tolerance_events.7.d
	picture = CITY_VIEW_eventPicture
	GOTO = halfling_overpopulated_province

	is_triggered_only = yes
		
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_large_halfling_minority_trigger = yes
				}
				save_event_target_as = halfling_overpopulated_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_large_halfling_minority_trigger = yes
					development = 20
				}
				save_event_target_as = halfling_overpopulated_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_halfling_majority_trigger = yes
				}
				save_event_target_as = halfling_overpopulated_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
			random_owned_province = {
				limit = {
					has_halfling_majority_trigger = yes
					development = 20
				}
				save_event_target_as = halfling_overpopulated_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}

	# Help them move
	option = {
		name = halfling_tolerance_events.7.a
		ai_chance = {
			factor = 50
		}
		small_increase_of_halfling_tolerance_effect = yes
		event_target:halfling_overpopulated_province = {
			get_treasury_from_provinces = {	#bertus mod
				cash_per_dev = -5
			}
			random_neighbor_province = {
				add_1_dev_to_provinces = yes
				add_halfling_minority_size_effect = yes
			}
		}
	}
	# Cool
	option = {
		name = halfling_tolerance_events.7.b
		ai_chance = {
			factor = 50
		}
		event_target:halfling_overpopulated_province = {
			add_devastation = 10
			random_neighbor_province = {
				add_1_dev_to_provinces = yes
				add_goblin_minority_size_effect = yes
			}
		}
	}
	# Ban them from moving
	option = {
		name = halfling_tolerance_events.7.c
		ai_chance = {
			factor = 50
		}
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = -10
		}
		medium_decrease_of_halfling_tolerance_effect = yes
		event_target:halfling_overpopulated_province = {		
			add_1_dev_to_provinces = yes	
			get_manpower_from_provinces = {	#bertus mod
				manpower_per_dev = -0.5
			}
		}
	}
}

# Cheap workers
country_event = {
	id = halfling_tolerance_events.8
	title = halfling_tolerance_events.8.t
	desc = halfling_tolerance_events.8.d
	picture = CITY_DEVELOPMENT_eventPicture
	GOTO = cheap_halfling_labour_province

	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_halfling_minority_trigger = yes
					NOT = { has_province_modifier = cheap_halfling_labour }	
				}
				save_event_target_as = cheap_halfling_labour_province
				set_variable = {which = province_manpower value = 0}
				export_to_variable = {which = province_manpower value = base_manpower}
				set_variable = {which = province_development value = 0}
				export_to_variable = {which = province_development value = development}
			}
		}
	}
	
	# Just pay them a better wage then
	option = {
		name = halfling_tolerance_events.8.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				NOT = { years_of_income = 0.3 }
			}
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.6 }
			}
			modifier = {
				factor = 0.5
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		medium_increase_of_halfling_tolerance_effect = yes	
		add_estate_loyalty = {
			estate = estate_halfling
			loyalty = 20
		}
		event_target:cheap_halfling_labour_province = {
			get_treasury_from_provinces = {
				cash_per_dev = -5
			}
		}
	}
	# It's a free market
	option = {
		name = halfling_tolerance_events.8.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_decrease_tolerance_halfling = yes
			}
		}
		event_target:cheap_halfling_labour_province = {
			add_province_modifier = {
				name = cheap_halfling_labour
				duration = 365
			}
		}
	}
	# Cheap labour is great!
	option = {
		name = halfling_tolerance_events.8.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_increase_tolerance_halfling = yes
			}
		}
		small_decrease_of_halfling_tolerance_effect = yes
		event_target:cheap_halfling_labour_province = {
			add_province_modifier = {
				name = cheap_halfling_labour
				duration = 1825
			}
		}
	}
}