
estate_gnomish_first_hand_chairman = {
	icon = privilege_empty_throne_black
	influence = 0.10
	loyalty = 0.10
	is_valid = {
	}
	can_select = {	
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes	
		NOT = {has_race_councelor = {type = first_hand}}
	}
	on_granted = {
		small_increase_of_gnomish_tolerance_effect = yes
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_gnomish_first_hand_chairman_modifier
				duration = -1
				hidden = yes
			}
		}
		custom_tooltip = estate_gnomish_first_hand_chairman_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {	
	}
	on_invalid_province = {
	}
	penalties = {
		global_missionary_strength = -0.01
	}
	benefits = {
		artificers_loyalty_modifier = 0.2
		artificers_influence_modifier = 0.2		
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			NOT = {has_country_modifier = gnomish_administration}
		}
		modifier = {
			legitimacy = -0.5
			devotion = -0.2
		}
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_diplomacy_chairman = {
	icon = privilege_empty_throne_blue
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		always = no	#via estate interactions
		NOT = {has_race_councelor = {type = diplomacy}}
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes		
		NOT = {has_race_councelor = {type = diplomacy}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_gnomish_diplomacy_chairman_modifier
				duration = -1
				hidden = yes
			}
		}
	}
	on_invalid = {
	}
	penalties = {
		fabricate_claims_cost= 0.5
	}
	benefits = {
		global_spy_defence = 0.2
		spy_offence = 0.2
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 1
	}
}
estate_gnomish_military_chairman = {
	icon = privilege_empty_throne_red
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		always = no	#via estate interactions
		NOT = {has_race_councelor = {type = military}}
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes	
		NOT = {has_race_councelor = {type = military}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_gnomish_military_chairman_modifier
				duration = -1
				hidden = yes
			}
			trigger_switch = {
				on_trigger = innovativeness
				100 = {add_country_modifier = {name = gnomish_militar_chairman_100 duration = -1 hidden = yes}}
				90 = {add_country_modifier = {name = gnomish_militar_chairman_90 duration = -1 hidden = yes}}
				80 = {add_country_modifier = {name = gnomish_militar_chairman_80 duration = -1 hidden = yes}}
				70 = {add_country_modifier = {name = gnomish_militar_chairman_70 duration = -1 hidden = yes}}
				60 = {add_country_modifier = {name = gnomish_militar_chairman_60 duration = -1 hidden = yes}}
				50 = {add_country_modifier = {name = gnomish_militar_chairman_50 duration = -1 hidden = yes}}
				40 = {add_country_modifier = {name = gnomish_militar_chairman_40 duration = -1 hidden = yes}}
				30 = {add_country_modifier = {name = gnomish_militar_chairman_30 duration = -1 hidden = yes}}
				20 = {add_country_modifier = {name = gnomish_militar_chairman_20 duration = -1 hidden = yes}}
				10 = {add_country_modifier = {name = gnomish_militar_chairman_10 duration = -1 hidden = yes}}
			}
		}	
		custom_tooltip = estate_gnomish_military_chairman_tooltip
	}
	penalties = {
		war_exhaustion_cost = 0.25
	}
	benefits = {
		artillery_levels_available_vs_fort = 1
	}
	on_revoked = {
		if = {
			limit = {
				OR = {
					has_country_modifier = ogre_administration
				}
			}
			add_stability = 1
			add_legitimacy = 20
			add_devotion = 10
			add_republican_tradition = 5
		}
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 1
	}
}
estate_gnomish_economic_chairman = {
	icon = privilege_empty_throne_yellow
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		always = no	#via estate interactions
		NOT = {has_race_councelor = {type = economic}}
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes		
		NOT = {has_race_councelor = {type = economic}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_gnomish_economic_chairman_modifier
				duration = -1
				hidden = yes
			}
		}	
	}
	on_revoked_province = {
	}
	on_invalid = {	
	}
	on_invalid_province = {
	}
	benefits = {
		production_efficiency = 0.10
		interest = -0.25
	}
	penalties = {
		state_maintenance_modifier = 0.2
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_navy_chairman = {
	icon = privilege_empty_throne_purple
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		always = no	#via estate interactions
		NOT = {has_race_councelor = {type = navy}}
		any_owned_province = {
			has_port = yes
		}
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes	
		NOT = {has_race_councelor = {type = navy}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_gnomish_navy_chairman_modifier
				duration = -1
				hidden = yes
			}
		}	
	}
	penalties = {
		global_colonial_growth = -15
	}
	benefits = {
		heavy_ship_power = 0.1
		ship_durability = 0.1
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 1
	}
}
estate_gnomish_recruitment = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		NOT = {mil_tech = 2}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {		
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_2
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_2 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 2
		NOT = {mil_tech = 5}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 0.4
		cavalry_cost = 0.1
		infantry_fire = 0.07
		infantry_shock = -0.1
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_5
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_5 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 5
		NOT = {mil_tech = 6}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 0.8
		cavalry_cost = 0.2
		infantry_fire = 0.07
		infantry_shock = -0.13
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_6
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_6 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 6
		NOT = {mil_tech = 7}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 0.8
		cavalry_cost = 0.2
		infantry_fire = 0.11
		infantry_shock = -0.19
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_7
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_7 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10	
	is_valid = {
		mil_tech = 7
		NOT = {mil_tech = 8}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 0.8
		cavalry_cost = 0.2
		infantry_fire = 0.11
		infantry_shock = -0.19	
		artillery_fire = 0.10
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_8
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_8 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10	
	is_valid = {
		mil_tech = 8
		NOT = {mil_tech = 9}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 0.8
		cavalry_cost = 0.2
		infantry_fire = 0.2
		infantry_shock = -0.19
		artillery_fire = 0.10	
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_9
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_9 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10	
	is_valid = {
		mil_tech = 9
		NOT = {mil_tech = 11}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 1.2
		cavalry_cost = 0.3
		infantry_fire = 0.2
		infantry_shock = -0.19
		artillery_fire = 0.10	
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_11
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_11 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10	
	is_valid = {
		mil_tech = 11
		NOT = {mil_tech = 13}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 1.2
		cavalry_cost = 0.3
		infantry_fire = 0.2
		infantry_shock = -0.23	
		artillery_fire = 0.10
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_13
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_13 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10	
	is_valid = {
		mil_tech = 13
		NOT = {mil_tech = 14}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 1.6
		cavalry_cost = 0.4
		infantry_fire = 0.2
		infantry_shock = -0.23	
		artillery_fire = 0.20
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_14
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_14 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 14
		NOT = {mil_tech = 16}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 1.6
		cavalry_cost = 0.4
		infantry_fire = 0.22
		infantry_shock = -0.23	
		artillery_fire = 0.20
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_16
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_16 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 16
		NOT = {mil_tech = 17}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 1.6
		cavalry_cost = 0.4
		infantry_fire = 0.22
		infantry_shock = -0.23	
		artillery_fire = 0.40
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_17
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_17 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 17
		NOT = {mil_tech = 20}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.0
		cavalry_cost = 0.5
		infantry_fire = 0.22
		infantry_shock = -0.23	
		artillery_fire = 0.40
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_20
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_20 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 20
		NOT = {mil_tech = 21}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.0
		cavalry_cost = 0.5
		infantry_fire = 0.32
		infantry_shock = -0.23	
		artillery_fire = 0.40
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_21
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_21 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 21
		NOT = {mil_tech = 22}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.4
		cavalry_cost = 0.6
		infantry_fire = 0.32
		infantry_shock = -0.33	
		artillery_fire = 0.40
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_22
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_22 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 22
		NOT = {mil_tech = 25}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.4
		cavalry_cost = 0.6
		infantry_fire = 0.32
		infantry_shock = -0.33	
		artillery_fire = 0.60
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_25
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_25 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 25
		NOT = {mil_tech = 27}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.8
		cavalry_cost = 0.7
		infantry_fire = 0.32
		infantry_shock = -0.33	
		artillery_fire = 0.80
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_27
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_27 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 27
		NOT = {mil_tech = 28}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.8
		cavalry_cost = 0.7
		infantry_fire = 0.42
		infantry_shock = -0.33	
		artillery_fire = 0.80
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_28
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_28 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 28
		NOT = {mil_tech = 29}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 2.8
		cavalry_cost = 0.7
		infantry_fire = 0.42
		infantry_shock = -0.43
		artillery_fire = 0.80
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_29
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_29 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 29
		NOT = {mil_tech = 31}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 3.2
		cavalry_cost = 0.8
		infantry_fire = 0.42
		infantry_shock = -0.43
		artillery_fire = 0.80
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_31
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_31 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 31
		NOT = {mil_tech = 32}
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 3.2
		cavalry_cost = 0.8
		infantry_fire = 0.62
		infantry_shock = -0.43
		artillery_fire = 0.80
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
		update_gnomish_recruitment = yes
		set_estate_privilege = estate_gnomish_recruitment_32
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_recruitment_32 = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {
		mil_tech = 32
	}
	can_select = {		
		high_tolerance_gnomish_race_trigger = yes
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_gnomish_recruitment_flag
			country_event = { id = bertus_racial_military.1001 }
			if = {
				limit = { NOT = { has_country_flag = estate_gnomish_recruitment_cooldown_flag } }
				set_country_flag = estate_gnomish_recruitment_cooldown_flag
			}
		}
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
	}
	modifier_by_land_ownership = {
		cavalry_fire = 3.6
		cavalry_cost = 0.9
		infantry_fire = 0.62
		infantry_shock = -0.43
		artillery_fire = 1.0
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	can_revoke = {
		had_country_flag = {
			flag = estate_gnomish_recruitment_cooldown_flag
			days = 7300
		}
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_gnomish_recruitment_flag
			clr_country_flag = estate_gnomish_recruitment_cooldown_flag
			country_event = { id = bertus_racial_military.1001 }
		}
	}
	on_invalid = {
		clr_country_flag = estate_gnomish_recruitment_flag
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_gnomish_extensive_recruitment = {
	icon = privilege_recruit_rajput_general
	loyalty = -0.20
	is_valid = {
		always = no
		has_race_recruitment = {
			race = gnomish
		}
		army_professionalism = 0.20
	}
	can_select = {
		army_professionalism = 0.40
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
	}
	modifier_by_land_ownership = {
		yearly_army_professionalism = -0.03
		manpower_recovery_speed = 0.5
	}
	mechanics = {
	}
	on_revoked = {
	}
	on_invalid = {
	}
	cooldown_years = 5
	ai_will_do = {
		factor = 1
	}
}
estate_gnomish_elite_regiments = {
	icon = privilege_recruit_rajput_general
	is_valid = {
		has_race_recruitment = {
			race = gnomish
		}
		has_country_modifier = gnomish_military
	}
	can_select = {
		has_elite_regiments = no
	}
	on_granted = {
		add_country_modifier = {
			name = elite_guard_modifier
			duration = -1
		}
	}
	penalties = {
		yearly_corruption = 0.20
	}
	benefits = {
		allowed_cossack_fraction = 0.05
	}
	mechanics = {}
	on_revoked = {
		remove_country_modifier = elite_guard_modifier
	}
	on_invalid = {
		remove_country_modifier = elite_guard_modifier
	}
	cooldown_years = 20
	ai_will_do = { factor = 1 }
}
estate_gnomish_intolerance_policy = {
	icon = privilege_gnomish_supremacy	
	influence = 0.10
	is_valid = {
		if = {
			limit = {
				has_global_flag = call_to_reaction_hre_flag
				is_part_of_hre = yes
			}
			always = no
		}
		has_country_modifier = gnomish_military
		has_country_modifier = gnomish_administration
	}
	can_select = {
		estate_territory = {
			estate = estate_gnomish
			territory = 70
		}
	}
	on_granted = {
		custom_tooltip = estate_gnomish_one_culture_gta
		custom_tooltip = estate_gnomish_one_culture_gtb
		custom_tooltip = non_gnomish_alliance_malus_tt
		remove_racial_culture = { race = human }
		remove_racial_culture = { race = elven }
		remove_racial_culture = { race = dwarven }
		remove_racial_culture = { race = halfling }
		remove_racial_culture = { race = harimari }
		remove_racial_culture = { race = gnollish }
		remove_racial_culture = { race = ruinborn }
		remove_racial_culture = { race = orcish }
		remove_racial_culture = { race = goblin }
		remove_racial_culture = { race = ogre }
		remove_racial_culture = { race = centaur }
		remove_racial_culture = { race = troll }
		remove_racial_culture = { race = harpy }
		remove_racial_culture = { race = half_orcish }
		remove_racial_culture = { race = half_elven }
		remove_racial_culture = { race = hobgoblin }
		remove_racial_culture = { race = kobold }
		hidden_effect = {
			every_known_country = {
				limit = {
					NOT = { has_country_modifier = gnomish_administration }
				}
				reverse_add_opinion = {
					who = ROOT
					modifier = opinion_supremacy_race
				}
			}
		}
	}
	on_granted_province = {
		add_racial_superiority_modifier = {
			race = gnomish
		}
	}
	penalties = {
		tolerance_heathen = -2
		tolerance_heretic = -2
	}
	benefits = {
	}
	conditional_modifier = {
		trigger = {
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 1
				}
			}
		}
		modifier = {
			global_missionary_strength = 0.01
			max_absolutism = 10
			development_cost_in_primary_culture = -0.025
			relation_with_other_culture = -10
		}
	}
	conditional_modifier = {
		trigger = {
			calc_true_if = {
				has_government_attribute = faster_purguing_reform
				has_idea = total_supremacy
				amount = 1
			}
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 2
				}
			}
		}
		modifier = {
			global_missionary_strength = 0.02
			max_absolutism = 20
			development_cost_in_primary_culture = -0.05
			relation_with_other_culture = -20
		}
	}
	conditional_modifier = {
		trigger = {
			calc_true_if = {
				has_government_attribute = faster_purguing_reform
				has_idea = total_supremacy
				amount = 2
			}
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 3
				}
			}
		}
		modifier = {
			global_missionary_strength = 0.03
			max_absolutism = 30
			development_cost_in_primary_culture = -0.075
			relation_with_other_culture = -30
		}
	}
	conditional_modifier = {
		trigger = {
			calc_true_if = {
				has_government_attribute = faster_purguing_reform
				has_idea = total_supremacy
				amount = 3
			}
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 4
				}
			}
		}
		modifier = {
			global_missionary_strength = 0.04
			max_absolutism = 40
			development_cost_in_primary_culture = -0.10
			relation_with_other_culture = -40
		}
	}
	conditional_modifier = {
		trigger = {
			any_known_country = {
				NOT = { culture_is_gnomish = yes }
				war_with = root
			}
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 1
				}
			}
		}
		modifier = {
			morale_damage = 0.05
			shock_damage = 0.05
			fire_damage = 0.05
			manpower_recovery_speed = 0.05
			reinforce_speed = 0.1
			recover_army_morale_speed = 0.025			
		}
	}
	conditional_modifier = {
		trigger = {
			any_known_country = {
				NOT = { culture_is_gnomish = yes }
				war_with = root
			}
			calc_true_if = {
				has_government_attribute = faster_purguing_reform
				has_idea = total_supremacy
				amount = 1
			}
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 2
				}
			}
		}
		modifier = {
			morale_damage = 0.10
			shock_damage = 0.10
			fire_damage = 0.10
			manpower_recovery_speed = 0.10
			reinforce_speed = 0.20
			recover_army_morale_speed = 0.05
		}
	}
	conditional_modifier = {
		trigger = {
			any_known_country = {
				NOT = { culture_is_gnomish = yes }
				war_with = root
			}
			calc_true_if = {
				has_government_attribute = faster_purguing_reform
				has_idea = total_supremacy
				amount = 2
			}
			NOT = {
				calc_true_if = {
					has_government_attribute = faster_purguing_reform
					has_idea = total_supremacy
					amount = 3
				}
			}
		}
		modifier = {
			morale_damage = 0.15
			shock_damage = 0.15
			fire_damage = 0.15
			manpower_recovery_speed = 0.15
			reinforce_speed = 0.30
			recover_army_morale_speed = 0.075
		}
	}
	on_revoked = {
		custom_tooltip = estate_one_culture_rta
		custom_tooltip = estate_one_culture_rtb
		hidden_effect = {
			every_known_country = {
				limit = {
					ROOT = { has_opinion_modifier = { modifier = opinion_supremacy_race who = FROM } }
				}
				reverse_remove_opinion = { modifier = opinion_supremacy_race who = ROOT }
			}
		}
	}
	on_revoked_province = {
		remove_racial_superiority_modifier = yes
	}
	on_invalid_province = {
		remove_racial_superiority_modifier = yes
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = {
			id = gnomish_tolerance_events.5002
		}
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_autonomy = {
	icon = privilege_gnomish_autonomy
	loyalty = 0.2
	influence = 0.10
	is_valid = {
		NOT = { has_country_modifier = gnomish_administration }
		NOT = { has_country_modifier = racial_pop_gnomish_purge }
		NOT = { has_country_modifier = racial_pop_gnomish_expulsion }
		NOT = { has_estate_privilege = estate_gnomish_taxation_policy }
	}
	can_select = {
		any_owned_province = {
			culture_is_gnomish = yes
		}
	}
	on_granted = {
		small_increase_of_gnomish_tolerance_effect = yes
		custom_tooltip = estate_guaranteed_gnomish_autonomy_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {culture_is_gnomish = yes}
			add_province_modifier = {
				name = estate_guaranteed_autonomy_mod
				duration = -1
			}
		}
		else_if = {
			limit = {has_province_modifier = estate_guaranteed_autonomy_mod}
			remove_province_modifier = estate_guaranteed_autonomy_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = {has_province_modifier = estate_guaranteed_autonomy_mod}
			remove_province_modifier = estate_guaranteed_autonomy_mod
		}
	}
	on_invalid_province = {
		if = {
			limit = {has_province_modifier = estate_guaranteed_autonomy_mod}
			remove_province_modifier = estate_guaranteed_autonomy_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = {
			id = gnomish_tolerance_events.5001
		}
	}
}
estate_gnomish_taxation_policy = {
	icon = privilege_gnomish_taxation
	loyalty = -0.1
	is_valid = {
		NOT = { has_country_modifier = gnomish_administration }
		NOT = { has_country_modifier = racial_focus_gnomish }
		NOT = { has_country_modifier = racial_pop_gnomish_expulsion }
		NOT = { has_country_modifier = racial_pop_gnomish_purge }
	}
	can_select = {
		any_owned_province = { culture_is_gnomish = yes }
	}
	on_granted = {
		small_decrease_of_gnomish_tolerance_effect = yes
		custom_tooltip = estate_gnomish_taxation_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {culture_is_gnomish = yes}
			add_province_modifier = { name = estate_racial_taxation_mod duration = -1 }
			province_event = {id = bertus_pops.1041}
		}
		else_if = {
			limit = {has_province_modifier = estate_racial_taxation_mod}
			remove_province_modifier = estate_racial_taxation_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = {has_province_modifier = estate_racial_taxation_mod}
			remove_province_modifier = estate_racial_taxation_mod
			province_event = {id = bertus_pops.1055}
		}
	}
	on_invalid_province = {
		if = {
			limit = {has_province_modifier = estate_racial_taxation_mod}
			remove_province_modifier = estate_racial_taxation_mod
			province_event = {id = bertus_pops.1055}
		}
	}
	penalties = {}
	benefits = {}
	ai_will_do = {factor = 0}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = gnomish_tolerance_events.5003 }
	}
}
estate_gnomish_purge = {
	icon = privilege_gnomish_purge
	loyalty = -0.2
	influence = -0.20
	is_valid = {
		NOT = { has_country_modifier = racial_pop_gnomish_expulsion }
		NOT = { has_country_modifier = racial_focus_gnomish }
		NOT = { has_estate_privilege = estate_gnomish_taxation_policy }
	}
	can_select = {
		can_purge_race = {RACE = gnomish}
	}
	on_granted = {		
		largest_decrease_of_gnomish_tolerance_effect = yes
		add_country_modifier = { name = racial_pop_gnomish_purge duration = -1 desc = while_policy_active }
		
		custom_tooltip = racial_pop_events_debug.3.tooltip
		
		custom_tooltip = pop_menu_purge_effect_unrest_tt
		
		hidden_effect = {
			add_purguing_unrest = {race = gnomish}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {		
		remove_country_modifier = racial_pop_gnomish_purge
	}
	on_invalid = {
		remove_country_modifier = racial_pop_gnomish_purge
	}
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0.1
			medium_tolerance_gnomish_race_trigger = yes
		}
		modifier = {
			factor = 1000
			NOT = {liberty_desire = 50}
			NOT = {has_country_modifier = gnomish_administration}
			overlord = {
				has_country_modifier = racial_pop_gnomish_purge
			}
		}
		modifier = {
			factor = 10
			NOT = {liberty_desire = 50}
			NOT = {has_country_modifier = gnomish_administration}
			overlord = {
				OR = {
					has_estate_privilege = estate_human_intolerance_policy
					has_estate_privilege = estate_dwarven_intolerance_policy
					has_estate_privilege = estate_halfling_intolerance_policy
					has_estate_privilege = estate_elven_intolerance_policy
					has_estate_privilege = estate_harimari_intolerance_policy
					has_estate_privilege = estate_gnollish_intolerance_policy
					has_estate_privilege = estate_ruinborn_intolerance_policy
					has_estate_privilege = estate_orcish_intolerance_policy
					has_estate_privilege = estate_goblin_intolerance_policy
					has_estate_privilege = estate_ogre_intolerance_policy
					has_estate_privilege = estate_centaur_intolerance_policy
					has_estate_privilege = estate_troll_intolerance_policy
					has_estate_privilege = estate_harpy_intolerance_policy
					has_estate_privilege = estate_half_elven_intolerance_policy
					has_estate_privilege = estate_half_orcish_intolerance_policy
					has_estate_privilege = estate_hobgoblin_intolerance_policy
					has_estate_privilege = estate_kobold_intolerance_policy
					has_estate_privilege = estate_lizardfolk_intolerance_policy
				}
			}
		}
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_gnomish_expulsion = {
	icon = privilege_gnomish_expulsion
	loyalty = -0.1
	influence = -0.1
	is_valid = {
		NOT = { has_country_modifier = racial_pop_gnomish_purge }
		NOT = { has_country_modifier = racial_focus_gnomish }
		NOT = { has_estate_privilege = estate_gnomish_taxation_policy }
	}
	can_select = {
		can_expel_race = {RACE = gnomish}
	}
	on_granted = {				
		large_decrease_of_gnomish_tolerance_effect = yes
		
		add_country_modifier = { 
			name = racial_pop_gnomish_expulsion
			duration = -1  
			desc = while_policy_active 
		}
		
		custom_tooltip = racial_pop_events_debug.2.tooltip
		
		custom_tooltip = pop_menu_expel_effect_unrest_tt
		
		hidden_effect = {
			add_expulsion_unrest = {
				race = gnomish
			}
		}
	}
	benefits = {
	}
	on_revoked = {		
		remove_country_modifier = racial_pop_gnomish_expulsion
	}
	on_invalid = {
		remove_country_modifier = racial_pop_gnomish_expulsion
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_gnomish_focus = {
	icon = privilege_grant_autonomy
	loyalty = 0.1
	influence = 0.1
	is_valid = {			
		if = {
			limit = {
				has_global_flag = call_to_action_hre_flag
			}
			is_part_of_hre = no
		}	
		NOT = { has_country_modifier = gnomish_administration }
		NOT = { has_country_modifier = gnomish_military }	
		NOT = { has_country_modifier = racial_pop_gnomish_purge }
		NOT = { has_country_modifier = racial_pop_gnomish_expulsion }	
	}
	can_select = {
		NOT = {
			OR = {
				has_country_modifier = racial_pop_gnomish_purge
				has_country_modifier = racial_pop_gnomish_expulsion
			}
		}
		NOT = { has_racial_focus = yes }
	}
	on_granted = {	
		custom_tooltip = pop_menu_focus_desc_tt
		add_country_modifier = {
			name = racial_focus_gnomish
			duration = -1
		}
	}
	benefits = {
	}
	on_revoked = {		
		remove_country_modifier = racial_focus_gnomish
	}
	on_invalid = {
		remove_country_modifier = racial_focus_gnomish
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_gnomish_non_military_swap = {
	icon = privilege_grant_autonomy
	loyalty = 0.1
	is_valid = {	
		any_owned_province = {
			culture_is_gnomish = yes
			has_province_modifier = non_military_pop
		}
	}
	can_select = {
		NOT = {
			OR = {
				has_country_modifier = racial_pop_gnomish_purge
				has_country_modifier = racial_pop_gnomish_expulsion
			}
		}
	}
	on_granted = {	
		custom_tooltip = non_military_swap_tt
	}
	benefits = {
	}
	on_revoked = {		
	}
	on_invalid = {
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_gnomish_diplomatic_education = {
	icon = privilege_promote_maratha_nobility
	influence = 0.10
	is_valid = {
		NOT = {
			heir_dip = 5
		}
		has_heir = yes
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_estate_privilege = estate_gnomish_diplomatic_education}
	}
	on_granted = {
		custom_tooltip = estate_diplomatic_education_tooltip
	}
	penalties = {
		yearly_corruption = 0.2
	}
	benefits = {
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = short_lived_personality
		}
		modifier = {
			yearly_corruption = -0.1
		}
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = elven_administration
		}
		modifier = {
			yearly_corruption = 0.6
		}
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = gnomish_administration
		}
		modifier = {
			yearly_corruption = 0.4
		}
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = dwarven_administration
		}
		modifier = {
			yearly_corruption = 0.2
		}
	}
	on_revoked = {
	}
	on_invalid = {
	}
	cooldown_years = 5
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_diplomatic_education
		if = {
			limit = {
				NOT = {
					heir_dip = 5
				}
			}
			change_heir_dip = 1
		}
	}
	ai_will_do = {
		factor = 5
	}
}
estate_gnomish_colonizers = {
	icon = privilege_new_world_mission
	is_valid = {
		OR = {
			num_of_colonists = 1
			any_owned_province = {
				has_empty_adjacent_province = yes
			}
		}
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		high_tolerance_gnomish_race_trigger = yes
		OR = {
			has_estate_privilege = estate_gnomish_economic_chairman
			has_country_modifier = estate_gnomish_economic_chairman_modifier
		}
	}
	on_granted = {
	}
	benefits = {
		global_colonial_growth = 20
		colonists = 1
	}
	penalties = {
		yearly_corruption = 0.2
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_loans = {
	icon = privilege_give_money
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		NOT = {
			has_country_flag = hoard_bank_reform
		}
	}
	can_select = {
		estate_influence = {
			estate = estate_gnomish
			influence = 40
		}
		NOT = {has_estate_privilege = estate_halfling_loans}
		NOT = {has_estate_privilege = estate_dwarven_loans}
		NOT = {has_country_modifier = estate_loan_cooldown_modifier}
		is_bankrupt = no
		high_tolerance_gnomish_race_trigger = yes
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_loan_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		if = {
			limit = {
				has_estate_privilege = estate_gnomish_economic_chairman
			}
			custom_tooltip = estate_burghers_indebted_to_burghers_effect_tooltip
			tooltip = {
				add_inflation = 2
			}
			hidden_effect = {
				add_inflation = 1.5
				add_loan = {
					fixed_interest = 1
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 1
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 1
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 1
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 1
					duration = 60
					estate_loan = yes
				}
			}
		}
		else = {
			custom_tooltip = estate_suboptimal_indebted_to_burghers_effect_tooltip
			tooltip = {
				add_inflation = 2
			}
			hidden_effect = {
				add_inflation = 1.5
				add_loan = {
					fixed_interest = 2
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 2
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 2
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 2
					duration = 60
					estate_loan = yes
				}
				add_loan = {
					fixed_interest = 2
					duration = 60
					estate_loan = yes
				}
			}
		}
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_incense = {
	icon = privilege_monopoly_of_goods_incence
	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = incense
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_incense_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_incense_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = incense
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_INCENSE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_incense_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = incense
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_brahmins_monopoly_of_incense_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_incense_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_incense_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_brahmins_monopoly_of_incense
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_fish = {
	icon = privilege_monopoly_of_goods_fish	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = fish
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_fish_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_fish_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = fish
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_FISH_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_fish_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = fish
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_fish_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_fish_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_fish_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_fish
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_livestock = {
	icon = privilege_monopoly_of_goods_livestock	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = livestock
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_livestock_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_livestock_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = livestock
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_LIVESTOCK_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_livestock_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = livestock
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_livestock_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_livestock_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_livestock_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_livestock
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_naval_supplies = {
	icon = privilege_monopoly_of_goods_naval_supplies	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = naval_supplies
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_naval_supplies_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_naval_supplies_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = naval_supplies
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_NAVAL_SUPPLIES_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_naval_supplies_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = naval_supplies
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_naval_supplies_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_naval_supplies_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_naval_supplies_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_naval_supplies
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_cloth = {
	icon = privilege_monopoly_of_goods_cloth	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = cloth
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_cloth_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_cloth_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = cloth
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CLOTH_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_cloth_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = cloth
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_cloth_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_cloth_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_cloth_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_cloth
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_glass = {
	icon = privilege_monopoly_of_goods_glass	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = glass
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_glass_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_glass_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = glass
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_GLASS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_glass_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = glass
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_glass_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_glass_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_glass_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_glass
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_paper = {
	icon = privilege_monopoly_of_goods_paper	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = paper
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_paper_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_paper_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}		
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = paper
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_PAPER_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_paper_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = paper
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_paper_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_paper_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_paper_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_paper
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_gems = {
	icon = privilege_monopoly_of_goods_gems	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = gems
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_gems_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_gems_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = gems
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_GEMS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_gems_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = gems
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_gems_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_gems_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_gems_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_gems
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_silk = {
	icon = privilege_monopoly_of_goods_silk	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = silk
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_silk_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_silk_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = silk
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_SILK_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_silk_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = silk
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_silk_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_silk_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_silk_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_silk
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_ivory = {
	icon = privilege_monopoly_of_goods_ivory	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = ivory
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_ivory_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_ivory_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = ivory
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_IVORY_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_ivory_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = ivory
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_ivory_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_ivory_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_ivory_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_ivory
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_chinaware = {
	icon = privilege_monopoly_of_goods_chinaware	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = chinaware
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_chinaware_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_chinaware_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = chinaware
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CHINAWARE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_chinaware_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = chinaware
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_chinaware_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_chinaware_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_chinaware_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_chinaware
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_coffee = {
	icon = privilege_monopoly_of_goods_coffee	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = coffee
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_coffee_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_coffee_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = coffee
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_COFFEE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_coffee_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = coffee
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_coffee_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_coffee_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_coffee_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_coffee
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_cloves = {
	icon = privilege_monopoly_of_goods_cloves	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = cloves
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_cloves_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_cloves_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = cloves
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CLOVES_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_cloves_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = cloves
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_cloves_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_cloves_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_cloves_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_cloves
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_precursor_relics = {
	icon = privilege_monopoly_of_goods_precursor_relics	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = precursor_relics
			culture_is_gnomish = yes
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_precursor_relics_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_precursor_relics_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = precursor_relics
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRECURSOR_RELICS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_precursor_relics_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = precursor_relics
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_precursor_relics_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_precursor_relics_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_precursor_relics_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_precursor_relics
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_apiculture = {
	icon = privilege_monopoly_of_goods_apiculture	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = apiculture
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_apiculture_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_apiculture_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = apiculture
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_APICULTURE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_apiculture_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = apiculture
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_apiculture_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_apiculture_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_apiculture_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_apiculture
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_cannon = {
	icon = privilege_monopoly_of_goods_cannon	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = cannon
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_cannon_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_cannon_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = cannon
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CANNON_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_cannon_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = cannon
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_cannon_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_cannon_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_cannon_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_cannon
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_carpet = {
	icon = privilege_monopoly_of_goods_carpet	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = carpet
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_carpet_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_carpet_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = carpet
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CARPET_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_carpet_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = carpet
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_carpet_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_carpet_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_carpet_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_carpet
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_champagne = {
	icon = privilege_monopoly_of_goods_champagne	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = champagne
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_champagne_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_champagne_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = champagne
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CHAMPAGNE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_champagne_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = champagne
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_champagne_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_champagne_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_champagne_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_champagne
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_cheese = {
	icon = privilege_monopoly_of_goods_cheese	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = cheese
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_cheese_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_cheese_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = cheese
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_CHEESE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_cheese_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = cheese
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_cheese_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_cheese_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_cheese_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_cheese
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_gunpowder = {
	icon = privilege_monopoly_of_goods_gunpowder	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = gunpowder
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_gunpowder_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_gunpowder_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = gunpowder
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_GUNPOWDER_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_gunpowder_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = gunpowder
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_gunpowder_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_gunpowder_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_gunpowder_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_gunpowder
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_jade = {
	icon = privilege_monopoly_of_goods_jade	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = jade
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_jade_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_jade_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = jade
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_JADE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_jade_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = jade
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_jade_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_jade_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_jade_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_jade
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_jewellery = {
	icon = privilege_monopoly_of_goods_jewellery	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = jewellery
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_jewellery_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_jewellery_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = jewellery
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_JEWELLERY_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_jewellery_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = jewellery
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_jewellery_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_jewellery_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_jewellery_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_jewellery
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_leather = {
	icon = privilege_monopoly_of_goods_leather	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = leather
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_leather_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_leather_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = leather
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_LEATHER_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_leather_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = leather
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_leather_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_leather_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_leather_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_leather
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_metalworking = {
	icon = privilege_monopoly_of_goods_metalworking	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = metalworking
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_metalworking_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_metalworking_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = metalworking
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_METALWORKING_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_metalworking_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = metalworking
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_metalworking_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_metalworking_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_metalworking_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_metalworking
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_munitions = {
	icon = privilege_monopoly_of_goods_munitions	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = munitions
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_munitions_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_munitions_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = munitions
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_MUNITIONS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_munitions_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = munitions
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_munitions_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_munitions_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_munitions_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_munitions
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_opium = {
	icon = privilege_monopoly_of_goods_opium	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = opium
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_opium_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_opium_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = opium
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_OPIUM_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_opium_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = opium
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_opium_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_opium_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_opium_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_opium
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_optics = {
	icon = privilege_monopoly_of_goods_optics	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = optics
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_optics_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_optics_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = optics
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_OPTICS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_optics_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = optics
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_optics_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_optics_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_optics_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_optics
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_pearls = {
	icon = privilege_monopoly_of_goods_pearls	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = pearls
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_pearls_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_pearls_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = pearls
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_PEARLS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_pearls_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = pearls
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_pearls_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_pearls_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_pearls_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_pearls
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_saffron = {
	icon = privilege_monopoly_of_goods_saffron	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = saffron
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_saffron_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_saffron_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = saffron
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_SAFFRON_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_saffron_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = saffron
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_saffron_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_saffron_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_saffron_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_saffron
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_sea_turtle = {
	icon = privilege_monopoly_of_goods_sea_turtle	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = sea_turtle
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_sea_turtle_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_sea_turtle_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = sea_turtle
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_SEA_TURTLE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_sea_turtle_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = sea_turtle
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_sea_turtle_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_sea_turtle_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_sea_turtle_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_sea_turtle
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_seafood = {
	icon = privilege_monopoly_of_goods_seafood	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = seafood
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_seafood_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_seafood_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = seafood
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_SEAFOOD_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_seafood_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = seafood
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_seafood_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_seafood_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_seafood_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_seafood
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_steam_engine = {
	icon = privilege_monopoly_of_goods_steam_engine	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = steam_engine
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_steam_engine_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_steam_engine_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = steam_engine
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_STEAM_ENGINE_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_steam_engine_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = steam_engine
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_steam_engine_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_steam_engine_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_steam_engine_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_steam_engine
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_uniforms = {
	icon = privilege_monopoly_of_goods_uniforms	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = uniforms
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_uniforms_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_uniforms_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = uniforms
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_UNIFORMS_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_uniforms_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = uniforms
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_uniforms_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_uniforms_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_uniforms_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_uniforms
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_vanilla = {
	icon = privilege_monopoly_of_goods_vanilla	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = vanilla
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_vanilla_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_vanilla_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = vanilla
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_VANILLA_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_vanilla_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = vanilla
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_vanilla_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_vanilla_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_vanilla_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_vanilla
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_whaling = {
	icon = privilege_monopoly_of_goods_whaling	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = whaling
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_whaling_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_whaling_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = whaling
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_WHALING_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_gnomish_monopoly_of_whaling_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = whaling
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_whaling_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_whaling_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_whaling_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_whaling
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_woodworking = {
	icon = privilege_monopoly_of_goods_woodworking	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = woodworking
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_woodworking_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_woodworking_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = woodworking
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_WOODWORKING_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_woodworking_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = woodworking
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_woodworking_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_woodworking_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_woodworking_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_woodworking
	}
	ai_will_do = {
		factor = 0
	}
}
estate_gnomish_monopoly_of_nutmeg = {
	icon = privilege_monopoly_of_goods_nutmeg	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = nutmeg
			culture_is_gnomish = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_gnomish_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_nutmeg_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_nutmeg_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = nutmeg
				culture_is_gnomish = yes
			}
			custom_tooltip = GNOMISH_MONOPOLY_INCOME_NUTMEG_DESC
		}
		custom_tooltip = GNOMISH_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_gnomish_monopoly_of_nutmeg_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = nutmeg
				culture_is_gnomish = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_nutmeg_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_gnomish_monopoly_of_nutmeg_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_gnomish_monopoly_of_nutmeg_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_gnomish_monopoly_of_nutmeg
	}
	ai_will_do = {
		factor = 0
	}
}