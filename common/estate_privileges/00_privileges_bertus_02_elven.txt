
estate_elven_first_hand_chairman = {
	icon = privilege_empty_throne_black
	influence = 0.10
	loyalty = 0.10
	is_valid = {
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 1
			}
			uses_isolationism = no			
		}
	}
	can_select = {	
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		high_tolerance_elven_race_trigger = yes	
		NOT = {has_race_councelor = {type = first_hand}}
	}
	on_granted = {
		small_increase_of_elven_tolerance_effect = yes
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_elven_first_hand_chairman_modifier
				duration = -1
				hidden = yes
			}
		}
		country_event = {
			id = bertus_changes.1011
		}
	}
	modifier = {			
	}
	benefits = {
		free_policy = 1
		prestige_decay = -0.02
		female_advisor_chance = 0.25
		idea_cost = -0.05
	}
	penalties = {
		embracement_cost = 0.33
		global_institution_spread = -0.33
		technology_cost = 0.05
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = dwarven_administration
		}
		modifier = {
			legitimacy = -1.0
			devotion = -0.5			
			reelection_cost = 0.25
			dwarven_loyalty_modifier = -0.2
		}
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = gnollish_administration
		}
		modifier = {
			legitimacy = -1.0
			devotion = -0.5		
			reelection_cost = 0.25
			gnollish_loyalty_modifier = -0.2
		}
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = ruinborn_administration
		}
		modifier = {
			legitimacy = -1.0
			devotion = -0.5		
			reelection_cost = 0.25
			ruinborn_loyalty_modifier = -0.2
		}
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = orcish_administration
		}
		modifier = {
			legitimacy = -1.0
			devotion = -0.5		
			reelection_cost = 0.25
			orcish_loyalty_modifier = -0.2
		}
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = goblin_administration
		}
		modifier = {
			legitimacy = -1.0
			devotion = -0.5			
			reelection_cost = 0.25
			goblin_loyalty_modifier = -0.2
		}
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = centaur_administration
		}
		modifier = {
			legitimacy = -0.5
			devotion = -0.2			
			reelection_cost = 0.1
			centaur_loyalty_modifier = -0.1
		}
	}
	conditional_modifier = {
		trigger = {		
			is_part_of_hre = no
			has_country_modifier = ogre_administration
		}
		modifier = {
			legitimacy = -1.0
			devotion = -0.5		
			reelection_cost = 0.25
			ogre_loyalty_modifier = -0.2
		}
	}
	on_revoked = {
	}
	on_revoked_province = {
	}
	on_invalid = {	
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_elven_diplomacy_chairman = {
	icon = privilege_empty_throne_blue
	influence = 0.05
	is_valid = {
		always = no	#via estate interactions
		OR = {AND = { uses_isolationism = yes isolationism = 1 } uses_isolationism = no}
		NOT = {has_race_councelor = {type = diplomacy}}
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		high_tolerance_elven_race_trigger = yes		
		NOT = {has_race_councelor = {type = diplomacy}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_elven_diplomacy_chairman_modifier
				duration = -1
				hidden = yes
			}
		}
	}
	penalties = {
		province_warscore_cost = 0.2
		monthly_favor_modifier = -0.1
	}
	benefits = {
		improve_relation_modifier = 0.25
		diplomatic_reputation = 2
		reduced_liberty_desire = 10
		accept_vassalization_reasons = 10
	}
	on_revoked = {
	}
	on_invalid = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 5
	}
}
estate_elven_military_chairman = {
	icon = privilege_empty_throne_red
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		always = no	#via estate interactions
		OR = {AND = { uses_isolationism = yes isolationism = 1 } uses_isolationism = no}
		NOT = {has_race_councelor = {type = military}}
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		high_tolerance_elven_race_trigger = yes		
		NOT = {has_race_councelor = {type = military}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_elven_military_chairman_modifier
				duration = -1
				hidden = yes
			}
		}	
	}
	penalties = {
		war_exhaustion_cost = 0.25
	}
	benefits = {
		may_recruit_female_generals = yes
		leader_land_manuever = 1
	}
	on_revoked = {
		if = {
			limit = {
				OR = {
					has_country_modifier = dwarven_administration
					has_country_modifier = goblin_administration
					has_country_modifier = ruinborn_administration
				}
			}
			add_stability = 1
			add_legitimacy = 20
			add_devotion = 10
			add_republican_tradition = 5
		}
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 1
	}
}
estate_elven_economic_chairman = {
	icon = privilege_empty_throne_yellow
	is_valid = {
		always = no	#via estate interactions
		OR = {AND = { uses_isolationism = yes isolationism = 1 } uses_isolationism = no}
		NOT = {has_race_councelor = {type = economic}}
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		high_tolerance_elven_race_trigger = yes		
		NOT = {has_race_councelor = {type = economic}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_elven_economic_chairman_modifier
				duration = -1
				hidden = yes
			}
		}
	}
	modifier = {
	}
	benefits = {
		global_tax_modifier = 0.1
		production_efficiency = 0.1	
	}
	penalties = {
		inflation_action_cost = 0.25
		monthly_gold_inflation_modifier = 0.5
		interest = 1
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_elven_navy_chairman = {
	icon = privilege_empty_throne_purple
	influence = 0.05
	loyalty = 0.05
	is_valid = {	
		always = no	#via estate interactions
		OR = {AND = { uses_isolationism = yes isolationism = 1 } uses_isolationism = no}
		NOT = {has_race_councelor = {type = navy}}
		any_owned_province = {
			has_port = yes
		}
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		high_tolerance_elven_race_trigger = yes		
		NOT = {has_race_councelor = {type = navy}}
	}
	on_granted = {
		hidden_effect = {
			add_ruler_modifier = { 
				name = has_first_hand_chairman
				duration = -1
				hidden = yes
			}
			add_country_modifier = {
				name = estate_elven_navy_chairman_modifier
				duration = -1
				hidden = yes
			}
		}	
	}
	penalties = {
		global_colonial_growth = -20
	}
	benefits = {
		disengagement_chance = 0.05
		global_naval_engagement_modifier = 0.1
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 1
	}
}
estate_elven_recruitment = {
	icon = privilege_demand_more_troops
	loyalty = -0.10
	influence = 0.10
	is_valid = {	
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
	}
	can_select = {		
		high_tolerance_elven_race_trigger = yes	
		any_owned_province = {
			culture_is_elven = yes
		}
	}
	on_granted = {
		hidden_effect = {
			set_country_flag = estate_elven_recruitment_flag
			country_event = {
				id = bertus_racial_military.1001
			}
		}
		custom_tooltip = fast_pace_race_mechanic_tooltip
		custom_tooltip = malus_if_monstrous_mechanic_tooltip
		custom_tooltip = malus_if_dwarven_mechanic_tooltip
		custom_tooltip = elven_bonus_against_dwarves_mechanic_tooltip
	}
	modifier_by_land_ownership = {	
	}
	penalties = {
	}
	benefits = {
	}
	mechanics = {
		enables_cossack_regiments
	}
	conditional_modifier = {
		trigger = {
			estate_territory = {
				estate = estate_elven
				territory = 60
			}
			any_country = {
				estate_territory = {
					estate = estate_dwarven
					territory = 40
				}
				war_with = ROOT
			}
		}
		modifier = {
			discipline = 0.05
		}
	}
	conditional_modifier = {
		trigger = {
			estate_territory = {
				estate = estate_elven
				territory = 90
			}
		}
		modifier = {
			drill_decay_modifier = -0.2
		}
	}
	conditional_modifier = {
		trigger = {
			estate_territory = {
				estate = estate_elven
				territory = 60
			}
			is_at_war = yes
		}
		modifier = {
			war_exhaustion = 0.05
		}
	}
	can_revoke = {
	}
	on_revoked = {
		hidden_effect = {
			clr_country_flag = estate_elven_recruitment_flag
			country_event = {
				id = bertus_racial_military.1001
			}
		}
		add_mil_power = -100
	}
	ai_will_do = {
		factor = 1000
	}
}
estate_elven_extensive_recruitment = {
	icon = privilege_recruit_rajput_general
	loyalty = -0.20
	is_valid = {
		has_race_recruitment = {
			race = elven
		}
		army_professionalism = 0.20
	}
	can_select = {
		army_professionalism = 0.40
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
	}
	modifier_by_land_ownership = {
		yearly_army_professionalism = -0.03
		manpower_recovery_speed = 0.5
	}
	mechanics = {
	}
	on_revoked = {
	}
	on_invalid = {
	}
	cooldown_years = 5
	ai_will_do = {
		factor = 1
	}
}
estate_elven_elite_regiments = {
	icon = privilege_recruit_rajput_general
	is_valid = {
		has_race_recruitment = {
			race = elven
		}
	}
	can_select = {
		has_elite_regiments = no
	}
	on_granted = {
		add_country_modifier = {
			name = elite_guard_modifier
			duration = -1
		}
	}
	penalties = {
		yearly_corruption = 0.20
	}
	benefits = {
		special_unit_forcelimit = 0.05		
	}
	mechanics = {
	}
	on_revoked = {
		remove_country_modifier = elite_guard_modifier
	}
	on_invalid = {
		remove_country_modifier = elite_guard_modifier
	}
	ai_will_do = {
		factor = 1
	}
}
estate_elven_sunblessed_troops = {
	icon = privilege_recruit_rajput_general
	is_valid = {
		has_country_modifier = sareyand_the_great_ash_legion
	}
	can_select = {
		has_race_recruitment = {
			race = elven
		}
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
	}
	modifier_by_land_ownership = {
		shock_damage_received = -0.1
		fire_damage_received = -0.1
		army_tradition_from_battle = 0.5
	}
	on_revoked = {
	}
	on_invalid = {
	}
	ai_will_do = {
		factor = 100
	}
}
estate_elven_intolerance_policy = {
	icon = privilege_elven_supremacy	
	influence = 0.10
	is_valid = {
		if = {
			limit = {
				has_global_flag = call_to_reaction_hre_flag
				is_part_of_hre = yes
			}
			always = no
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		has_country_modifier = elven_military
		has_country_modifier = elven_administration
	}
	can_select = {
		estate_territory = {
			estate = estate_elven
			territory = 70
		}
	}
	on_granted = {
		custom_tooltip = estate_elven_one_culture_gta
		custom_tooltip = estate_elven_one_culture_gtb
		remove_racial_culture = { race = human }
		remove_racial_culture = { race = dwarven }
		remove_racial_culture = { race = halfling }
		remove_racial_culture = { race = gnomish }
		remove_racial_culture = { race = harimari }
		remove_racial_culture = { race = gnollish }
		remove_racial_culture = { race = ruinborn }
		remove_racial_culture = { race = orcish }
		remove_racial_culture = { race = goblin }
		remove_racial_culture = { race = ogre }
		remove_racial_culture = { race = centaur }
		remove_racial_culture = { race = troll }
		remove_racial_culture = { race = harpy }
		remove_racial_culture = { race = half_orcish }
		remove_racial_culture = { race = half_elven }
		remove_racial_culture = { race = hobgoblin }
		remove_racial_culture = { race = kobold }
	}
	on_granted_province = {
		add_racial_superiority_modifier = {
			race = elven
		}
	}
	penalties = {
		tolerance_heathen = -2
		tolerance_heretic = -2
		relation_with_other_culture = -50
	}
	benefits = {
		global_missionary_strength = 0.01
	}
	conditional_modifier = {
		trigger = {
			any_known_country = {
				NOT = { culture_is_elven = yes }
				war_with = root
			}
		}
		modifier = {
			land_morale = 0.05
			shock_damage_received = -0.05
			fire_damage_received = -0.05
			manpower_recovery_speed = 0.1
			reinforce_speed = 0.1
			recover_army_morale_speed = 0.025			
		}
	}
	conditional_modifier = {
		trigger = {
			any_ally = {
				NOT = { culture_is_elven = yes }
			}
		}
		modifier = {
			land_morale = -0.05
			stability_cost_modifier = 0.2
			legitimacy = -1
			republican_tradition = -0.25
			devotion = -0.5
			global_unrest = 2		
		}
	}
	on_revoked = {
		custom_tooltip = estate_one_culture_rta
		custom_tooltip = estate_one_culture_rtb
	}
	on_revoked_province = {
		remove_racial_superiority_modifier = yes
	}
	on_invalid_province = {
		remove_racial_superiority_modifier = yes
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = {
			id = bertus_racial_military.5102
		}
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_autonomy = {
	icon = privilege_grant_autonomy
	loyalty = 0.2
	influence = 0.10
	is_valid = {
		NOT = { has_country_modifier = elven_administration }
	}
	can_select = {
		any_owned_province = {
			culture_is_elven = yes
		}
	}
	on_granted = {
		small_increase_of_elven_tolerance_effect = yes
		custom_tooltip = estate_guaranteed_autonomy_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {culture_is_elven = yes}
			add_province_modifier = {
				name = estate_guaranteed_autonomy_mod
				duration = -1
			}
		}
		else_if = {
			limit = {has_province_modifier = estate_guaranteed_autonomy_mod}
			remove_province_modifier = estate_guaranteed_autonomy_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = {has_province_modifier = estate_guaranteed_autonomy_mod}
			remove_province_modifier = estate_guaranteed_autonomy_mod
		}
	}
	on_invalid_province = {
		if = {
			limit = {has_province_modifier = estate_guaranteed_autonomy_mod}
			remove_province_modifier = estate_guaranteed_autonomy_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = {
			id = bertus_racial_military.5032
		}
	}
}
estate_elven_purge = {
	icon = privilege_grant_autonomy
	loyalty = -0.2
	influence = -0.20
	is_valid = {
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 1
			}
			uses_isolationism = no			
		}
	}
	can_select = {
		can_purge_race = {
			RACE = elven
		}
	}
	on_granted = {		
		largest_decrease_of_elven_tolerance_effect = yes
		add_country_modifier = { name = racial_pop_elven_purge duration = -1 }
		
		custom_tooltip = racial_pop_events_debug.3.tooltip
		
		custom_tooltip = pop_menu_purge_effect_unrest_tt
		
		hidden_effect = {
			add_purguing_unrest = {
				race = elven
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {		
		remove_country_modifier = racial_pop_elven_purge
	}
	on_invalid = {
		remove_country_modifier = racial_pop_elven_purge
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_elven_expulsion = {
	icon = privilege_grant_autonomy
	loyalty = -0.1
	influence = -0.1
	is_valid = {		
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 1
			}
			uses_isolationism = no			
		}
	}
	can_select = {
		can_expel_race = {
			RACE = elven
		}
	}
	on_granted = {				
		large_decrease_of_elven_tolerance_effect = yes
		
		add_country_modifier = { 
			name = racial_pop_elven_expulsion
			duration = -1  
		}
		
		custom_tooltip = racial_pop_events_debug.2.tooltip
		
		custom_tooltip = pop_menu_expel_effect_unrest_tt
		
		hidden_effect = {
			add_expulsion_unrest = {
				race = elven
			}
		}
	}
	benefits = {
	}
	on_revoked = {		
		remove_country_modifier = racial_pop_elven_expulsion
	}
	on_invalid = {
		remove_country_modifier = racial_pop_elven_expulsion
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_elven_focus = {
	icon = privilege_grant_autonomy
	loyalty = 0.1
	influence = 0.1
	is_valid = {					
		if = {
			limit = {
				has_global_flag = call_to_action_hre_flag
			}
			is_part_of_hre = no
		}		
		NOT = { has_country_modifier = elven_administration }
		NOT = { has_country_modifier = elven_military }		
	}
	can_select = {
		NOT = {
			OR = {
				has_country_modifier = racial_pop_elven_purge
				has_country_modifier = racial_pop_elven_expulsion
			}
		}
		NOT = { has_racial_focus = yes }
	}
	on_granted = {	
		custom_tooltip = pop_menu_focus_desc_tt
		add_country_modifier = {
			name = racial_focus_elven
			duration = -1
		}
	}
	benefits = {
	}
	on_revoked = {		
		remove_country_modifier = racial_focus_elven
	}
	on_invalid = {
		remove_country_modifier = racial_focus_elven
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_elven_increase_isolationism = {
	icon = privilege_grant_autonomy
	loyalty = 0.1
	influence = 0.1
	is_valid = {
		uses_isolationism = yes
		NOT = {isolationism = 5}
	}
	can_select = {
		NOT = {
			has_estate_privilege = estate_human_decrease_isolationism
		}
	}
	on_granted = {	
		custom_tooltip = estate_elven_increase_isolationism_tooltip
	}
	benefits = {
	}
	on_revoked = {		
	}
	on_invalid = {
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 25
	on_cooldown_expires = {
		add_isolationism = 1
	}
}
estate_elven_non_military_swap = {
	icon = privilege_grant_autonomy
	loyalty = 0.1
	is_valid = {	
		any_owned_province = {
			culture_is_elven = yes
			has_province_modifier = non_military_pop
		}
	}
	can_select = {
		NOT = {
			OR = {
				has_country_modifier = racial_pop_elven_purge
				has_country_modifier = racial_pop_elven_expulsion
			}
		}
	}
	on_granted = {	
		custom_tooltip = non_military_swap_tt
	}
	benefits = {
	}
	on_revoked = {		
	}
	on_invalid = {
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_elven_banned_inter_racial_marriages = {
	icon = privilege_grant_autonomy
	is_valid = {	
		has_estate = estate_human
		has_estate = estate_elven
	}
	can_select = {
		NOT = {has_estate_privilege = estate_half_elven_focus}
		NOT = {has_estate_privilege = estate_half_elven_promoted_inter_racial_marriages}
	}
	on_granted = {	
		custom_tooltip = estate_elven_banned_inter_racial_marriages_tt
	}
	penalties = {
		half_elven_loyalty_modifier = -0.1
	}
	benefits = {
	}
	on_revoked = {		
	}
	on_invalid = {
	}
	ai_will_do = {
		factor = 0
	}
	cooldown_years = 10
	on_cooldown_expires = {
	}
}
estate_elven_diplomatic_education = {
	icon = privilege_promote_maratha_nobility
	influence = 0.10
	is_valid = {
		NOT = {
			heir_dip = 5
		}
		has_heir = yes
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		OR = {
			AND = {
				uses_isolationism = yes
				isolationism = 2
			}
			uses_isolationism = no			
		}
		high_tolerance_elven_race_trigger = yes
		NOT = {has_estate_privilege = estate_elven_diplomatic_education}
	}
	on_granted = {
		custom_tooltip = estate_diplomatic_education_tooltip
	}
	penalties = {
		yearly_corruption = 0.2
	}
	benefits = {
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = short_lived_personality
		}
		modifier = {
			yearly_corruption = -0.1
		}
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = elven_administration
		}
		modifier = {
			yearly_corruption = 0.6
		}
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = gnomish_administration
		}
		modifier = {
			yearly_corruption = 0.4
		}
	}
	conditional_modifier = {
		trigger = {
			has_country_modifier = dwarven_administration
		}
		modifier = {
			yearly_corruption = 0.2
		}
	}
	on_revoked = {
	}
	on_invalid = {
	}
	cooldown_years = 5
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_diplomatic_education
		if = {
			limit = {
				NOT = {
					heir_dip = 5
				}
			}
			change_heir_dip = 1
		}
	}
	ai_will_do = {
		factor = 5
	}
}
estate_elven_colonizers = {
	icon = privilege_new_world_mission
	is_valid = {
		OR = {
			AND = {
				uses_isolationism = yes
				not = {isolationism = 2}
			}
			uses_isolationism = no			
		}
		num_of_colonists = 1
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		high_tolerance_elven_race_trigger = yes
		OR = {
			has_estate_privilege = estate_elven_economic_chairman
			has_country_modifier = estate_elven_economic_chairman_modifier
		}
	}
	on_granted = {
	}
	modifier = {
		global_colonial_growth = 20
		yearly_corruption = 0.2
	}
	penalties = {
	}
	on_revoked = {
	}
	cooldown_years = 10
	ai_will_do = {
		factor = 0
	}
}
estate_elven_wood_working = {
	icon = privilege_new_world_mission
	is_valid = {
		OR = {
			AND = {
				uses_isolationism = yes
				NOT = {isolationism = 2}
			}
			uses_isolationism = no			
		}
	}
	can_select = {
		estate_influence = {
			estate = estate_elven
			influence = 40
		}
		high_tolerance_elven_race_trigger = yes
		trading_part = {
			trade_goods = tropical_wood
			value = 0.1
		}
	}
	on_granted = {
		custom_tooltip = estate_elven_wood_working_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					has_terrain = woods
					has_terrain = forest
					has_terrain = ancient_forest
					trade_goods = tropical_wood
					trade_goods = lumber
					trade_goods = woodworking
				}					
			}
			add_province_modifier = {
				name = elven_wood_working_modifier
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = elven_wood_working_modifier
			}
			remove_province_modifier = elven_wood_working_modifier
		}
	}
	modifier = {
		build_cost = -0.05			
	}
	penalties = {
	}
	on_revoked = {
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = elven_wood_working_modifier
			}
			remove_province_modifier = elven_wood_working_modifier
		}
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = elven_wood_working_modifier
			}
			remove_province_modifier = elven_wood_working_modifier
		}
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_incense = {
	icon = privilege_monopoly_of_goods_incence
	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = incense
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_incense_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_incense_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = incense
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_INCENSE_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_incense_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = incense
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_brahmins_monopoly_of_incense_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_incense_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_incense_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_brahmins_monopoly_of_incense
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_wine = {
	icon = privilege_monopoly_of_goods_wine	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = wine
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_wine_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_wine_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = wine
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_WINE_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_wine_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = wine
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_wine_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_wine_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_wine_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_wine
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_cloth = {
	icon = privilege_monopoly_of_goods_cloth	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = cloth
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_cloth_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_cloth_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = cloth
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CLOTH_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_cloth_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = cloth
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_cloth_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_cloth_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_cloth_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_cloth
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_glass = {
	icon = privilege_monopoly_of_goods_glass	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = glass
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_glass_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_glass_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = glass
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_GLASS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_glass_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = glass
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_glass_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_glass_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_glass_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_glass
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_paper = {
	icon = privilege_monopoly_of_goods_paper	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = paper
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_paper_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_paper_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = paper
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_PAPER_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC	
		custom_tooltip = estate_elven_monopoly_of_paper_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = paper
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_paper_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_paper_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_paper_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_paper
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_silk = {
	icon = privilege_monopoly_of_goods_silk	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = silk
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_silk_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_silk_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = silk
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_SILK_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_silk_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = silk
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_silk_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_silk_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_silk_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_silk
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_tea = {
	icon = privilege_monopoly_of_goods_tea	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = tea
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_tea_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_tea_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = tea
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_TEA_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_tea_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = tea
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_tea_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_tea_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_tea_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_tea
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_chinaware = {
	icon = privilege_monopoly_of_goods_chinaware	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = chinaware
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_chinaware_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_chinaware_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = chinaware
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CHINAWARE_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_chinaware_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = chinaware
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_chinaware_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_chinaware_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_chinaware_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_chinaware
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_sugar = {
	icon = privilege_monopoly_of_goods_sugar	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = sugar
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_sugar_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_sugar_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = sugar
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_SUGAR_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_sugar_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = sugar
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_sugar_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_sugar_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_sugar_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_sugar
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_tropical_wood = {
	icon = privilege_monopoly_of_goods_tropical_wood	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = tropical_wood
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_tropical_wood_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_tropical_wood_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = tropical_wood
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_TROPICAL_WOOD_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_tropical_wood_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = tropical_wood
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_tropical_wood_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_tropical_wood_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_tropical_wood_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_tropical_wood
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_precursor_relics = {
	icon = privilege_monopoly_of_goods_precursor_relics	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = precursor_relics
			culture_is_elven = yes
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_precursor_relics_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_precursor_relics_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = precursor_relics
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_PRECURSOR_RELICS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_precursor_relics_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = precursor_relics
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_precursor_relics_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_precursor_relics_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_precursor_relics_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_precursor_relics
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_amber = {
	icon = privilege_monopoly_of_goods_amber	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = amber
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_amber_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_amber_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}	
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = amber
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_AMBER_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_amber_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = amber
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_amber_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_amber_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_amber_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_amber
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_apiculture = {
	icon = privilege_monopoly_of_goods_apiculture	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = apiculture
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_apiculture_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_apiculture_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = apiculture
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_APICULTURE_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_apiculture_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = apiculture
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_apiculture_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_apiculture_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_apiculture_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_apiculture
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_camel = {
	icon = privilege_monopoly_of_goods_camel	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = camel
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_camel_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_camel_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = camel
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CAMEL_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_camel_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = camel
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_camel_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_camel_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_camel_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_camel
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_cannon = {
	icon = privilege_monopoly_of_goods_cannon	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = cannon
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_cannon_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_cannon_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = cannon
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CANNON_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_cannon_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = cannon
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_cannon_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_cannon_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_cannon_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_cannon
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_carpet = {
	icon = privilege_monopoly_of_goods_carpet	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = carpet
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_carpet_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_carpet_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = carpet
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CARPET_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_carpet_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = carpet
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_carpet_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_carpet_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_carpet_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_carpet
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_champagne = {
	icon = privilege_monopoly_of_goods_champagne	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = champagne
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_champagne_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_champagne_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = champagne
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CHAMPAGNE_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_champagne_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = champagne
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_champagne_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_champagne_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_champagne_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_champagne
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_citrus = {
	icon = privilege_monopoly_of_goods_citrus	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = citrus
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_citrus_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_citrus_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = citrus
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_CITRUS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_citrus_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = citrus
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_citrus_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_citrus_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_citrus_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_citrus
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_dates = {
	icon = privilege_monopoly_of_goods_dates	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = dates
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_dates_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_dates_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = dates
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_DATES_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_dates_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = dates
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_dates_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_dates_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_dates_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_dates
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_ebony = {
	icon = privilege_monopoly_of_goods_ebony	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = ebony
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_ebony_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_ebony_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = ebony
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_EBONY_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_ebony_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = ebony
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_ebony_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_ebony_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_ebony_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_ebony
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_elephants = {
	icon = privilege_monopoly_of_goods_elephants	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = elephants
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_elephants_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_elephants_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = elephants
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_ELEPHANTS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_elephants_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = elephants
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_elephants_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_elephants_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_elephants_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_elephants
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_exotic_animals = {
	icon = privilege_monopoly_of_goods_exotic_animals	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = exotic_animals
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_exotic_animals_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_exotic_animals_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = exotic_animals
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_EXOTIC_ANIMALS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_exotic_animals_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = exotic_animals
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_exotic_animals_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_exotic_animals_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_exotic_animals_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_exotic_animals
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_gunpowder = {
	icon = privilege_monopoly_of_goods_gunpowder	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = gunpowder
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_gunpowder_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_gunpowder_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = gunpowder
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_GUNPOWDER_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_gunpowder_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = gunpowder
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_gunpowder_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_gunpowder_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_gunpowder_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_gunpowder
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_horses = {
	icon = privilege_monopoly_of_goods_horses	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = horses
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_horses_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_horses_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = horses
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_HORSES_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_horses_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = horses
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_horses_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_horses_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_horses_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_horses
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_jewellery = {
	icon = privilege_monopoly_of_goods_jewellery	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = jewellery
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_jewellery_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_jewellery_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = jewellery
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_JEWELLERY_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_jewellery_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = jewellery
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_jewellery_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_jewellery_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_jewellery_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_jewellery
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_leather = {
	icon = privilege_monopoly_of_goods_leather	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = leather
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_leather_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_leather_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = leather
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_LEATHER_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_leather_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = leather
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_leather_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_leather_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_leather_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_leather
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_llama = {
	icon = privilege_monopoly_of_goods_llama	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = llama
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_llama_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_llama_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = llama
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_LLAMA_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_llama_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = llama
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_llama_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_llama_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_llama_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_llama
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_lumber = {
	icon = privilege_monopoly_of_goods_lumber	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = lumber
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_lumber_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_lumber_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = lumber
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_LUMBER_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_lumber_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = lumber
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_lumber_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_lumber_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_lumber_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_lumber
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_maple_syrup = {
	icon = privilege_monopoly_of_goods_maple_syrup	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = maple_syrup
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_maple_syrup_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_maple_syrup_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = maple_syrup
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_MAPLE_SYRUP_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_maple_syrup_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = maple_syrup
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_maple_syrup_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_maple_syrup_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_maple_syrup_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_maple_syrup
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_metalworking = {
	icon = privilege_monopoly_of_goods_metalworking	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = metalworking
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_metalworking_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_metalworking_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = metalworking
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_METALWORKING_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_metalworking_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = metalworking
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_metalworking_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_metalworking_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_metalworking_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_metalworking
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_munitions = {
	icon = privilege_monopoly_of_goods_munitions	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = munitions
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_munitions_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_munitions_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = munitions
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_MUNITIONS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_munitions_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = munitions
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_munitions_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_munitions_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_munitions_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_munitions
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_olives = {
	icon = privilege_monopoly_of_goods_olives	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = olive_oil
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_olives_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_olives_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = olive_oil
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_OLIVES_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_olives_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = olive_oil
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_olives_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_olives_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_olives_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_olives
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_opium = {
	icon = privilege_monopoly_of_goods_opium	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = opium
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_opium_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_opium_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = opium
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_OPIUM_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_opium_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = opium
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_opium_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_opium_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_opium_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_opium
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_optics = {
	icon = privilege_monopoly_of_goods_optics	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = optics
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_optics_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_optics_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = optics
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_OPTICS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_optics_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = optics
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_optics_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_optics_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_optics_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_optics
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_palm_oil = {
	icon = privilege_monopoly_of_goods_palm_oil	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = palm_oil
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_palm_oil_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_palm_oil_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = palm_oil
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_PALM_OIL_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_palm_oil_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = palm_oil
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_palm_oil_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_palm_oil_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_palm_oil_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_palm_oil
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_saffron = {
	icon = privilege_monopoly_of_goods_saffron	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = saffron
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_saffron_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_saffron_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = saffron
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_SAFFRON_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_saffron_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = saffron
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_saffron_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_saffron_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_saffron_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_saffron
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_steam_engine = {
	icon = privilege_monopoly_of_goods_steam_engine	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = steam_engine
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_steam_engine_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_steam_engine_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 11
			trigger = {
				trade_goods = steam_engine
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_STEAM_ENGINE_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_DESC
		custom_tooltip = estate_elven_monopoly_of_steam_engine_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = steam_engine
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_steam_engine_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_steam_engine_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_steam_engine_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_steam_engine
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_uniforms = {
	icon = privilege_monopoly_of_goods_uniforms	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = uniforms
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_uniforms_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_uniforms_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = uniforms
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_UNIFORMS_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_uniforms_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = uniforms
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_uniforms_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_uniforms_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_uniforms_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_uniforms
	}
	ai_will_do = {
		factor = 0
	}
}
estate_elven_monopoly_of_woodworking = {
	icon = privilege_monopoly_of_goods_woodworking	
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		always = no
		any_owned_province = {
			trade_goods = woodworking
			culture_is_elven = yes
		}
		NOT = {
			has_country_flag = hoard_monopolies_food
		}
	}
	can_select = {
		high_tolerance_elven_race_trigger = yes
		NOT = {has_country_modifier = estate_monopoly_of_woodworking_cooldown_modifier}
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		hidden_effect = {
			add_country_modifier = {
				name = estate_monopoly_of_woodworking_cooldown_modifier
				duration = 3600
				hidden = yes
			}
		}
		add_years_of_owned_provinces_production_income = {
			years = 13
			trigger = {
				trade_goods = woodworking
				culture_is_elven = yes
			}
			custom_tooltip = ELVEN_MONOPOLY_INCOME_WOODWORKING_DESC
		}
		custom_tooltip = ELVEN_MONOPOLY_INCOME_PRODUCTION_BOOST_1.3_DESC
		custom_tooltip = estate_elven_monopoly_of_woodworking_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = woodworking
				culture_is_elven = yes
			}
			add_province_modifier = {
				name = estate_monopoly_of_woodworking_mod
				duration = 3650
			}
		}
	}
	penalties = {
	}
	benefits = {
	}
	on_revoked = {
		custom_tooltip = estate_elven_monopoly_of_woodworking_revoke_tooltip
	}
	on_revoked_province = {
	}
	on_invalid = {
		custom_tooltip = estate_elven_monopoly_of_woodworking_revoke_tooltip
	}
	on_invalid_province = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		remove_estate_privilege = estate_elven_monopoly_of_woodworking
	}
	ai_will_do = {
		factor = 0
	}
}