#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.

# Anbennar Added Stuff
# anbennar_setup.1
# Commented a lot of stuff
# Stuff that prob shouldnt be commented -> muslim school events

# country
on_startup = {
	emperor = { save_global_event_target_as = Emperor }
	A85 = { save_global_event_target_as = magisterium }
	if = {
		limit = { is_emperor_of_china = yes }
		save_global_event_target_as = EmperorOfChina
	}
	random_country = {
		limit = { ai = no }
		if = {
			limit = { calc_true_if = { all_country = { ai = no } amount = 2 } }
			set_global_flag = mp_lobby_flag
		}
		else = {
			clr_global_flag = mp_lobby_flag
		}
	}
	if = {	#bertus mod
		limit = { ai = yes }
		every_province = {
			limit = {
				is_city = no
				has_terrain = dwarven_under_hold
			}
			undiscover_country = PREV
		}
	}

	#institution spread help

	events = {
		# muslim_school_events.20 #Pick School
		high_philosophy_events.0

		#Anbennar
		lilac_wars.1
		lilac_wars.2
		#lilac_wars.1c
		#initialization.1
		anbennar_setup.1		#Sets up Monstrous Opinions
		anbennar_setup.2		#Sets up Lilac Wars Parties
		anbennar_setup.3		#Sets up discovered regions #### Heavy event, might need to be broken down with the addition of new province/country if Black Screen Crash at startup ######
		anbennar_setup.4		#Pragmatic Sanction
		anbennar_setup.6		#Mage Organization Setup
		anbennar_setup.11		#Adventurer Organization Setup
		anbennar_setup.7		#Evil/Witch King opinions
		anbennar_setup.9		#Global Setup for Racial Admin Mil #### Heavy event, might need to be broken down with the addition of new province/country if Black Screen Crash at startup ######
		anbennar_setup.10		#Sets up Greentide Adventurer opinion
		anbennar_setup.13		#Adds a hacky delay to prevent existing adventurers colonizing straight away
		
		bertus_changes.1100		#bertus mod: setup
		#estate_organization.1	#Give unassigned countries appropriate modifier - does anbennar_setup.6 for rest of game
		#kheteratan_events.1	#Sets up Khetarch for Kheterata
		#kobold_events.1 		#Sets up for kobolds
		diggy.108				#Dwarovar Claimer event
		diggy.110				#Hold and Colonial nerf setup event
		#deepwoods.100			#Deepwoods setup - this caused black screen crash and is redundant as other anbennar_setup.3 does it
		verkalgulan_events.1	#Verkal Gulan setup
		#vegan.101				#Setup abundant wood in deepwoods
		jaddari_missions.1000	#AI boost for Jaddari
		centaur.3				#Horde modifier for centaur
		ogre.1					#Adds Reign of Ziltagh to Maghargma
		ogre.2					#Sets up warring northern Fathide clan opinions
		ogre.3					#Sets up Ogre Monarch v Tribal opinion
		ogre.4					#Sets up Ogre Tribal v Monarch opinion
		magic_ruler.109			#Sets up magic for rulers with undefined skills
		# anbennar_setup.17		#exodus goblin invasion
		flavor_corintar.3		#Adds Lothane Bluetusk's Leadership to Corintar
		religious_leagues.10	#Starting religious peace
		flavor_neckcliffe.1		#Neckcliffe intro event and setting up the debuffs
		flavor_toarnen.1		#The Whitecliffs burghers uprising of 1356
		bulwar_flavour.28		#Sets up Surani Refugees in Bulwar
		azka_evran.1			#Azka-Evran intro event
		flavour_balrijin.29		#Balrijin-Lanjinhui favor/trust setup
		the_command.0			#The Great Command
		guhe.100 				#Guhe Setup Event
		flavor_chaingrasper.1	#Chaingrasper Dak intro
		flavour_tluukt.64		#Adds Rule of Tluukt to Tluukt
		diggy_spawnable.5		#Blackbeard Cartel intro
		diggy_spawnable.6		#Asra Expedition intro
		diggy_spawnable.7		#Ruby Company intro
		#Silver Families
		silver_families.1		#Silmuna
		silver_families.2		#Siloriel
		silver_families.3		#Silcalas
		silver_families.4		#Silistra
		silver_families.5		#Silnara
		silver_families.6		#Silebor
		silver_families.7		#Silurion
		silver_families.8		#Silgarion
		dakinshi.1 				 #kwizera_first_war

		#anbennar_setup_player.1	#give magic org to player
		#anbennar_setup_player.2	#give racial admin mil to player

		#########     Racial Pop Stuff     ###########
		#race_setup_events.1		#Sets up Racial Tolerance Level
		#race_setup_events.2		#Ai only event - Affects how the ai uses the system
		#race_setup_events.4		#Add minorities to province / Culture Conversion -
		#race_setup_events.7		#Its 4 but for everyone
		#race_setup_events.9		#Expel/Purge opinions
		#########     Racial Pop Stuff     ###########

		#artifice
		#anbennar_setup.18
		anbennar_setup.19
		migration_force_settle.2
		new_sun_cult.7 			#NSC setup in case MoH is disabled

		shatteredcrown.0 #lore disclaimer
		dwarven_pantheon.300 #rubyhold and ozovar starting event
		
		#anb_settings.1			#Settings - /!\ keep it at the bottom of the list
	}
	update_ruler_racial_flag = yes

	A01 = {
		country_event = { id = sjr_lorent_set_up.3 }		#bertus mod
		country_event = { id = bertus_changes.1090 days = 1	}	#bertus mod: setup global
	}
	country_event = { id = anbennar_setup.20 days = 32 }	#update_artifice_points = yes
	country_event = { id = bertus_changes.1121 days = 5 }	#enslavement
	F29 = { country_event = { id = zokka_jaddari_war.1 days = 120 } }	#Jaddari-Zokka War
	F50 = { country_event = { id = flavour_mulen.3 days = 3650 } }	#Mulen goblin setup
	B11 = { country_event = { id = flavor_luciande.54 days = 30} }	#company of thorns high stability
	if = {
		limit = {
			NOT = { is_year = 1445 }
			capital_scope = {
				OR = {
					superregion = escann_superregion
					region = forlorn_vale_region
				}
				NOT = {
					region = dostanor_region
					region = ourdia_region
					region = daravans_folly_region
				}
			}
			NOT = {
				culture_group = orcish
				culture_group = goblin
			}
			NOT = { tag = A32 }	#Dont let Ibevar, Silent Repose, and Orda Aldresia get this
			NOT = { tag = A83 }
			NOT = { tag = A77 }
		}
		country_event = { id = greentide.0 days = 1 }
	}
	if = {
		limit = {
			NOT = { is_year = 1445 }
			capital_scope = {
				OR = {
					superregion = escann_superregion
					region = forlorn_vale_region
				}
				NOT = { region = dostanor_region region = ourdia_region }
			}
			OR = {
				culture_group = orcish
				culture_group = goblin
			}
		}
		country_event = { id = greentide.1 days = 1 }
	}
	if = {
		limit = { NOT = { is_year = 1445 } tag = Z18 }
		country_event = { id = greentide.2 days = 1 }
	}
	if = {
		limit = { NOT = { is_year = 1445 } culture = white_reachman }
		country_event = { id = greentide.3 days = 1 }
	}

	#########     Racial Pop Stuff     ###########
	country_event = { id = race_setup_events.1 days = 1 }
	country_event = { id = race_setup_events.2 days = 1 }
	country_event = { id = race_setup_events.4 days = 1 }
	country_event = { id = race_setup_events.9 days = 1 }

	# initialize_schools_effect = yes #This is only used here but is used for readability of on_action file.
	anb_initialize_schools_effect = yes
	if = {	#Mother Akan event cycle start
		limit = {
			NOT = { has_global_flag = akan_cycle_timer }
			NOT = { is_year = 1445 }
		}
		set_global_flag = akan_cycle_timer
		random_country = {
			country_event = {
				id = mother_akan.4
				days = 1315
			}
		}
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_global_flag = mother_akan_2
		update_ruler_racial_flag = yes
	}
	if = {	#Mother Akan mountain count start
		limit = { NOT = { is_year = 1445 } }
		REB = { set_variable = { akan_mountains = 2 } }
	}
	F21 = { country_event = { id = flavour_birsartanses.0 } }	#Birsartanses setup

	update_magic_study_experience_modifier = {}

	# Expedition
	REB = { country_event = { id = diggy_expedition.0 } }

	#Remnant colonist removal
	if = {
		limit = {
			has_country_flag = dwarovar_remnant
			NOT = { has_country_flag = remnant_stagnation_disaster_end }
			NOT = { has_country_modifier = remnant_legacy }
		}
		add_country_modifier = { name = remnant_legacy duration = 31 hidden = yes }
	}

	if = { #sets dev cost reduction in capital area on game start, might move to history files once all governments are in
		limit = {
			has_government_attribute = lower_dev_cost_in_capital_state
			NOT = { capital_scope = { has_province_modifier = lower_dev_cost_in_capital_state_modifier } }
		}
		capital_scope = {
			area = {
				add_province_modifier = {
					name = lower_dev_cost_in_capital_state_modifier
					duration = -1
					hidden = yes
				}
			}
		}
	}
	if = { #sets gov cost reduction in capital region on game start, might move to history files once all governments are in
		limit = {
			has_government_attribute = lower_gov_cost_in_home_region
			NOT = { capital_scope = { has_province_modifier = lower_gov_cost_in_home_region_modifier } }
		}
		capital_scope = { region = { add_province_modifier = { name = lower_gov_cost_in_home_region_modifier duration = -1 hidden = yes } } }
	}

	if = {
		limit = { has_reform = hobgoblin_stratocracy_reform }
		if = {
			limit = { NOT = { has_estate_privilege = estate_wolf_command_war_room_rights } }
			remove_faction = hob_wolf_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_boar_command_war_room_rights } }
			remove_faction = hob_boar_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_lion_command_war_room_rights } }
			remove_faction = hob_lion_command
		}
		if = {
			limit = { has_estate_privilege = estate_dragon_command_war_room_rights }
			add_faction = hob_dragon_command
		}
		if = {
			limit = { has_estate_privilege = estate_elephant_command_war_room_rights }
			add_faction = hob_elephant_command
		}
		if = {
			limit = { has_estate_privilege = estate_tiger_command_war_room_rights }
			add_faction = hob_tiger_command
		}
	}
}

# country
on_religion_change = {
	on_religion_change_estate_privileges_effect = yes
	#night coven stuff
	if = {
		limit = { 
			NOT = { tag = S70 } 
			religion = night_coven
		}
		change_religion = night_coven_reformed
	}
	if = {
		limit = { 
			NOT = { any_country = { is_emperor_of_china = yes } } 
			religion = khetist
		}
		set_emperor_of_china = ROOT
	}
	if = {
		limit = { is_emperor_of_china = yes }
		dismantle_empire_of_china = yes
	}
	if = {
		limit = { NOT = { religion = night_coven_reformed } }
		#remove night coven Reforms if you convert away
		remove_country_modifier = night_coven_reform_1_m
		remove_country_modifier = night_coven_reform_2_m
		remove_country_modifier = night_coven_reform_3_m
		remove_country_modifier = night_coven_reform_4_m
		remove_country_modifier = night_coven_reform_5_m
	}

	#removes ravelian modifiers
	if = {
		limit = { NOT = { has_dlc = "Emperor" } }
		remove_country_modifier = first_council_harsh
		remove_country_modifier = first_council_conciliatory
		remove_country_modifier = second_council_harsh
		remove_country_modifier = second_council_conciliatory
		remove_country_modifier = third_council_harsh
		remove_country_modifier = third_council_conciliatory
		remove_country_modifier = fourth_council_harsh
		remove_country_modifier = fourth_council_conciliatory
		if = {
			limit = { religion = ravelian }
			if = {
				limit = { has_global_flag = first_council_harsh }
				add_country_modifier = { name = first_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = first_council_conciliatory }
				add_country_modifier = { name = first_council_conciliatory duration = -1 }
			}
			if = {
				limit = { has_global_flag = second_council_harsh }
				add_country_modifier = { name = second_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = second_council_conciliatory }
				add_country_modifier = { name = second_council_conciliatory duration = -1 }
			}
			if = {
				limit = { has_global_flag = third_council_harsh }
				add_country_modifier = { name = third_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = third_council_conciliatory }
				add_country_modifier = { name = third_council_conciliatory duration = -1 }
			}
			if = {
				limit = { has_global_flag = fourth_council_harsh }
				add_country_modifier = { name = fourth_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = fourth_council_conciliatory }
				add_country_modifier = { name = fourth_council_conciliatory duration = -1 }
			}
		}
	}
	if = {
		limit = { has_heir = yes }
		set_heir_religion = ROOT
	}
	if = {
		limit = { has_regency = no }
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
	if = {
		limit = { religion = corinite }
		set_country_flag = converted_to_corinite
	}
	if = {
		limit = { religion = ravelian }
		set_country_flag = converted_to_ravelian
	}
	if = {
		limit = { has_country_modifier = bav_religious_mandate_mod }
		remove_country_modifier = bav_religious_mandate_mod
	}
	add_country_modifier = { name = recently_changed_religion_dummy duration = 10 hidden = yes }
	if = {
		limit = {
			NOT = { religion_group = muslim }
			any_owned_province = { has_province_modifier = sufi_shrine }
		}
		every_owned_province = {
			limit = { has_province_modifier = sufi_shrine }
			remove_province_modifier = sufi_shrine
		}
	}
	if = {	#Mother Akan mountain count up on conversion
		limit = {
			owns = 383
			religion = mother_akan
			383 = { has_owner_religion = yes }
		}
		country_event = { id = mother_akan.3 }
		383 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 390
			religion = mother_akan
			390 = { has_owner_religion = yes }
		}
		390 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 392
			religion = mother_akan
			392 = { has_owner_religion = yes }
		}
		392 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 395
			religion = mother_akan
			395 = { has_owner_religion = yes }
		}
		395 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 396
			religion = mother_akan
			396 = { has_owner_religion = yes }
		}
		396 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 397
			religion = mother_akan
			397 = { has_owner_religion = yes }
		}
		397 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 398
			religion = mother_akan
			398 = { has_owner_religion = yes }
		}
		398 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 401
			religion = mother_akan
			401 = { has_owner_religion = yes }
		}
		401 = { add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 } }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {	#Mother Akan mountain count down on conversion
		limit = {
			owns = 383
			NOT = { religion = mother_akan }
			383 = { has_province_modifier = akan_ascetic_cult }
		}
		383 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 390
			NOT = { religion = mother_akan }
			390 = { has_province_modifier = akan_ascetic_cult }
		}
		390 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 392
			NOT = { religion = mother_akan }
			392 = { has_province_modifier = akan_ascetic_cult }
		}
		392 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 395
			NOT = { religion = mother_akan }
			395 = { has_province_modifier = akan_ascetic_cult }
		}
		395 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 396
			NOT = { religion = mother_akan }
			396 = { has_province_modifier = akan_ascetic_cult }
		}
		396 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 397
			NOT = { religion = mother_akan }
			397 = { has_province_modifier = akan_ascetic_cult }
		}
		397 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 398
			NOT = { religion = mother_akan }
			398 = { has_province_modifier = akan_ascetic_cult }
		}
		398 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {
		limit = {
			owns = 401
			NOT = { religion = mother_akan }
			401 = { has_province_modifier = akan_ascetic_cult }
		}
		401 = { remove_province_modifier = akan_ascetic_cult }
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	if = {	#Mother Akan normal conversion
		limit = {
			religion = mother_akan
			NOT = { owns = 383 }
			NOT = { owns = 390 }
			NOT = { owns = 392 }
			NOT = { owns = 395 }
			NOT = { owns = 396 }
			NOT = { owns = 397 }
			NOT = { owns = 398 }
			NOT = { owns = 401 }
		}
		country_event = { id = mother_akan.3 }
	}
	if = {
		limit = {
			NOT = { religion = bulgu_orazan }
			has_country_flag = bulgu_orazan_flag
		}
		country_event = { id = bulgu_orazan.14 }
	}

	if = {
		limit = {
			tag = J47
			NOT = { religion = feast_of_the_gods }
		}
		country_event = { id = ogre.31 } #Gorger Lord positioning himself as the voice of the gods
	}
	update_nsc_level_secondary_effects = yes

	events = {
		# muslim_school_events.20 #Pick School
		high_philosophy_events.0
		propagate_religion_events.7 #Propagated Country is now Muslim
		new_sun_cult.10 #Getting back mage estate if NSC and not human anymore
	}
	if = {	# xiaken lose their reform and become independent when religion changes
	    limit = {
	        is_subject_of_type = daimyo_xiaken_vassal
	        NOT = { religion = righteous_path }
	    }
	    #xiaken is removed instantly because RP is one of the conditions for it
	    #remove_government_reform = xiaken
	    grant_independence = yes
	}
}

# country.
on_secondary_religion_change = {
	# Done from code: add_prestige = -50 (Define: CHANGE_SECONDARY_PRESTIGE_HIT)
	on_secondary_religion_change_estate_privileges_effect = yes
	clr_country_flag = khojas_established
	if = {
		limit = { check_variable = { which = khojas_retained value = 1 } }
		set_variable = { which = khojas_retained value = 0 }
	}
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# country
on_colonial_liberation = {
	if = {
		limit = { NOT = { has_country_flag = old_world_to_new_world_flag } }
		country_event = { id = colonial_nation.90 days = 1 }
	}
	FROM = { country_event = { id = bertus_changes.1039 } }
}

# country
on_colonial_reintegration = {
	events = {
		colonial_nation.91
	}
	country_event = { id = bertus_changes.1039 }
}

# country
on_peace_actor = {
	events = {
		# usa_dlc.36			# Evacuation Day
		deepwoods.12			# Give wood elf territory back
		flavor_krakazol.42		#krakazol ale war
	}
}

# country
on_peace_recipient = {
	events = {
		flavor_krakazol.42		#krakazol ale war
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	ROOT = {clr_country_flag = at_war_flag}
	if = {
		limit = {
			any_known_country = { humiliated_by = ROOT }
			NOT = { has_country_flag = gecko_show_strength }
		}
		set_country_flag = gecko_show_strength
	}
	if = {	#bertus mod
		limit = {
			has_disaster = gawed_initial_disaster_burghers
			FROM = { has_country_modifier = orcish_military }
		}
		change_variable = { which = burghers_apeased_var value = 10 }
		home_trade_node_effect_scope = {
			add_trade_node_income = 12
		}
	}
	if = {	#bertus mod
		limit = {
			has_disaster = gawed_initial_disaster_peasants
			FROM = { has_country_modifier = orcish_military }
		}
		change_variable = { which = peasants_apeased_var value = 10 }
		add_war_exhaustion = -4
	}
	if = {	#bertus mod
		limit = {
			has_disaster = gawed_initial_disaster_peasants
			FROM = { has_country_modifier = kobold_military }
		}
		change_variable = { which = peasants_apeased_var value = 10 }
		add_war_exhaustion = -4
	}
	if = {	#bertus mod
		limit = {
			has_disaster = gawed_initial_disaster_nobles
			FROM = { is_neighbor_of = ROOT }
		}
		change_variable = { which = nobles_apeased_var value = 10 }
		add_legitimacy = 10
	}
	#FROM = { country_event = { id = flavor_cri.6 } }
	if = {	#bertus mod
		limit = {
			is_emperor = yes
			hre_reform_passed = emperors_legitimacy
			from = { ai = no }
		}
		add_imperial_influence = 10
	}
	if = {
		limit = {
			has_country_flag = can_gain_legendary_pirates_flag
			NOT = { has_ruler_flag = historical_pirate }
			has_government_attribute = is_pirate_republic_reform
			FROM = { total_development = ROOT }
		}
	}
	ROOT = { country_event = { id = tributary_events.32 } }
	ROOT = { country_event = { id = xhazobkult_events.2000 } }
	centaur_won_war_count = yes
	if = {
		limit = { tag = Z43 has_ruler_flag = sicrheior_son }
		change_variable = { nbWarWon = 1 }
	}
	if = {	# Adenica wars won counter
		limit = { tag = B58 }
		change_variable = { adenicaWarsWon = 1 }
		if = {
			limit = {
				NOT = { has_matching_religion = FROM }
				religion = regent_court
			}
			change_variable = { adenicaReligiousWarsWon = 1 }
		}
		if = {
			limit = {
				FROM = { is_force_converted = yes }
				religion = regent_court
			}
			change_variable = { adenicaReligiousWarsWon = 1 }
		}
		if = {
			limit = { FROM = { culture_group = orcish } }
			change_variable = { adenicaOrcWarsWon = 1 }
		}
	}
	if = {	#Ravenmarch Monstrous Wars
		limit = { tag = B48 }
		if = {
			limit = { FROM = { monstrous_culture = yes } }
			change_variable = { nbRavenWon = 1 }
		}
	}
	if = {	# Castanor wars won against beasts & evil counter
		limit = { tag = B32 }
		if = {
			limit = {
				FROM = {
					OR = {
						monstrous_culture = yes
						is_evil = yes
					}
				}
			}
			change_variable = { castanorWarsWonAgainstBeastsBarbarismEvil = 1 }
		}
	}
	if = {
		limit = {
			is_part_of_hre = yes
			FROM  = { is_part_of_hre = yes }
		}
		ROOT = { save_global_event_target_as = hre_winner }
		FROM = { save_global_event_target_as = hre_loser }
		random_known_country = {
			limit = {
				has_reform = free_city
				NOT = { prestige = 40 }
				NOT = { has_country_modifier = fc_treatyconference_timer }
			}
			add_country_modifier = { name = fc_treatyconference_timer duration = 3650 hidden = yes }
			country_event = { id = free_cities.7 days = 7 }
		}
	}
	if = {	#Sun elf winning war
		limit = {
			is_chosen_country = yes
			religion = bulwari_sun_cult
		}
		clr_country_flag = nsc_lost_war
	}
	if = {	#Seinathil War Won Count
		limit = {
			tag = A90
			OR = {
				has_country_modifier = A90_bardic_influence_1
				has_country_modifier = A90_bardic_influence_2
				has_country_modifier = A90_bardic_influence_3
				has_country_modifier = A90_bardic_influence_4
				has_country_modifier = A90_bardic_influence_5
			}
		}
		change_variable = { which = seinathilBardicAlliesWarWon value = 1 }
	}
	if = {	#Seinathil Bardic Allies
		limit = {
			OR = {
				has_country_flag = A90_bardic_ally
				tag = A90
			}
			NOT = { is_in_war = { participants = A90 } }
		}
		every_country = {
			remove_country_modifier = A90_bardic_influence_1
			remove_country_modifier = A90_bardic_influence_2
			remove_country_modifier = A90_bardic_influence_3
			remove_country_modifier = A90_bardic_influence_4
			remove_country_modifier = A90_bardic_influence_5
		}
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 20 }
	}
	if = {
		limit = {
			tag = Z99
			has_country_flag = black_overseer_invasion
			any_known_country = {
				if = {
					limit = { war_with = Z99 }
					NOT = {
						any_owned_province = {
							OR = {
								region = north_salahad_region
								region = akan_region
							}
						}
					}
				}
			}
		}
		clr_country_flag = black_overseer_invasion
		remove_country_modifier = black_overseer_1
		remove_country_modifier = black_overseer_2
		remove_country_modifier = black_overseer_3
		remove_country_modifier = black_overseer_4
		remove_country_modifier = black_overseer_5
		remove_country_modifier = black_overseer_6
	}
	if = { #Bulwar incident end
		limit = {
			tag = F39
			FROM = { tag = F28 }
		}
		country_event = { id = flavour_bulwar_tag.15 }
	}
}

# country
# root = winning country, from = loser country
on_main_war_won = {
	on_main_war_won_effect = yes #1.35
}

# country
# root = winning country, from = loser country
on_separate_war_won = {
}

# country
# root = loser country, from = winner country
on_war_lost = {
	ROOT = {clr_country_flag = at_war_flag}
	if = {	#bertus mod
		limit = { ROOT = {is_hegemon = yes} }
		every_country = {
			limit = {
				NOT = {tag = ROOT}
				NOT = {tag = FROM}
			}
			add_country_modifier = { name = lost_hegemony duration = 365 }
		}
	}
	#ROOT = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
	ROOT = { country_event = { id = xhazobkult_events.2000 } }

	if = {
        limit = {
            government = republic
            is_lesser_in_union = yes
		}
		change_government_to_monarchy = yes
    }
	add_country_modifier = { name = just_lost_war_timer duration = 10 hidden = yes }
	ROOT = { country_event = { id = anbennar_setup.14 } }
	if = {
		limit = { is_subject = yes }
		country_event = { id = diggy.122 }
	}
	if = {	#Sun elf losing war
		limit = {
			is_chosen_country = yes
			religion = bulwari_sun_cult
		}
		set_country_flag = nsc_lost_war
	}
	if = {	#Seinathil Bardic Allies
		limit = {
			OR = {
				has_country_flag = A90_bardic_ally
				tag = A90
			}
			NOT = { is_in_war = { participants = A90 } }
		}
		every_country = {
			remove_country_modifier = A90_bardic_influence_1
			remove_country_modifier = A90_bardic_influence_2
			remove_country_modifier = A90_bardic_influence_3
			remove_country_modifier = A90_bardic_influence_4
			remove_country_modifier = A90_bardic_influence_5
		}
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 20 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
	if = {
		limit = {
			tag = Z99
			has_country_flag = black_overseer_invasion
			any_known_country = {
				if = {
					limit = { war_with = Z99 }
					NOT = {
						any_owned_province = {
							OR = {
								region = north_salahad_region
								region = akan_region
							}
						}
					}
				}
			}
		}
		clr_country_flag = black_overseer_invasion
		remove_country_modifier = black_overseer_1
		remove_country_modifier = black_overseer_2
		remove_country_modifier = black_overseer_3
		remove_country_modifier = black_overseer_4
		remove_country_modifier = black_overseer_5
		remove_country_modifier = black_overseer_6
	}
	if = { #The Command is Losing Ground I
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 36
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.11 days = 1 } }
	}
	if = { #The Command is Losing Ground II
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 24
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.12 days = 1 } } #Tiltaghar
	}
	if = { #The Command is Losing Ground III
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 13
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.13 days = 1 } } #Tiltaghar
	}
	if = { #Aftermath of the War
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
					value = 1
					region = shamakhad_region
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.14 } } #Tiltaghar
	}
	if = { #Bulwar incident end
		limit = {
			tag = F39
			FROM = { tag = F28 }
		}
		country_event = { id = flavour_bulwar_tag.15 }
	}
}

on_main_war_lost = {
}

on_separate_war_lost = {
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	on_battle_ended_effect = yes	# 1.35
	on_battle_lost_country_effect = yes
	if = {	#bertus mod
		limit = {has_country_modifier = corinite_purim_teachings_aspect_modifier}
		ROOT = { remove_country_modifier = corinite_purim_teachings_aspect_modifier }
	}
	# battle_cult_spreading_effect = yes #Scripted effect for fetishist cult mechanics.
	ROOT = { jaddari_deioderan_battle_counter_update = { value = -1 } }
	random_events = {
		90 = 0
		10 = friendship_events.1 #Historical Friendship Broken
	}
	if = {
		limit = { NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		centaur_battle_count_lost = yes
		aelnar_battle_count_lost = yes
	}
	if = {
		limit = { has_country_flag = has_nsc_disaster }
		change_variable = { which = nscDisasterBattleLostScoreVar value = 1 }
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 1 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				# NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
	#Anbennar
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = pretender_rebels
			}
			owner = {
				tag = A48
				has_disaster = sugamber_succession_war
			}
		}
		owner = { country_event = { id = flavor_sugamber.9 } }
	}
	if = {
		limit = { has_province_flag = nsc_duel } #Mages vs Artificers duel during the 'Rise of Artificery' NSC incident
		if = {
			limit = { NOT = { has_province_flag = nsc_duel_null } }
			if = {
				limit = { from = { tag = REB is_rebel_type = artificer_duelists_rebels } }
				owner = { country_event = { id = new_sun_cult.203 } }
			}
			else_if = {
				limit = { from = { tag = REB is_rebel_type = mage_duelists_rebels } }
				owner = { country_event = { id = new_sun_cult.204 } }
			}
		}
		else = {
			owner = { country_event = { id = new_sun_cult.205 } }
		}
	}
	random_events = {
		900 = 0

		33 = aw_ghouls.110
		67 = aw_ghouls.111	#more common one for spookier places
	}
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	on_battle_won_unit_effect = yes #1.35

	if = {	# Edhardrachon battles
		limit = {
			unit_owner = { tag = B61 }
			is_ruler_commanding_unit = yes
			if = { # This to prevent multiple armies in battle counting as multiple victories
				limit = { B61 = { has_country_flag = battleCooldownPatricianCastan } }
				B61 = { had_country_flag = { flag = battleCooldownPatricianCastan days = 5 } }
			}
		}
		B61 = {
			change_variable = { which = patricianCastanBattlesWon value = 1 }
			clr_country_flag = battleCooldownPatricianCastan
			set_country_flag = battleCooldownPatricianCastan
		}
	}
	if = {
		limit = {
			unit_owner = { tag = B32 }
			enemy_unit = { unit_owner = { tag = B61 } }
		}
		if = {
			limit = {
				enemy_unit = { is_ruler_commanding_unit = yes }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstPatricianCastan } }
					B32 = { had_country_flag = { flag = battleCooldownAgainstPatricianCastan days = 5 } }
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstPatricianCastan value = 1 }
				clr_country_flag = battleCooldownAgainstPatricianCastan
				set_country_flag = battleCooldownAgainstPatricianCastan
			}
		}
		if = {
			limit = {
				enemy_unit = { unit_owner = { general_with_name = "Elecast, the Burnished Wing" }}
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstElecast } }
					B32 = { had_country_flag = { flag = battleCooldownAgainstElecast days = 5 } }
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstElecast value = 1 }
				clr_country_flag = battleCooldownAgainstElecast
				set_country_flag = battleCooldownAgainstElecast
			}
			random_list = {
				# Nothing happens
				10 = {
					modifier = {
						factor = 0
						# Yes this implementation sucks
						any_province = {
							has_province_flag = castanor_stack_wipe
							NOT = { had_province_flag = { flag = castanor_stack_wipe days = 2 } }
						}
					}
				}
				1 = {
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstElecast value = 2 } }
					}
					modifier = {
						factor = 3
						B32 = { check_variable = { which = battlesWonAgainstElecast value = 3 } }
					}
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstElecast value = 5 } }
					}
					B32 = { country_event = { id = flavor_castanor.210 } }
				}
			}
		}
		else_if = {
			limit = {
				enemy_unit = { unit_owner  = {general_with_name = "Gracos, the Leaden Breath" } }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstGracos } }
					B32 = { had_country_flag = { flag = battleCooldownAgainstGracos days = 5 } }
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstGracos value = 1 }
				clr_country_flag = battleCooldownAgainstGracos
				set_country_flag = battleCooldownAgainstGracos
			}
			random_list = {
				# Nothing happens
				10 = {
					modifier = {
						factor = 0
						# Yes this implementation sucks
						any_province = {
							has_province_flag = castanor_stack_wipe
							NOT = { had_province_flag = { flag = castanor_stack_wipe days = 2 } }
						}
					}
				}
				1 = {
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstGracos value = 2 } }
					}
					modifier = {
						factor = 3
						B32 = { check_variable = { which = battlesWonAgainstGracos value = 3 } }
					}
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstGracos value = 5 } }
					}
					B32 = { country_event = { id = flavor_castanor.208 } }
				}
			}
		}
		else_if = {
			limit = {
				enemy_unit = { unit_owner  = {general_with_name = "Erella, the Argent Claw" } }
				if = {
					limit = { B32 = { has_country_flag = battleCooldownAgainstErella } }
					B32 = { had_country_flag = { flag = battleCooldownAgainstErella days = 5 } }
				}
			}
			B32 = {
				change_variable = { which = battlesWonAgainstErella value = 1 }
				clr_country_flag = battleCooldownAgainstErella
				set_country_flag = battleCooldownAgainstErella
			}
			random_list = {
				# Nothing happens
				10 = {
					modifier = {
						factor = 0
						# Yes this implementation sucks
						any_province = {
							has_province_flag = castanor_stack_wipe
							NOT = { had_province_flag = { flag = castanor_stack_wipe days = 2 } }
						}
					}
				}
				1 = {
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstErella value = 2 } }
					}
					modifier = {
						factor = 3
						B32 = { check_variable = { which = battlesWonAgainstErella value = 3 } }
					}
					modifier = {
						factor = 10
						B32 = { check_variable = { which = battlesWonAgainstErella value = 5 } }
					}
					B32 = { country_event = { id = flavor_castanor.209 } }
				}
			}
		}
	}
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
	on_battle_ended_effect = yes
	on_battle_won_country_effect = yes #1.35
	if = {
		limit = { religion = goblinic_shamanism  NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		FROM = { goblinic_shamanism_event = yes } # Fires events for a cult spreading upon winning a battle
	}
	#ROOT = { country_event = { id = infestation_goblin.300 } } # post-rebellion cleanup
	ROOT = { jaddari_deioderan_battle_counter_update = { value = 1 } }
	if = {
		limit = { NOT = { FROM = { OR = { tag = REB tag = NAT } } } }
		centaur_battle_count_win = yes
		ogre_battle_count_win = yes
	}
	if = {
		limit = { has_country_flag = has_nsc_disaster }
		change_variable = { which = nscDisasterBattleWonScoreVar value = 1 }
	}
	if = {
		limit = { tag = F34 }
		change_variable = { which = deggarionBattlesWon value = 1 }
	}
	if = { limit = { tag = B37 }
		change_variable = { which = RogieriaEmulantAdenn value = 1 }
	}
	if = {
		limit = { tag = I03 }
		country_event = { id = flavor_vazhatun.25 }
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 1 }
	}
	if = {
		limit = {
			NOT = { FROM = { tag = REB } }
			Z43 = { has_ruler_flag = sicrheior_son }
		}
		Z43 = {
			change_variable = { nbSonBattleWon = 1 }
			change_variable = { totalBattle = 1 }
			set_variable = { which = battleWinRate which = nbSonBattleWon }
			divide_variable = { which = battleWinRate which = totalBattle }
			multiply_variable = { which = battleWinRate value = 100 }
		}
	}
	if = { 
		limit = { 
			tag = F31 #Eduz-Vacyn
			FROM = { 
				OR = { 
					tag = F29 #Zokka
					tag = F46 #Jaddari
				}
			}
		}
		change_variable = { which = EduzVacynEnboldenEledas value = 1 }
	}
	random_events = {
		1000 = 0

		100 = aw_zombies.100
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	on_battle_lost_unit_effect = yes #1.35
	if = {
        limit = {
            unit_owner = {
                tag = Z50
                has_ruler_flag = grombar_corinite_ruler_joins_corinite_wars
            }
            is_ruler_commanding_unit = yes
        }
        Z50 = {
            country_event = { id = flavor_grombar.32 }
        }
    }
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={
	if = { #1.35
		limit = { owner = { has_country_flag = adding_provinces_to_trade_c_merc_prod_flag } }
		owner = { add_mercantilism = 1 } 
		add_base_production = 1 
	}
}

# province
# root = location, from = country doing it
on_removed_from_company ={
	if = { #1.35
		limit = { owner = { has_country_flag = adding_provinces_to_trade_c_merc_prod_flag } }
		owner = { add_mercantilism = -1 } 
		add_base_production = -1 
	}
}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	if = {	# Castanor disaster trigger enemy general capture event helper
		limit = {
			FROM = {
				TAG = B32
				has_disaster = castanor_succession_war
			}
			ROOT = { NOT = { num_of_units_in_province = { who = B61 amount = 1 } } }
		}
		set_province_flag = castanor_stack_wipe
	}
	random_events = {
		1000 = 0
		#100 = tyw_events.22	# Capital Battle in Religious War
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	grant_manpower_from_besieging_fort = yes
	events = {
		flavor_grombar.14
		deepwoods.22
		dotimist_flavour.2
		flavour_tluukt.8
		flavor_marrhold.2	#bertus mod
		flavor_greedy_grin.3	#bertus mod
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 0.5 }
	}
	if = { limit = { tag = I03 }
		country_event = { id = flavor_vazhatun.25 }
	}
	clr_vampire_hideout = yes
	castanor_succession_war_shift_momentum_siege = yes
	random_events = {
		10 = army_professionalism_events.1 #City Sacked
		100 = 0
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
	events = {
		curia.8			#curia loses its money, not sure we need new ver
		# papacy_events.5	#AnbennarNewVer
		flavour_tluukt.60
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 0.25 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# province
# root = location, from = losing country
on_siege_won_province = {
	remove_siege_spells_from_province = yes
	remove_province_modifier = making_soup_modifier	#bertus mod
	events = {
		flavor_vazhatun.111
	}
    if = {
		limit = {
			controller = {
				OR = {
					ai = no
					AND = {
						overlord = { ai = no } 
						is_subject = yes
					}
				}
			}
			is_city = yes
			NOT = { controlled_by = owner }
		}
		if = {
			limit = {
				controller = { has_government_mechanic = enslavement_mechanic }
				NOT = { has_province_modifier = already_enslaved_modifier }
			}
			get_slaves = yes
			add_province_modifier = { name = already_enslaved_modifier duration = 1825 hidden = yes }
		}
	}
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				# NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
	# Anbennar
	if = {
		limit = { owner = { has_disaster = magnate_uprising } }
		magnate_uprising_siege_won_effects = yes
	}
	if = { 	#luciande liandiel
		limit = { 
			owner = { 
				tag = B34 
				has_country_flag = B34_liandiel_rebelled
			}
			ROOT = { province_id = 261 }
		}
		owner = { country_event = { id = flavor_luciande.28 } }
	}
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	remove_siege_spells_from_province = yes
	events = {
		diggy.13
		magic_project_lichdom.17
		vampires_estate_events.15
		cavegoblinflavor.15
	}

	if = {
		limit = { FROM = { tag = Z43 has_country_flag = harvesting_connadh } } #Aelnar
		province_event = { id = aelnar.103 }
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# province
# root = location, from = country that owns it
# Fired right after the great project is constructed
on_great_project_constructed = {
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
	on_new_monarch_effect = yes #1.35
	# crimean_succession_effect = yes #Scripted effect
	# slesvig_question_effect = yes #Scripted effect

	#Anbennar
	if = {
		limit = {
			has_dlc = "Rights of Man"
			government = theocracy
			OR = {
				ruler_is_elven = yes
				ruler_is_dwarven = yes
				ruler_is_gnomish = yes
			}
		}
		set_ruler_flag = long_lived_theocracy
	}
	if = {
		limit = { has_estate_privilege = estate_eunuchs_anb_tutors }
		country_event = { id = eunuchs_estate_anb_events.13 }
	}
	succession_culture_religion_effect = yes
	#Anbennar
	set_runelink_level = yes
	events = {
		flavor_sca.2				# Education Focus of the new Ruler

		#Anbennar
		#anbennar_setup.1			#Setup if new country is monstrous or not
		#anbennar_setup.6			#setup mage organization for new country - handled by mage_organization.1
		anbennar_setup.7			#Setup for evil/witch king opinions
		anbennar_setup.9			#Setup for racial admin mil
		anbennar_setup.19			#Setup for artifice system
		# racial_modifiers.5		#Racial admin change if unmatching
		# racial_modifiers.6		#Racial mil change if unmatching
		magic_ruler.109				#gives magic schools
		anb_miscevents.10 			# Make you adventurer reform if youre not - this is for released countries
		anb_miscevents.11			# Makes temples theocracies when released
		#adventuring.7	#A new Captain rises

		#anbennar_setup_player.1
		#anbennar_setup_player.2

		#Sugamber succession war
		#flavor_sugamber.14		# Pro-Lisolette rebels win the war
		#flavor_sugamber.15		# Pro-Ethelbert rebels win the war
		flavor_sugamber.999		# Lisolette's legitimacy called into question

		the_command.3			#Hobgoblin faction influence
		flavor_blademarches.3 	#Blademarches succession event
		aelnar.82				#Sicrheior Son
		flavor_telgeir.1		# Vanbury can replace new dynasty

		#Black Castanor Trial
		castanortrials.12

		tribal_succession.1		# Harsh anti-tribals.
		9492 					# Remove some event modifiers

		# muslim_school_events.20 #No Religious School
		high_philosophy_events.0

		#Silver Families
		silver_families.1		#Silmuna
		silver_families.2		#Siloriel
		silver_families.3		#Silcalas
		silver_families.4		#Silistra
		silver_families.5		#Silnara
		silver_families.6		#Silebor
		silver_families.7		#Silurion
		silver_families.8		#Silgarion
		
		flavor_gawed.5	# Magnate Council determines whether to support monarch
		new_sun_cult.10 #Getting back mage estate if NSC and not human anymore
		flavor_azka_sur.23	#Azka Sur incident
		shadow.2	#makes troll leader into good general
		harpy_events.122	#Harpy parentage insight
	}

	if = {	#bertus mod
		limit = {
			OR = {
				has_country_flag = employs_adm_homunculus
				has_country_flag = employs_dip_homunculus
				has_country_flag = employs_mil_homunculus
			}
		}
		kill_adm_homunculus = yes
		kill_dip_homunculus = yes
		kill_mil_homunculus = yes
		country_event = { id = magic_project_homunculus.7 days = 1 }
		get_homonculus_skill = yes
	}
	if = {
		limit = { NOT = { has_mages_organization_privilege = yes } }
		country_event = { id = estate_organization.1 days = 35 }		#choose organization for adventurer estate
	}
	if = {
		limit = { NOT = { has_adventurers_organization_privilege = yes } }
		country_event = { id = estate_organization.1 days = 35 }		#choose magical organization for mage estate
	}
	if = {
		limit = {
			NOT = { has_artificers_organization_privilege = yes }
			OR = {
				has_estate = estate_artificers
				AND = {
					has_estate = estate_dragon_command
					has_institution = manufactories
				}
			}
		}
		country_event = { id = estate_organization.5 days = 35 }		#choose magical organization for mage estate
	}
	if = {
		limit = { has_unmatching_administration_to_primary_culture = yes }
		country_event = { id = racial_modifiers.5 days = 35 }		#Racial admin change if unmatching
	}
	#country_event = { id = racial_modifiers.6 days = 1 }			#Racial mil change if unmatching

	if = {
		limit = { NOT = { any_country = { has_opinion_modifier = { who = ROOT modifier = root_monstrous } } } }
		country_event = { id = monstrous.100 days = 35 }
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			OR = {
				ruler_is_elven = yes
				ruler_is_dwarven = yes
				ruler_is_gnomish = yes
				ruler_is_half_elven = yes
			}
		}
		country_event = { id =  magic_ruler.102 days = 3700 } #Since long-lived races can no longer naturally roll mage_personality has first trait fire after second trait received
	}
	if = {
		limit = { religion = the_jadd has_global_flag = the_jadd_is_the_true_faith NOT = { has_country_modifier = jaddari_the_true_faith } }
		add_country_modifier = { name = jaddari_the_true_faith duration = -1 }
	}
	if = {	# Adenica new ruler pick chivalric virtue to follow
		limit = {
			has_country_flag = formed_adenica_flag
			OR = {
				has_country_modifier = adenica_knight
				has_country_modifier = adenica_mortal_paragon
			}
		}
		country_event = { id = flavor_adenica.20 }
	}
	if = {
		limit = { has_government_attribute = always_mage }
		country_event = { id = magic_ruler.110 }
	}
	if = {
		limit = { has_reform = black_acolyte_reform }
		country_event = { id = black_acolytes.100 }
	}

	random_events = {
		1000 = 0

		50 = dynastic_events.4
		50 = dynastic_events.5
		25 = harpy_events.107		#Failed Policy of Fratricide
	}

	#NSC effects
	refresh_nsc_incidents_ui = yes
	update_nsc_level_secondary_effects = yes
	if = {
		limit = { religion = bulwari_sun_cult }
		set_variable = { which = battlesWonBySunElfRuler value = 0 }
	}
	if = {	#Mother Akan set deity
		limit = { religion = mother_akan }
		country_event = { id = mother_akan.3 }
	}
	if = {	#Death of Rogier
		limit = {
			or = { tag = B07 tag = B37 }
			not = { has_ruler_flag = rogieria_rogier_alive }
		}
		country_event = { id = flavor_rogieria.30 days = 1 }
	}
	if = {	#Death of the Young Owl
		limit = {
			tag = B37
			had_ruler_flag = { flag = rogieria_young_owl_alive days = 365 }
			not = { has_ruler_flag = rogieria_young_owl_alive }
		}
		country_event = { id = flavor_rogieria.31 days = 1 }
	}
	if = {
		limit = { ruler_is_harpy = yes is_female = no }
		define_ruler = { female = yes }
	}
	if = {	#Wesdam/Madelaire succession
		limit = {
			tag = A04
			has_regency = no
			NOT = { has_country_flag = wesdam_succession_crisis }
			has_country_flag = wesdam_first_succession
		}
		clr_country_flag = wesdam_first_succession
		set_country_flag = wesdam_succession_crisis
		if = {
			limit = { NOT = { active_imperial_incident = any } }
			country_event = { id = flavor_wesdam.11 }
		}
		else = { country_event = { id = flavor_wesdam.11 days = 365 } }
	}
	if = {
		limit = {
			tag = A04
			has_regency = no
			NOT = { has_country_flag = wesdam_succession_crisis }
		}
		set_country_flag = wesdam_first_succession
	}
	if = {
		limit = {
			tag = H85
			has_reform = truedagger_intrigue_court
		}
		country_event = { id = flavor_truedagger.11 }
	}
}

on_new_consort = {
	country_event = { id = consort_events.2 }
	if = {	#bertus mod
		limit = { has_idea = experienced_diplomats }
		get_dynastic_consort_bonus_modifier = yes
	}
	#harpy consorts
	if = {
		limit = {
			consort_is_harpy = yes
			has_female_consort = no
		}
		if ={
			limit = { OR = { tag = F49 was_tag = F49 } }
			set_consort_culture = desert_elf
		}
		else_if = {
			limit = { consort_culture = firanyan_harpy }
			set_consort_culture = gelkar
		}
		else_if = {
			limit = { consort_culture = siadunan_harpy }
			random_list = {
				50 = { set_consort_culture = surani }
				50 = { set_consort_culture = ghankedhen }
			}
		}
		else_if = {
			limit = { consort_culture = feng_harpy }
			set_consort_culture = sikai
		}
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			OR = {
				consort_is_elven = yes
				consort_is_dwarven = yes
				consort_is_gnomish = yes
				consort_is_half_elven = yes
			}
		}
		country_event = { id = anb_ruler.100 }
	}
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
}

# country
on_monarch_death = {
	#Anbennar
	events = {
		bertus_changes.1101	#elector duchy to kingdom	#bertus mod
		witch_king.1		#Death of a Witch King
		#magic_misc_events.4	#Undead Army
		#magic_project_lichdom.14	#Force Regency Council
		jadd_empire.1		#Move the court
		aelnar.25			#Does lithiel assume control
		aelnar.39			#The Turning Point
		eordellon.1			#Funereal Season Honoring
		flavor_blademarches.3 #Blademarches succession event
		castanortrials.99	# Castanorian Interregnum
		flavor_corintar.4	#Bluetusk's Retirement
		azka_evran.11		#Deggarion's Death
		verkaldromak.71		#Verkal Dromak election from mages
		magic_project_lichdom.12 # Revival
		vampire_ruler.33 # Vampire Heir Returns
		flavor_castanor.211 # One of the Castans during disaster dies
		flavor_elikhand.7 #Entef put to rest and mummified
		ogre.25 #Rancor is killed
		flavour_tluukt.50 #Death of Tluukt
		flavor_luciande.38 #death of lucian
		government_events.3 #1.35
	}
	if = {	#bertus mod
		limit = { has_ruler_flag = magisterium_study_assistance_flag }
		update_magic_study_experience_modifier = { value = -25 }
	}
	if = {	#bertus mod
		limit = { has_idea = experienced_diplomats }
		remove_country_modifier = experienced_diplomats_consort_modifier_adm_6
		remove_country_modifier = experienced_diplomats_consort_modifier_adm_4
		remove_country_modifier = experienced_diplomats_consort_modifier_adm_2
		remove_country_modifier = experienced_diplomats_consort_modifier_dip_6
		remove_country_modifier = experienced_diplomats_consort_modifier_dip_4
		remove_country_modifier = experienced_diplomats_consort_modifier_dip_2
		remove_country_modifier = experienced_diplomats_consort_modifier_mil_6
		remove_country_modifier = experienced_diplomats_consort_modifier_mil_4
		remove_country_modifier = experienced_diplomats_consort_modifier_mil_2
	}
	if = {
		limit = {has_reform = military_dictatorship_reform}
		remove_government_reform = military_dictatorship_reform	#bertus mod
	}
	if = {	#bertus mod
		limit = {			
			OR = {
				has_government_attribute = no_stability_loss_on_monarch_death 
				has_country_flag = no_stab_hit_on_ruler_death
				has_a_primary_cult_selected = yes
				short_lived = yes	#bertus mod
				has_country_flag = no_stab_hit_on_ruler_death
			}
			OR = {
				government = tribal
				government = monarchy
			}
		}
		add_stability = 1
	}
	if = {	#bertus mod
		limit = {
			OR = {
				has_government_attribute = generals_become_rulers
				has_government_attribute = admirals_become_rulers
			}
		}
	}
	if = {
		limit = { has_country_flag = vampire_ruler }
		country_event = { id = vampires_estate_events.13  days = 1 } # Revival
	}
	if = {
		limit = { has_country_modifier = undead_military }
		country_event = { id = magic_misc_events.4 days = 60 } #Undead Army
	}
	#Anbennar
	if = {
		limit = {
			has_reform = godhood_reform
			NOT = { has_country_flag = elven_constellation_done }
		}
		country_event = { id = aelnar.65 days = 10 }
	}
	if = {	# Give them a temp ruler while waiting for their vamp to revive
		limit = {
			ruler_can_revive = yes
			has_states_general_mechanic = yes
			NOT = { has_country_flag = reviving_ruler }
		}
		set_country_flag = reviving_ruler
		define_ruler = { adm = 0 mil = 0 dip = 0 regency = yes }
	}
}

# country
on_regent = {

	events = {
		tribal_succession.1	# harsh anti-tribals.
	}
	#Mother Akan set deity
	if = {
		limit = { religion = mother_akan }
		country_event = { id = mother_akan.3 }
	}
}

# country
on_extend_regency = {
}

# country
on_new_term_election = {

	events = {
		elections.720		# Dutch Republic
		elections.800	# Lottery election
		magocracy.2			#bertus mod
		pirates.1
		700	# Election event
		flavor_roilsard.12	# Roilsard Special
		cyranvar.1001	#bertus mod 
		slave_ruler_election.1	#bertus mod xenophile election
		#Anbennar
		# elections.900		#Allclan Nezkaru Council
		diggy_fallen.9
		marlliande.1
		flavour_reuyel.1
		flavor_krak.200 #krakdhumvror clan council
		flavor_krak.201 #krakdhumvror free council
		jinqiu.1			#Jinqiu election
		sunrise.0			#Hiderion Retires
		sunrise.1			#Sunrise election
		flavour_bulwar_tag.1	#Bulwar 12 families
		flavour_bulwar_tag.35	#From Bulwar MT
		flavor_krakazol.200 #Krakazol Olzonog
		flavor_newshire.11
		#bertus mod#	flavor_cestirmark.1 #United Trollsbay elections
	}
}

# country
on_death_election = {
	if = {
		limit = { has_reform = presidential_despot_reform }
		remove_government_reform = presidential_despot_reform
	}
	if = {
		limit = { has_government_attribute = is_pirate_republic_reform }
		set_country_flag = pirate_death_election
		country_event = { id = pirates.1 }
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		overlord = { country_event = { id = black_demesne.4 } }
	}
	if = {
		limit = { has_reform = bulwari_temple_reform }
		country_event = { id = flavor_vacyn.100 }
	}

	events = {
		elections.721		# Dutch Republic
		elections.800		# Lottery election
		magocracy.2			#bertus mod
		701

		#Anbennar
		diggy_fallen.9
		flavor_roilsard.13	# Roilsard Special
		cyranvar.1001	#bertus mod
		slave_ruler_election.1	#bertus mod
		marlliande.2
		# elections.901
		flavour_reuyel.2
		black_demesne.1
		flavor_krak.200 #krakdhumvror clan council
		flavor_krak.201 #krakdhumvror free council
		jinqiu.2			#Jinqiu election
		sunrise.2			#Sunrise election
		flavour_bulwar_tag.1	#Bulwar twelve families
		flavour_bulwar_tag.35	#From Bulwar MT
		flavor_krakazol.201 #Krakazol Olzonog
		flavor_newshire.12
		flavor_newshire.41
		#bertus mod#	flavor_cestirmark.2 #United Trollsbay death election
	}
}

# country
on_death_foreign_slave_ruler = {
	events = {
		#mamluk_events.0

		#Anbennar
		slave_ruler_election.0
	}
}

# country
on_replace_governor = {
	events = {
		elections.707
	}
}

# country
on_bankruptcy = {
	events = {
		racial_modifiers.5		#Racial admin change if unmatching
	}
	clear_roadwarrior_modifiers = yes
	if = {
		limit = { has_reform = roadwarrior_great_convoy }
		add_country_modifier = { name = roadwarrior_main_1 duration = -1 }
	}
	if = {	#bertus mod
		limit = { has_government_mechanic = kobold_hoard_mechanic }	#reduce 50%
		set_variable = { which = temp value = 0 }
		while = {
			limit = { has_government_power = { mechanic_type = kobold_hoard_mechanic power_type = hoard_amount value = 1 } }
			change_variable = { which = temp value = 0.01 }
			add_government_power = {  mechanic_type = kobold_hoard_mechanic power_type = hoard_amount value = -1 }
		}
		while = {
			limit = { check_variable = { which = temp value = 0.01 } }
			change_variable = { which = temp value = -0.01 }
			add_government_power = { mechanic_type = kobold_hoard_mechanic power_type = hoard_amount value = 0.5 }
		}
	}
	#hoardcurse modifier
	remove_country_modifier = the_reformist
	increase_interest = yes
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	events = {
		610
	}

	if = {	#Mulen cancel income transfer
		limit = { tag = F47 }
		FROM = { country_event = { id = flavour_mulen.24 days = 1 } }
	}
}

# country
on_heir_death = {
	if = {
		limit = { has_ruler_modifier = heir_mage_personality_mod }
		remove_country_modifier = heir_mage_personality_mod
	}
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
	if = {
		limit = { has_country_flag = albrecht_achilles_flag }
		clr_country_flag = albrecht_achilles_flag #Death of original Albrecht Achilles
	}
	if = {
		limit = { has_ruler_flag = sancaga_cikma }
		clr_ruler_flag = sancaga_cikma
		every_owned_province = {
			limit = {has_province_modifier = heir_in_training}
			remove_province_modifier = heir_in_training
		}
	}
	if = {
		limit = { has_ruler_flag = returned_from_sancaga_sikma_province }
		clr_ruler_flag = returned_from_sancaga_sikma_province
	}
		#Anbennar
	events = {

	}
}

# country
on_queen_death = {
	if = {	#bertus mod
		limit = { has_idea = experienced_diplomats }
		remove_country_modifier = experienced_diplomats_consort_modifier_adm_6
		remove_country_modifier = experienced_diplomats_consort_modifier_adm_4
		remove_country_modifier = experienced_diplomats_consort_modifier_adm_2
		remove_country_modifier = experienced_diplomats_consort_modifier_dip_6
		remove_country_modifier = experienced_diplomats_consort_modifier_dip_4
		remove_country_modifier = experienced_diplomats_consort_modifier_dip_2
		remove_country_modifier = experienced_diplomats_consort_modifier_mil_6
		remove_country_modifier = experienced_diplomats_consort_modifier_mil_4
		remove_country_modifier = experienced_diplomats_consort_modifier_mil_2
	}
	if = {
		limit = { has_ruler_modifier = consort_mage_personality_mod }
		remove_country_modifier = consort_mage_personality_mod
	}
	if = {
		limit = { has_consort_flag = 10_years_anniversary }
		set_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_consort_flag = 20_years_anniversary }
		set_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_consort_flag = consort_has_affection_of_ruler }
		set_ruler_flag = consort_had_affection_of_ruler
	}
	if = {
		limit = {
			has_regency = no
			NOT = { has_ruler_flag = widow_widower }
		}
		set_ruler_flag = widow_widower
	}
	if = {
		limit = { has_consort_regency = no }
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = { has_ruler_flag = accepted_help_from_spouses_family }
		clr_ruler_flag = accepted_help_from_spouses_family
	}
	if = {
		limit = { has_ruler_flag = helped_spouses_family }
		clr_ruler_flag = helped_spouses_family
	}
	if = {
		limit = { has_ruler_flag = refused_to_help_spouses_family }
		clr_ruler_flag = refused_to_help_spouses_family
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		clr_ruler_flag = has_lowborn_consort
	}
	if = {
		limit = { has_country_modifier = consort_adm_advice }
		remove_country_modifier = consort_adm_advice
	}
	if = {
		limit = { has_country_modifier = consort_dip_advice }
		remove_country_modifier = consort_dip_advice
	}
	if = {
		limit = { has_country_modifier = consort_mil_advice }
		remove_country_modifier = consort_mil_advice
	}
	if = {
		limit = { has_country_modifier = without_spouse_advice }
		remove_country_modifier = without_spouse_advice
	}
	if = {
		limit = { has_ruler_modifier = affectionate_royal_couple }
		remove_country_modifier = affectionate_royal_couple
	}
	if = {
		limit = { has_ruler_modifier = bav_woman_scorned_mod }
		remove_country_modifier = bav_woman_scorned_mod
	}
	if = {
		limit = { has_ruler_modifier = bav_building_wife_church }
		remove_country_modifier = bav_building_wife_church
	}
	clr_ruler_flag = marriage_length
}

# country
on_new_heir = {
	country_event = { id = racial_misc.1 days = 2 }		# Half-orc heirs for cross-racial marriages
	country_event = { id = racial_misc.2 days = 2 }		# Half-elf heirs for cross-racial marriages
	country_event = { id = racial_misc.3 days = 2 }		# Human heirs for half-elf human marriages
	country_event = { id = racial_misc.10 days = 1 }	# Heirs are set to their parents race since event heirs are given primary culture instead
	country_event = { id = anb_ruler.101 days = 3 }		# Immortal/long-lived trait
	
	if = { limit = { heir_is_harpy = yes }
		if = { limit = { has_female_heir = no }
			if = { limit = { culture_group = harpy }
				define_heir = { dynasty = original_dynasty culture = ROOT female = yes }
			}
			else = {
				define_heir = { dynasty = original_dynasty culture = firanyan_harpy female = yes }
			}
		}
		else = {
			country_event = { id = harpy_events.102 }
		}
	}
}

# country
on_weak_heir_claim = {
	events = {
		611		# Pretenders rise up
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		theocracy.1
		flavor_sca.2			# Education Focus of the new Ruler
		#Anbennar
		magocracy.1
		adventurer.1
		shatteredcrown.44	#Shat Crown heirs
		flavour_balrijin.30 #Balrijin heirs
		verkalozovar_events.1001
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	emperor = {
		save_global_event_target_as = Emperor
		#Anbennar - Emperor won't denounce themselves
		if = {
			limit = { has_country_modifier = denounced_witch_king }
			remove_country_modifier = denounced_witch_king
		}
	}
	events = {
		900
	}
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor
on_emperor_elected = {
	every_elector = {
		if = {
			limit = { preferred_emperor = root }
			change_variable = { which = supported_successive_emperors value = 1 }
		}
		else = {
			set_variable = { which = supported_successive_emperors value = 0 }
		}
	}

	FROM = {
		remove_country_modifier = emperor_guard_modifier
		remove_country_modifier = emperor_battlemages_modifier
	}
	emperor = {
		save_global_event_target_as = Emperor
		country_event = { id = long_lived_emperor.1 }
		add_ruler_modifier = {name = emperor_guard_modifier duration = -1}	#bertus mod
		add_ruler_modifier = {name = emperor_battlemages_modifier duration = -1}	#bertus mod
	}
	if = {
		limit = {hre_reform_passed = imperial_cities}
		every_country = {
			limit = { OR = { has_reform = free_city is_subject_of_type = subject_free_city } }
			country_event = {id = bertus_changes.6029}
		}
	}
	if = {
		limit = { ROOT = { has_country_modifier = istralari_commanders_istralore } }
		every_country = {
			if = {
				limit = { is_part_of_hre = yes NOT = { has_country_modifier = istralari_commanders_empire } }
				country_event = { id = flavor_istralore.10 }
			}
		}
	}
	FROM = {
		if = {
			limit = { has_country_modifier = diet_occupied }
			remove_country_modifier = diet_occupied
			ROOT = { add_country_modifier = { name = diet_occupied duration = -1 } }
		}
		if = {
			limit = {
				any_country = { reverse_has_opinion_modifier = { modifier = opinion_imperial_diplomacy who = prev } }
			}
			every_country = {
				limit = { reverse_has_opinion_modifier = { modifier = opinion_imperial_diplomacy who = prev } }
				reverse_remove_opinion = { modifier = opinion_imperial_diplomacy who = prev }
				ROOT = { add_opinion = { modifier = opinion_imperial_diplomacy who = prev } }
			}
		}
	}
	FROM = {
		if = {
			limit = { has_country_modifier = giberd_gnomish_elector_mod }
			remove_country_modifier = giberd_gnomish_elector_mod
		}
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		909
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
		religious_leagues.1
		religious_leagues.8
	}
}

on_change_hre_religion = {
	events = {
		religious_leagues.2
		religious_leagues.3
	}
}

on_hre_religion_white_peace = {
	events = {
		religious_leagues.4
	}
}

# When a non-native changes government type
on_government_change = {
	clr_country_flag = pirate_mutineer_council
	clr_country_flag = caretaker_revolutionary_government
	if = {
		limit = {
			NOT = { government = monarchy }
			any_owned_province = { has_province_modifier = domain_of_spouses_family }
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			NOT = { government = monarchy }
			any_owned_province = { has_province_modifier = home_of_consort }
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_country_modifier = the_reign_of_terror }
		remove_country_modifier = the_reign_of_terror
	}
	if = {
		limit = {
			has_global_flag = great_peasants_war_flag
			is_part_of_hre = yes
			has_government_attribute = is_peasants_republic #1.35 (replaced everywhere)
		}
		1 = {
			change_variable = { which = GPW_counting_variable value = -3 }
		}
	}

	#Anbennar
	if = {
		limit = {
			THIS = { culture = cave_goblin }
			has_global_flag = cave_goblin_modernity
		}
		country_event = { id = cavegoblinflavor.2 } #cave goblin modernity for cave goblins still tribal when the global event fired
	}
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		610
	}
	FROM = {
		set_variable = {which = treasury_var value = 0}	#bertus mod
		export_to_variable = {which = treasury_var value = treasury}
		while = {
			limit = {check_variable = {which = treasury_var value = 100}}
			change_variable = {which = treasury_var value = -100}
			ROOT = {add_treasury = 100}
		}
		while = {
			limit = {check_variable = {which = treasury_var value = 10}}
			change_variable = {which = treasury_var value = -10}
			ROOT = {add_treasury = 10}
		}
		while = {
			limit = {check_variable = {which = treasury_var value = 1}}
			change_variable = {which = treasury_var value = -1}
			ROOT = {add_treasury = 1}
		}
		if = {
			limit = { at_least_one_race_trigger = { TRIGGER = has_same_race_recruitment type = overlord } }
			set_variable = {which = manpower_var value = 0}	#bertus mod
			export_to_variable = {which = manpower_var value = manpower}
			while = {
				limit = {check_variable = {which = manpower_var value = 10}}
				change_variable = {which = manpower_var value = -10}
				ROOT = {add_manpower = 10}
			}
			while = {
				limit = {check_variable = {which = manpower_var value = 1}}
				change_variable = {which = manpower_var value = -1}
				ROOT = {add_manpower = 1}
			}
			while = {
				limit = {check_variable = {which = manpower_var value = 0.1}}
				change_variable = {which = manpower_var value = -0.1}
				ROOT = {add_manpower = 0.1}
			}
		}
	}
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	events = {
		# celestial_empire_events.1 # Empire dismantled
	}
	FROM = {
		set_variable = {which = treasury_var value = 0}	#bertus mod
		export_to_variable = {which = treasury_var value = treasury}
		while = {
			limit = {check_variable = {which = treasury_var value = 100}}
			change_variable = {which = treasury_var value = -100}
			ROOT = {add_treasury = 100}
		}
		while = {
			limit = {check_variable = {which = treasury_var value = 10}}
			change_variable = {which = treasury_var value = -10}
			ROOT = {add_treasury = 10}
		}
		while = {
			limit = {check_variable = {which = treasury_var value = 1}}
			change_variable = {which = treasury_var value = -1}
			ROOT = {add_treasury = 1}
		}
		if = {
			limit = { at_least_one_race_trigger = { TRIGGER = has_same_race_recruitment type = overlord } }
			set_variable = {which = manpower_var value = 0}	#bertus mod
			export_to_variable = {which = manpower_var value = manpower}
			while = {
				limit = {check_variable = {which = manpower_var value = 10}}
				change_variable = {which = manpower_var value = -10}
				ROOT = {add_manpower = 10}
			}
			while = {
				limit = {check_variable = {which = manpower_var value = 1}}
				change_variable = {which = manpower_var value = -1}
				ROOT = {add_manpower = 1}
			}
			while = {
				limit = {check_variable = {which = manpower_var value = 0.1}}
				change_variable = {which = manpower_var value = -0.1}
				ROOT = {add_manpower = 0.1}
			}
		}
	}
	on_annexed_estate_privileges_effect = yes
	FROM = {
		if = {
			limit = { is_emperor_of_china = yes }
			dismantle_empire_of_china = yes
			set_global_flag = empire_of_china_dismantled
		}
		if = {
			limit = { has_country_modifier = legatus_natus }
			remove_country_modifier = legatus_natus
			set_global_flag = no_legatus_natus
		}
		if = {
			limit = { has_country_modifier = primas_germaniae }
			remove_country_modifier = primas_germaniae
			set_global_flag = no_primas_germaniae
		}
		if = {	#transfer dwarovkron fragments
			limit = { has_dwarovkron_fragment = yes }
			transfer_dwarovkron_fragments = yes
		}
		if = {	#honderaak incident, hill gnolls annexed
			limit = {
				tag = A49
				OR = {
					364 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					6513 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					377 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					375 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
				}
			}
			ROOT = { country_event = { id = flavor_honderaak.1 days = 2 } }
		}
		if = {	#Mulen cancel income transfer
			limit = { tag = F47 }
			ROOT = { country_event = { id = flavour_mulen.24 days = 1 } }
		}

	}
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	clear_global_event_target = EmperorOfChina
	events = {
	}
}

#AnbennarNewVer - change this to khetaratan yo
# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	save_global_event_target_as = EmperorOfChina
	if = {
		limit = { OR = { NOT = { government = monarchy } government = tribal } }
		change_government_to_monarchy = yes
	}
	add_government_reform = kheteratan_empire	#bertus mod
	change_religion = khetist	#bertus mod
	# add_government_reform = celestial_empire
	set_mandate = 60
	set_meritocracy = 60
	add_country_modifier = { name = new_mandate_holder duration = 9125 }
	north_salahad_region = {
		limit = { NOT = { is_core = ROOT } }
		add_permanent_claim = ROOT
	}
	gol_region = {
		limit = { NOT = { is_core = ROOT } }
		add_permanent_claim = ROOT
	}
	tijarikhet_region = {
		limit = { NOT = { is_core = ROOT } }
		add_permanent_claim = ROOT
	}
	akan_region = {
		limit = { NOT = { is_core = ROOT } }
		add_permanent_claim = ROOT
	}
	if = {
		limit = { has_country_modifier = lost_mandate_of_heaven }
		remove_country_modifier = lost_mandate_of_heaven
	}
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	# remove_government_reform = celestial_empire
	set_government_rank = 2
	add_country_modifier = { name = lost_mandate_of_heaven duration = 7300 }	# 20 years
	add_stability = -2
	north_salahad_region = {
		limit = { is_permanent_claim = ROOT }
		remove_claim = ROOT
	}
	gol_region = {
		limit = { is_permanent_claim = ROOT }
		remove_claim = ROOT
	}
	tijarikhet_region = {
		limit = { is_permanent_claim = ROOT }
		remove_claim = ROOT
	}
	akan_region = {
		limit = { is_permanent_claim = ROOT }
		remove_claim = ROOT
	}
	if = {
		limit = { has_country_modifier = new_mandate_holder }
		remove_country_modifier = new_mandate_holder
	}
}

on_embrace_revolution = {
	if = {
		limit = { any_subject_country = { has_country_modifier = colony_inspired_by_revolution } }
		every_subject_country = { remove_country_modifier = colony_inspired_by_revolution }
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government = republic
	}
	if = {
		limit = { revolution_target_exists = no is_great_power = yes }
		set_revolution_target = ROOT
		add_government_reform = revolutionary_republic_reform
		if = {
			limit = { any_country = { has_country_flag = last_revolutionary_country } }
			every_country = {
				limit = { has_country_flag = last_revolutionary_country }
				clr_country_flag = last_revolutionary_country
			}
		}
	}
	else = {
		add_government_reform = junior_revolutionary_republic_reform
	}
	if = {
		limit = { has_reform = parliamentary_reform }
		remove_government_reform = parliamentary_reform
	}
	kill_ruler = yes
	set_country_flag = revolutionary_republic_flag
	set_country_flag = had_revolution
}

# THIS = Revolutionary country being beaten, FROM = Country enforcing the peace treaty
on_dismantle_revolution = {
	events = {
		center_of_revolution.1500
	}
	if = {
		limit = { any_country = { has_country_flag = last_revolutionary_country } }
		every_country = {
			limit = { has_country_flag = last_revolutionary_country }
			clr_country_flag = last_revolutionary_country
		}
	}
	set_country_flag = last_revolutionary_country
}

# province
on_adm_development = {
	on_adm_development_effect = yes
	on_adm_development_extra_dev_effect = yes
	anb_on_development_effect = {development = tax}
	on_development_modifiers_effect = yes  	#bertus mod
	
	jaddari_deioderan_dev_counter_update = yes

	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1041_flag} }	#base tax based modifiers
		set_province_flag = bertus_pops_1041_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1041_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
	#Anbennar
	events = {
		flavour_mulen.1
		flavour_mulen.2
	}
	if = {
		limit = { owner = { has_estate_privilege = estate_wolf_command_war_room_rights } }
		owner = { add_legitimacy = 1 }
	}
}

# province
on_dip_development = {
	on_dip_development_effect = yes
	on_dip_development_extra_dev_effect = yes
	anb_on_development_effect = {development = production}
	on_development_modifiers_effect = yes  	#bertus mod

	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1042_flag} }	#racial base production modifiers
		set_province_flag = bertus_pops_1042_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1049_flag} }	#base production modifiers
		set_province_flag = bertus_pops_1049_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1042_flag
				has_province_flag = bertus_pops_1049_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
	#Anbennar
	events = {
		flavour_mulen.1
		flavour_mulen.2
	}
	jaddari_deioderan_dev_counter_update = yes
}

# province
on_mil_development = {
	on_mil_development_effect = yes
	on_mil_development_extra_dev_effect = yes
	anb_on_development_effect = {development = manpower}
	on_development_modifiers_effect = yes  	#bertus mod

	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1043_flag} }	#base manpower based modifiers
		set_province_flag = bertus_pops_1043_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1043_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
	#Anbennar
	events = {
		flavour_mulen.1
		flavour_mulen.2
	}
	if = {
		limit = { owner = { has_estate_privilege = estate_boar_command_war_room_rights } }
		owner = { add_legitimacy = 1 }
	}
}

on_overextension_pulse = {
	random_events = {	#for future me, the numbers is weights which determine how likely they'll fire from the list
		100 = overextension.1
		100 = overextension.2
		100 = overextension.3
		100 = overextension.4
		100 = overextension.5
		100 = overextension.6
		100 = overextension.7
		100 = overextension.8
		100 = overextension.9
		100 = overextension.10
	}
}

on_colonial_pulse = {
	random_events = {
		100 = colonial.1
		100 = colonial.2
		100 = colonial.3
		100 = colonial.4
		100 = colonial.5
		100 = colonial.8
		100 = colonial.9
		100 = colonial.10
		100 = colonial.11
		100 = colonial.12
		100 = colonial.13
		100 = colonial.14
		100 = colonial.15
		100 = colonial.16
		100 = colonial.17
		100 = colonial.18
		#25 = dodo.1

		#Anbennar
		125 = anb_colonial.1
		125 = anb_colonial.2
		125 = anb_colonial.3
		125 = anb_colonial.4	#disabled cos its lame
		125 = anb_colonial.5
		125 = anb_colonial.6
		125 = anb_colonial.7
		100 = anb_colonial.8
		100 = anb_colonial.9
		100 = anb_colonial.10
		125 = anb_colonial.11

		1000 = flavor_grombar.27

		15000 = 0
	}
}

on_siberian_pulse = {
	random_events = {
		#Anbennar
		100 = anb_colonial_monstrous_frontier.1
		125 = anb_colonial_monstrous_frontier.2
		25 = anb_colonial_monstrous_frontier.3
		100 = anb_colonial_monstrous_frontier.4
		100 = anb_colonial_monstrous_frontier.5
		25 = anb_colonial_monstrous_frontier.6
		50 = anb_colonial_monstrous_frontier.7
		100 = anb_colonial_monstrous_frontier.8
		100 = anb_colonial_monstrous_frontier.9

		10000 = 0
	}
}

# country random events
on_monthly_pulse = {
	if = {	#bertus mod
		limit = { ai = no }
		get_monthly_mana = yes
	}
	if = {	#bertus mod
		limit = { ai = no }
		get_monthly_manpower = yes
	}
	if = {	#bertus mod
		limit = {has_government_mechanic = enslavement_mechanic}
		if = {	#bertus mod
			limit = { has_country_flag = buying_slaves }
			buy_slaves_effect = yes
		}
		if = {	#bertus mod
			limit = { has_country_flag = selling_slaves }
			sell_slaves_effect = yes
		}
	}
	if = {	#bertus mod
		limit = {
			any_owned_province = {
				has_province_modifier = making_soup_modifier
			}
		}
		if = {	#bertus mod
			limit = {
				any_owned_province = {
					has_province_modifier = making_soup_modifier
					OR = {
						controlled_by = owner
						NOT = {
							if = { limit = { development = 100 } num_of_units_in_province = { who = controller amount = 50 } }
							else_if = { limit = { development = 90 } num_of_units_in_province = { who = controller amount = 45 } }
							else_if = { limit = { development = 80 } num_of_units_in_province = { who = controller amount = 40 } }
							else_if = { limit = { development = 70 } num_of_units_in_province = { who = controller amount = 35 } }
							else_if = { limit = { development = 60 } num_of_units_in_province = { who = controller amount = 30 } }
							else_if = { limit = { development = 50 } num_of_units_in_province = { who = controller amount = 25 } }
							else_if = { limit = { development = 40 } num_of_units_in_province = { who = controller amount = 20 } }
							else_if = { limit = { development = 30 } num_of_units_in_province = { who = controller amount = 15 } }
							else_if = { limit = { development = 20 } num_of_units_in_province = { who = controller amount = 10 } }
							else_if = { limit = { development = 18 } num_of_units_in_province = { who = controller amount = 9 } }
							else_if = { limit = { development = 16 } num_of_units_in_province = { who = controller amount = 8 } }
							else_if = { limit = { development = 14 } num_of_units_in_province = { who = controller amount = 7 } }
							else_if = { limit = { development = 12 } num_of_units_in_province = { who = controller amount = 6 } }
							else_if = { limit = { development = 10 } num_of_units_in_province = { who = controller amount = 5 } }
							else = { num_of_units_in_province = { who = controller amount = 4 } }
						}
					}
				}
			}
			every_owned_province = {
				limit = {
					has_province_modifier = making_soup_modifier
					OR = {
						controlled_by = owner
						NOT = {
							if = { limit = { development = 100 } num_of_units_in_province = { who = controller amount = 50 } }
							else_if = { limit = { development = 90 } num_of_units_in_province = { who = controller amount = 45 } }
							else_if = { limit = { development = 80 } num_of_units_in_province = { who = controller amount = 40 } }
							else_if = { limit = { development = 70 } num_of_units_in_province = { who = controller amount = 35 } }
							else_if = { limit = { development = 60 } num_of_units_in_province = { who = controller amount = 30 } }
							else_if = { limit = { development = 50 } num_of_units_in_province = { who = controller amount = 25 } }
							else_if = { limit = { development = 40 } num_of_units_in_province = { who = controller amount = 20 } }
							else_if = { limit = { development = 30 } num_of_units_in_province = { who = controller amount = 15 } }
							else_if = { limit = { development = 20 } num_of_units_in_province = { who = controller amount = 10 } }
							else_if = { limit = { development = 18 } num_of_units_in_province = { who = controller amount = 9 } }
							else_if = { limit = { development = 16 } num_of_units_in_province = { who = controller amount = 8 } }
							else_if = { limit = { development = 14 } num_of_units_in_province = { who = controller amount = 7 } }
							else_if = { limit = { development = 12 } num_of_units_in_province = { who = controller amount = 6 } }
							else_if = { limit = { development = 10 } num_of_units_in_province = { who = controller amount = 5 } }
							else = { num_of_units_in_province = { who = controller amount = 4 } }
						}
					}
				}
				remove_province_modifier = making_soup_modifier
			}
		}
	}
}
on_yearly_pulse = {
	events = {
		bertus_changes.1042
		bertus_changes.1038
	}
	#random_events = {
	#}
	if = {	#bertus mod
		limit = {
			has_global_flag = federal_shared_authority_hre_flag
			is_part_of_hre = yes
		}
		country_event = { id = bertus_changes.6005 }
	}
	if = {
		limit = {
			has_government_mechanic = enslavement_mechanic
			is_subject = no
		}
		every_owned_province = {
			limit = { trade_goods = slaves }
			export_to_variable = { which = base_slave_production_var value = base_production }
			while = {
				limit = { check_variable = { which = base_slave_production_var value = 1 } }
				change_variable = { which = base_slave_production_var value = -1 }
				owner = {
					if = {
						limit = { is_subject = yes }
						overlord = { add_government_power = { mechanic_type = enslavement_mechanic power_type = slaves_amount value = 0.10 } }
					}
					else = {
						add_government_power = { mechanic_type = enslavement_mechanic power_type = slaves_amount value = 0.10 }
					}
				}
			}
			if = {
				limit = { has_building = tradecompany }
				owner = {
					if = {
						limit = { is_subject = yes }
						overlord = { add_government_power = { mechanic_type = enslavement_mechanic power_type = slaves_amount value = 1 } }
					}
					else = {
						add_government_power = { mechanic_type = enslavement_mechanic power_type = slaves_amount value = 1 }
					}
				}
			}
		}
	}
	if = { limit = { tag = I03 } country_event = { id = flavor_vazhatun.100 } }
}
on_yearly_pulse_2 = {
}
on_yearly_pulse_3 = {
}
on_yearly_pulse_4 = {
}
on_yearly_pulse_5 = {

	random_events = {
		1000 = 0
		# Colonial Nations
		100 = colonial_nation.1
		100 = colonial_nation.4
		100 = colonial_nation.10
		100 = colonial_nation.12
		100 = colonial_nation.14
		100 = colonial_nation.77
		100 = colonial_nation.100
		100 = colonial_nation.102
		100 = colonial_nation.104
		100 = colonial_nation.106
		100 = colonial_nation.108
		100 = colonial_nation.110
		100 = colonial_nation.112
		100 = colonial_nation.114
		100 = colonial_nation.116
		100 = colonial_nation.118
		100 = colonial_nation.120
		100 = colonial_nation.122
		100 = colonial_nation.124
		100 = colonial_nation.126
		100 = colonial_nation.128
		100 = colonial_nation.130
		100 = colonial_nation.132
		100 = colonial_nation.134
		100 = colonial_nation.182
		100 = colonial_nation.183
		100 = colonial_nation.184
		100 = colonial_nation.185
		100 = colonial_nation.186
		100 = colonial_nation.187
		100 = colonial_nation.188
		100 = colonial_nation.189
		10 = colonial_nation.140
		10 = colonial_nation.142
		10 = colonial_nation.144
		10 = colonial_nation.146
		10 = colonial_nation.148
		10 = colonial_nation.150
		10 = colonial_nation.152
		10 = colonial_nation.154
		10 = colonial_nation.156
		10 = colonial_nation.158
		10 = colonial_nation.160
		10 = colonial_nation.162
		10 = colonial_nation.164
		10 = colonial_nation.166
		10 = colonial_nation.168
		10 = colonial_nation.170
		10 = colonial_nation.172
		10 = colonial_nation.174
		10 = colonial_nation.176

		# Dutch Republic
		100 = dutch_republic.1
		100 = dutch_republic.2
		100 = dutch_republic.3
		100 = dutch_republic.4
		100 = dutch_republic.5
		100 = dutch_republic.6
		100 = dutch_republic.7
		100 = dutch_republic.8
		100 = dutch_republic.9
		100 = dutch_republic.10
		150 = dutch_republic.11
		100 = dutch_republic.13
		100 = dutch_republic.14
		100 = dutch_republic.15
		100 = dutch_republic.16
		100 = dutch_republic.17
		100 = dutch_republic.18
		100 = dutch_republic.19
		100 = dutch_republic.20
		100 = dutch_republic.21
		100 = dutch_republic.22
		100 = dutch_republic.23
		100 = dutch_republic.24
		100 = dutch_republic.25
		100 = dutch_republic.27

		# Revolutionary Republic Factions

		100 = revolutionary_republic_factions.0
		100 = revolutionary_republic_factions.1
		100 = revolutionary_republic_factions.2
		100 = revolutionary_republic_factions.3
		100 = revolutionary_republic_factions.4
		100 = revolutionary_republic_factions.5
		100 = revolutionary_republic_factions.6
		100 = revolutionary_republic_factions.7
		100 = revolutionary_republic_factions.8
		100 = revolutionary_republic_factions.9

		# Revolutionary Empires
		100 = napoleon.1
		100 = napoleon.2

		# Republican Dictatorship
		100 = republican_dictatorship.1
		100 = republican_dictatorship.2
		100 = republican_dictatorship.3
		100 = republican_dictatorship.4
		100 = republican_dictatorship.5
		100 = republican_dictatorship.6
		100 = republican_dictatorship.7
		100 = republican_dictatorship.8

		# Elective Monarchy
		150 = elective_monarchy.1
		150 = elective_monarchy.2
		25 = elective_monarchy.3
		25 = elective_monarchy.4
		150 = elective_monarchy.6
		150 = elective_monarchy.8
		150 = elective_monarchy.9
		150 = elective_monarchy.10
		150 = elective_monarchy.11
		150 = elective_monarchy.12
		150 = elective_monarchy.14
		150 = elective_monarchy.17
		25 = elective_monarchy.18

		# Free Cities
		25 = free_cities.3
		25 = free_cities.8
		25 = free_cities.10
		25 = free_cities.13
		25 = free_cities.17
		25 = free_cities.19

		#Tribal Federations
		50 = tribal_federation_events.1
		50 = tribal_federation_events.2
		50 = tribal_federation_events.3
		50 = tribal_federation_events.4
		#50 = tribal_federation_events.5
		50 = tribal_federation_events.6
		50 = tribal_federation_events.7
		50 = tribal_federation_events.8
		50 = tribal_federation_events.10
	}
}

# country random events
on_bi_yearly_pulse = {
	events = {
		bertus_changes.6000
		center_of_revolution.2950
		center_of_revolution.3000
		# allclan.704
		bulwar_flavour.0
		xhazobkult_events.2000
		harpy_events.100 #Harpy harem heir selection
		#bertus mod#	harem_events.1 #dakinshi harem events
		bulwar_flavour.11
		blorc.101 #blorc plunder management
		diggy.406 #dwarovar-marrhold tunnel maintenance
	}
	if = { limit = { ruler_can_revive = yes } save_ruler_stats = yes }
	if = { limit = { religion = xhazobkult } country_event = { id = xhazobkult_events.2000 days = 365 } }
	if = { limit = { tag = H77 has_country_flag = lodhum_tourism_enabled } country_event = { id = flavor_lodhum.100 } }
	if = { limit = { tag = H78 mission_completed = seghdihr_rely_ourselves } seghdihr_update_flow_modifiers = yes }
	if = {
		limit = {
			tag = H85
			has_heir = yes
			has_regency = no
			has_reform = truedagger_intrigue_court
			NOT = { has_country_flag = flag_truedagger_heir_done }
		}
		country_event = {
			id = flavor_truedagger.12
		}
	}
	random_events = {
		#Culture and Religion Events
		#125 = culture_religion_events.1 #disabled
		125 = culture_religion_events.3
		125 = culture_religion_events.4
		125 = culture_religion_events.5
		125 = culture_religion_events.6
		125 = culture_religion_events.7
		125 = culture_religion_events.8
		125 = culture_religion_events.9
		125 = culture_religion_events.10
		125 = culture_religion_events.11
		125 = culture_religion_events.12
		125 = culture_religion_events.13
		125 = culture_religion_events.14
		125 = culture_religion_events.15
		125 = culture_religion_events.16
		100 = culture_religion_events.17
		125 = culture_religion_events.18
		125 = culture_religion_events.19
		125 = culture_religion_events.20
		175 = culture_religion_events.21
		125 = culture_religion_events.22
		125 = culture_religion_events.23

		# Old Centralisation/Decentralisation
		100 = 806

		# Mercantilism
		100 = 6326
		100 = 6327
		100 = 6328
		100 = 6329

		# Trade Specific
		100 = trade.1
		100 = trade.2
		100 = trade.3
		100 = trade.4
		100 = trade.5
		100 = trade.6
		100 = trade.7
		100 = trade.8
		100 = trade.9
		100 = trade.10
		100 = trade.11
		100 = trade.12

		# Tradegoods events
		100 = 6418
		100 = 6419
		100 = 6420
		100 = 6421
		100 = 6422
		100 = 6423
		100 = 6424
		100 = 6425
		100 = 6426
		100 = 6427
		100 = 6428
		100 = 6429
		100 = 6431
		100 = 6432
		100 = 6433
		100 = 6434

		# Refoms, when having parliaments.
		100 = reforms.1
		100 = reforms.2
		100 = reforms.3
		100 = reforms.4

		100 = randomeventsstapehordes.1
		100 = randomeventsstapehordes.2
		100 = randomeventsstapehordes.3
		100 = randomeventsstapehordes.4
		100 = randomeventsstapehordes.5
		100 = randomeventsstapehordes.6
		100 = randomeventsstapehordes.7
		100 = randomeventsstapehordes.8
		100 = randomeventsstapehordes.13
		100 = randomeventsstapehordes.14
		100 = randomeventsstapehordes.17
		100 = randomeventsstapehordes.19
		100 = randomeventsstapehordes.20
		100 = randomeventsstapehordes.21
		100 = randomeventsstapehordes.22
		100 = randomeventsstapehordes.23
		100 = randomeventsstapehordes.24

		# Sailor events
		100 = sailor_event.1
		100 = sailor_event.2
		100 = sailor_event.3
		100 = sailor_event.4
		100 = sailor_event.5

		# Corruption Events
		100 = corruption_event.16
		100 = corruption_event.17
		100 = corruption_event.18
		100 = corruption_event.19
		100 = corruption_event.20


		# Institution Events
		#Feudalism Spread Events:
		150 = institution_events.8
		150 = institution_events.9
		150 = institution_events.10
		150 = institution_events.11
		#Global Trade Spread Events:
		150 = institution_events.50
		150 = institution_events.51
		150 = institution_events.52
		#Enlightenment Spread Events:
		150 = institution_events.70
		150 = institution_events.71
		150 = institution_events.72


		#Personality Events
		50 = personality_events.10 #Just Dilema
		50 = personality_events.11 #A righteous King
		50 = personality_events.12 #A Righteous Republican Ruler
		50 = personality_events.13
		50 = personality_events.14
		50 = personality_events.15
		50 = personality_events.16
		50 = personality_events.17
		50 = personality_events.18
		50 = personality_events.19
		50 = personality_events.20
		50 = personality_events.21
		50 = personality_events.22
		50 = personality_events.23
		50 = personality_events.24
		50 = personality_events.25
		50 = personality_events.26
		50 = personality_events.27
		50 = personality_events.28
		50 = personality_events.29
		50 = personality_events.30
		50 = personality_events.31
		50 = personality_events.32
		50 = personality_events.33
		50 = personality_events.34
		50 = personality_events.35
		50 = personality_events.36
		50 = personality_events.37
		50 = personality_events.38
		50 = personality_events.39
		50 = personality_events.40
		50 = personality_events.41
		50 = personality_events.42
		50 = personality_events.43
		50 = personality_events.44
		50 = personality_events.45
		50 = personality_events.46
		50 = personality_events.47
		50 = personality_events.48
		50 = personality_events.49
		50 = personality_events.50
		50 = personality_events.51
		50 = personality_events.52
		50 = personality_events.53
		50 = personality_events.54
		50 = personality_events.55
		50 = personality_events.56
		50 = personality_events.57
		50 = personality_events.58

		# Trade League Events
		100 = trade_league.1
		100 = trade_league.2
		100 = trade_league.3
		100 = trade_league.4
		100 = trade_league.7
		100 = trade_league.8
		100 = trade_league.9
		100 = trade_league.10
		100 = trade_league.11
		100 = trade_league.12
		100 = trade_league.13
		100 = trade_league.14

		#Industrial Revolution

		200 = industrialization_events.7
		200 = industrialization_events.8
		200 = industrialization_events.9
		200 = industrialization_events.10
		200 = industrialization_events.11
		200 = industrialization_events.12
		200 = industrialization_events.13
		200 = industrialization_events.14
		200 = industrialization_events.15
		200 = industrialization_events.16
		200 = industrialization_events.17
		200 = industrialization_events.18
		200 = industrialization_events.19
		200 = industrialization_events.20
		200 = industrialization_events.21
		200 = industrialization_events.22

		#Confucian Events
		# 75 = confucian_events.19
		# 75 = confucian_events.20

		# Orthodox Icon Events
		# 75 = orthodox_icon_events.1
		# 75 = orthodox_icon_events.3
		# 75 = orthodox_icon_events.4
		# 75 = orthodox_icon_events.5
		# 75 = orthodox_icon_events.6

		# Grombar

		50 = flavor_grombar.16
		500 = flavor_grombar.23
		500 = flavor_grombar.24
		500 = flavor_grombar.25

		# Jaddari disaster prelim

		500 = jaddari_missions.101
		200 = jaddari_missions.102
		200 = jaddari_missions.103
		500 = jaddari_missions.104
		200 = jaddari_missions.105

		#Vampires

		300 = vampire_ruler.2
		300 = vampire_ruler.3
		300 = vampire_ruler.4
		300 = vampire_ruler.5
		300 = vampire_ruler.6
		300 = vampire_ruler.8

		2000 = 0 #was 1250
	}

	if = {
		limit = { has_estate_privilege = estate_burghers_magnate_council }
		random_list = {
			20 = { country_event = { id = flavor_gawed.6 days = 30 } }
			20 = { country_event = { id = flavor_gawed.7 days = 30 } }
			5 = {
				modifier = { factor = 2 num_of_loans = 2 }
				modifier = { factor = 2 num_of_loans = 5 }
				modifier = { factor = 2 num_of_loans = 10 }
				modifier = { factor = 5 is_bankrupt = yes }
				modifier = { factor = 2 has_country_modifier = magnate_council_support }
				modifier = { factor = 0.25 has_country_modifier = magnate_council_opposition }
				trigger = { num_of_loans = 1 NOT = { has_country_modifier = magnate_offered_bailout } }
				country_event = { id = flavor_gawed.8 days = 30 }
			}
			20 = {
				trigger = {
					has_country_modifier = magnate_council_opposition
					NOT = { has_ruler_flag = refused_magnate_offer }
				}
				country_event = { id = flavor_gawed.9 days = 30 }
			}
			20 = { country_event = { id = flavor_gawed.10 days = 30 } }
			500 = {}
		}
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
		100 = corruption_event.1
		100 = corruption_event.2
		100 = corruption_event.3
		100 = corruption_event.4
		100 = corruption_event.5
		100 = corruption_event.6
		100 = corruption_event.7
		100 = corruption_event.8
		100 = corruption_event.9
		100 = corruption_event.10
		200 = corruption_event.11
		200 = corruption_event.12
		200 = corruption_event.13
		200 = corruption_event.14
		200 = corruption_event.15

		4000 = 0
	}

	random_events = {
		100 = flavour_siadan.121
		100 = flavour_siadan.122
		100 = flavour_siadan.123
		100 = flavour_siadan.124
		100 = flavour_siadan.125

		200 = 0
	}

	events = {
		the_command.999
	}

	#this is here as a fallback in case something slips through the cracks
	country_event = { id = anbennar_setup.19 }
	country_event = { id = bertus_changes.1121 }
	update_artifice_points = yes #needs to be last
}

on_bi_yearly_pulse_3 = {

	#Fire estate agenda if you have that privilege
	# NOTE DOING THIS THROUGH RANDOM EVENT NOW WITH estate_privileges_and_agendas_events.4 INSTEAD!
	#on_bi_yearly_pulse_estate_privileges_effect = yes

	events = {
		#muslim_school_events.20 #Pick School
		high_philosophy_events.0	#Pick School
		flavor_grombar.11
		flavor_grombar.12
		flavor_grombar.13
		flavor_grombar.17
		flavor_grombar.18
		flavor_grombar.22
		flavor_grombar.26
		flavor_grombar.99
		akan_flavour.1
		cavegoblinflavor.1 #cave goblin modernization
		flavor_castanor.38 # Adds coal to a random Deepwoods province if coal is unlocked and you've burned down the Deepwoods

	}
	random_events = {
		100 = new_court_flavour_events.25 #blood is thicker than water

		200 = the_command.11
		50 = the_command.12
		100 = the_command.13
		100 = the_command.40

		10 = the_command.1001
		10 = the_command.1002
		10 = the_command.1003
		10 = the_command.1004
		10 = the_command.1005
		# 20 = the_command.1006
		# 20 = the_command.1007

		1000 = the_command.2020
		1000 = the_command.2021
		1000 = the_command.2022
		1000 = the_command.2023

		#Jadequest events
		200 = verkalozovar_events.27
		200 = verkalozovar_events.28
		200 = verkalozovar_events.29
		200 = verkalozovar_events.30
		200 = verkalozovar_events.31
		200 = verkalozovar_events.32
		200 = verkalozovar_events.33
		200 = verkalozovar_events.34

		200 = 0 #was 200
	}
	
	if = {
		limit = {
			has_reform = bulwari_temple_reform
			or = {
				NOT = { has_country_flag = vacyntassi_faction_event_flag }
				had_country_flag = { flag = vacyntassi_faction_event_flag days = 365 }
			}
		}
		random_list = {
			33 = { country_event = { id = flavor_vacyn.1001 } }
			33 = { country_event = { id = flavor_vacyn.1002 } }
			33 = { country_event = { id = flavor_vacyn.1003 } }
		}
	}
}

on_bi_yearly_pulse_4 = {

	#Gommo global expansion
	if = {
		limit = { owns = 536 } #Aqatbar
		random = { chance = 70 536 = { province_event = { id = gommo_expansion_events.3 days = 1 random = 90 } } }
	}
	if = {
		limit = { owns = 365 } #Port Jaher
		random = { chance = 70 365 = { province_event = { id = gommo_expansion_events.3 days = 1 random = 90 } } }
	}
	if = {
		limit = { owns = 2773 } #Kherka
		random = { chance = 70 2773 = { province_event = { id = gommo_expansion_events.3 days = 1 random = 90 } } }
	}
    if = {	#luciande
        limit = { tag = B34 has_country_flag = B34_slave_economy }
        random = { chance = 30 country_event = { id = orc_slavery.13 } }
    }
	if = {	#Birsartanses
		limit = {
			OR = { tag = F21 was_tag = F21 }
			has_reform = birsartanses_central_administration_2
			has_country_flag = birsartanses_plans_enacted
			NOT = {
				has_country_modifier = F21_admin_plan
				has_country_modifier = F21_diplo_plan
				has_country_modifier = F21_milit_plan
				has_country_modifier = F21_admin_plan_upgrade
				has_country_modifier = F21_diplo_plan_upgrade
				has_country_modifier = F21_milit_plan_upgrade
				has_country_modifier = F21_plan_failure
				has_country_modifier = F21_not_proving_yourself
				has_country_flag = birsartanses_taking_test
			}
		}
		country_event = { id = flavour_birsartanses.7 }
	}

	random_events = { #all these were shifted from on_bi_yearly_pulse_1
		#randomevents
		100 = 730
		100 = 731
		100 = 732
		100 = 733
		100 = 734
		100 = 735
		100 = 736
		100 = 737
		100 = 738
		#100 = 739
		100 = 740
		100 = 741
		100 = 742

		100 = 850
		100 = 851
		100 = 852
		100 = 853
		100 = 854
		100 = 855
		100 = 857
		100 = 858
		100 = 859
		100 = 860
		100 = 861
		100 = 862
		100 = 863
		100 = 864
		#100 = 865
		100 = 866
		100 = 867
		100 = 868
		100 = 869
		100 = 870
		100 = 871
		100 = 872
		100 = 873
		#100 = 874
		#100 = 875
		#100 = 876
		100 = 877
		100 = 878
		100 = 879
		100 = 880
		100 = 881
		#100 = 882
		100 = 883
		100 = 884
		100 = 885
		100 = 836
		100 = 837
		100 = 838

		100 = 9472
		100 = 3097
		# 100 = 5005
		100 = 5026
		# 100 = 5037
		100 = 5063
		100 = 6014


		# Innovativeness
		100 = innovativeness_events.1
		100 = innovativeness_events.2
		50 = innovativeness_events.3
		100 = innovativeness_events.4
		100 = innovativeness_events.5
		100 = innovativeness_events.6
		100 = innovativeness_events.7
		100 = innovativeness_events.8
		100 = innovativeness_events.9
		100 = innovativeness_events.10
		100 = innovativeness_events.11
		100 = innovativeness_events.12
		100 = innovativeness_events.13
		100 = innovativeness_events.14
		100 = innovativeness_events.15

		# Trade Company Investments
		100 = investment_events.1
		100 = investment_events.2
		100 = investment_events.3
		100 = investment_events.4
		100 = investment_events.5
		100 = investment_events.6
		100 = investment_events.7
		100 = investment_events.8
		100 = investment_events.9
		100 = investment_events.10

		# Catholic Order Events
		#100 = order_events.1
		#100 = order_events.2
		#100 = order_events.3
		#100 = order_events.4
		#100 = order_events.5
		#100 = order_events.6
		#100 = order_events.7
		#100 = order_events.8
		#100 = order_events.9

		# Minority Expulsion Events
		100 = expel_minority_events.1
		100 = expel_minority_events.2
		100 = expel_minority_events.3
		100 = expel_minority_events.4
		100 = expel_minority_events.5

		# Papal Tithe Events	#Anbennarized
		100 = curia.1
		#100 = curia.2	#its italian bankers so
		100 = curia.4
		100 = curia.9
		100 = curia.10
		100 = curia.11
		100 = curia.12

		# Defender of the Faith
		100 = dotf.1
		100 = dotf.4
		100 = dotf.6
		100 = dotf.7

		# Mercenaries
		100 = mercs.1
		100 = mercs.2
		100 = mercs.3
		100 = mercs.4
		#100 = mercs.7 1.35
		100 = mercs.8
		100 = mercs.10
		100 = mercs.11

		# Espionage
		#100 = espionage_events.1
		100 = espionage_events.4
		100 = espionage_events.8
		80 = espionage_events.9

		#Reign of Terror
		# 150 = french_revolution.302
		# 100 = french_revolution.303

		# Papacy events
		100 = papacy_events.6

		# Professionalism
		100 = army_professionalism_events.4
		100 = army_professionalism_events.5
		75 = army_professionalism_events.6
		100 = army_professionalism_events.8
		100 = army_professionalism_events.9
		100 = army_professionalism_events.10
		100 = army_professionalism_events.11
		75 = army_professionalism_events.12
		100 = army_professionalism_events.13
		75 = army_professionalism_events.16

		# Agenda from the Estates
		1000 = estate_privileges_and_agendas_events.4

		#Anbennar
		150 = adventuring.1
		150 = adventuring.2
		150 = adventuring.3
		150 = adventuring.4
		150 = adventuring.5
		150 = adventuring.6
		150 = adventuring.8
		150 = adventuring.9
		150 = adventuring.10

		# Adenica random chance to proc horse and hunt events on a per ruler basis after requisite missions completed
		100 = flavor_adenica.10
		100 = flavor_adenica.1

		2000 = 0
	}
}

on_bi_yearly_pulse_5 = {
	random_events = { #all these were shifted from on_bi_yearly_pulse_1

		#Ravelian Society Events
		100 = ravelian.103
		100 = ravelian.104
		100 = ravelian.105
		100 = ravelian.106
		100 = ravelian.107
		100 = ravelian.108
		100 = ravelian.109

		100 = ravelian.200
		100 = ravelian.201
		100 = ravelian.202
		100 = ravelian.203
		100 = ravelian.204
		100 = ravelian.205
		100 = ravelian.206
		100 = ravelian.207

		#Ravelian Reform Events
		100 = ravelian.301
		100 = ravelian.302
		100 = ravelian.304
		100 = ravelian.305
		100 = ravelian.306
		100 = ravelian.307
		100 = ravelian.308
		100 = ravelian.309
		100 = ravelian.310
		100 = ravelian.311
		100 = ravelian.312

		100 = ravelian.400
		100 = ravelian.401
		100 = ravelian.402
		100 = ravelian.403
		100 = ravelian.404

		100 = ravelian.500
		100 = ravelian.501
		100 = ravelian.502
		100 = ravelian.503
		100 = ravelian.504

		100 = ravelian.600
		100 = ravelian.601
		100 = ravelian.602
		100 = ravelian.603
		100 = ravelian.604

		100 = ravelian.700
		100 = ravelian.701
		100 = ravelian.702
		100 = ravelian.703

		100 = corinite.200
		100 = corinite.201
		100 = corinite.202
		100 = corinite.203
		100 = corinite.204
		100 = corinite.205
		100 = corinite.206
		100 = corinite.207
		100 = corinite.208
		100 = corinite.209
		100 = corinite.210
		100 = corinite.211
		# 100 = corinite.212
		# 100 = corinite.213
		# 100 = corinite.214
		# 100 = corinite.215

		100 = xhazobkult_events.10
		100 = xhazobkult_events.11
		100 = xhazobkult_events.12
		100 = xhazobkult_events.13
		100 = xhazobkult_events.14
		200 = xhazobkult_events.15 #xhazobkult ai crutch
		200 = xhazobkult_events.16

		2000 = 0
	}
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
		# Republics
		100 = republics.4
		100 = republics.5
		100 = republics.6
		100 = republics.7
		100 = republics.8
		100 = republics.9
		100 = republics.10
		100 = republics.11
		100 = republics.12
		100 = republics.13
		100 = republics.14
		100 = republics.15
		100 = republics.16
		100 = republics.17
		100 = republics.18
		100 = republics.19
		100 = republics.20
		100 = republics.21
		100 = republics.22
		100 = republics.23
		100 = republics.24
		100 = republics.25
		100 = republics.26
		100 = republics.27
		100 = republics.28
		100 = republics.29
		100 = republics.30
		100 = republics.31
		100 = republics.32
		100 = republics.33
		100 = republics.34
		100 = republics.35
		100 = republics.36
		100 = republics.37
		100 = republics.38
		100 = republics.39
		100 = republics.40
		100 = republics.41
		100 = republics.42
		100 = republics.43

		# Theocracies
		100 = devotion_events.1
		100 = devotion_events.2
		100 = devotion_events.3
		100 = devotion_events.4
		100 = devotion_events.5
		#100 = devotion_events.6
		100 = devotion_events.7
		100 = devotion_events.8
		100 = devotion_events.9
		100 = devotion_events.10
		100 = devotion_events.11
		100 = devotion_events.12
		100 = devotion_events.13
		100 = devotion_events.14
		100 = devotion_events.15
		100 = devotion_events.16
		100 = devotion_events.18
		100 = devotion_events.19
		100 = devotion_events.22
		100 = devotion_events.23
		100 = devotion_events.24
		#100 = devotion_events.26
		100 = devotion_events.100
		100 = devotion_events.101
		100 = devotion_events.102
		100 = devotion_events.104
		100 = devotion_events.107
		100 = devotion_events.110
		100 = devotion_events.117
		100 = devotion_events.118
		100 = devotion_events.119
		100 = devotion_events.200
		100 = devotion_events.201
		100 = devotion_events.202
		100 = devotion_events.203
		100 = devotion_events.204
		100 = devotion_events.205
		100 = devotion_events.207
		100 = devotion_events.208
		100 = devotion_events.209
		100 = devotion_events.210
		100 = devotion_events.211
		100 = devotion_events.212
		100 = devotion_events.213
		100 = devotion_events.214
		100 = devotion_events.215
		100 = devotion_events.216
		100 = devotion_events.217
		100 = devotion_events.218
		100 = devotion_events.219

		#Center of Revolution - post-spawn (higher weighting than others as they are only relevant briefly)
		200 = center_of_revolution.1
		150 = center_of_revolution.2
		200 = center_of_revolution.3
		200 = center_of_revolution.8
		250 = center_of_revolution.9
		250 = center_of_revolution.10
		200 = center_of_revolution.12
		#Center of Revolution - pre-spawn
		100 = center_of_revolution.2000
		100 = center_of_revolution.2002
		100 = center_of_revolution.2003
		100 = center_of_revolution.2010
		
		#Anbennar
		#Harpy harem events
		600 = harpy_events.103
		300 = harpy_events.108
		300 = harpy_events.109
		300 = harpy_events.110
		300 = harpy_events.115
		300 = harpy_events.116
		300 = harpy_events.117
		300 = harpy_events.118
		300 = harpy_events.120

		1000 = 0
	}
}

on_thri_yearly_pulse_2 = {

	if = { 	#port jaher to brasan
		limit = { owns = 365 }
		if = {
			limit = { NOT = { has_global_flag = institutions_spread_to_aqatbar } }
			365 = { province_event = { id = institution_events.100 days = 60 random = 60 } }
		}
		else = {
			365 = { province_event = { id = azka_evran.9 days = 60 random = 60 } }
		}
	}
	if = { 
		limit = { owns = 565 }
		if = {
			limit = { NOT = { has_global_flag = institutions_spread_to_aqatbar } }
			565 = { province_event = { id = institution_events.100 days = 60 random = 60 } }
		}
		else = {
			536 = { province_event = { id = azka_evran.9 days = 60 random = 60 } }
		}
	}
	if = {	#sareyand to davharral
		limit = { owns = 625 }
		625 = { province_event = { id = institution_events.102 days = 60 random = 60 } }
	}
	if = {
		limit = { owns = 2913 }
		2913 = { province_event = { id = institution_events.102 days = 60 random = 60 } }
	}

	random_events = {
		#Fey Piety Events
		40 = fey_alignment.1
		40 = fey_alignment.2
		40 = fey_alignment.3
		40 = fey_alignment.4
		40 = fey_alignment.5
		40 = fey_alignment.6
		40 = fey_alignment.7
		40 = fey_alignment.8
		40 = fey_alignment.9
		40 = fey_alignment.12
		40 = fey_alignment.13
		40 = fey_alignment.14
		40 = fey_alignment.15
		40 = fey_alignment.16

		#Anbennar - Goblinic Shamanism events
		4 = goblinic_shamanism_flavor.40
		4 = goblinic_shamanism_flavor.50
		4 = goblinic_shamanism_flavor.51
		4 = goblinic_shamanism_flavor.55
		4 = goblinic_shamanism_flavor.58
		4 = goblinic_shamanism_flavor.59
		4 = goblinic_shamanism_flavor.100
		4 = goblinic_shamanism_flavor.101
		4 = goblinic_shamanism_flavor.102
		4 = goblinic_shamanism_flavor.103
		4 = goblinic_shamanism_flavor.104
		4 = goblinic_shamanism_flavor.105
		4 = goblinic_shamanism_flavor.106
		4 = goblinic_shamanism_flavor.107
		4 = goblinic_shamanism_flavor.108
		4 = goblinic_shamanism_flavor.109
		4 = goblinic_shamanism_flavor.110
		4 = goblinic_shamanism_flavor.111
		4 = goblinic_shamanism_flavor.112
		4 = goblinic_shamanism_flavor.113
		4 = goblinic_shamanism_flavor.114
		4 = goblinic_shamanism_flavor.115
		4 = goblinic_shamanism_flavor.116
		4 = goblinic_shamanism_flavor.117
		4 = goblinic_shamanism_flavor.118
		4 = goblinic_shamanism_flavor.119
		4 = goblinic_shamanism_flavor.120
		4 = goblinic_shamanism_flavor.121
		4 = goblinic_shamanism_flavor.122
		4 = goblinic_shamanism_flavor.123
		4 = goblinic_shamanism_flavor.124
		4 = goblinic_shamanism_flavor.125
		4 = goblinic_shamanism_flavor.126
		4 = goblinic_shamanism_flavor.127
		4 = goblinic_shamanism_flavor.128
		4 = goblinic_shamanism_flavor.129
		4 = goblinic_shamanism_flavor.130
		4 = goblinic_shamanism_flavor.131
		4 = goblinic_shamanism_flavor.132
		4 = goblinic_shamanism_flavor.133
		8 = goblinic_shamanism_flavor.134 # Higher cause it requires war
		4 = goblinic_shamanism_flavor.135
		4 = goblinic_shamanism_flavor.136
		4 = goblinic_shamanism_flavor.137
		4 = goblinic_shamanism_flavor.138
		4 = goblinic_shamanism_flavor.139
		4 = goblinic_shamanism_flavor.140
		4 = goblinic_shamanism_flavor.141
		4 = goblinic_shamanism_flavor.142
		4 = goblinic_shamanism_flavor.143
		4 = goblinic_shamanism_flavor.144
		4 = goblinic_shamanism_flavor.145
		4 = goblinic_shamanism_flavor.146

		40 = eordellon.2

		30 = 0
	}

	events = {
		race_setup_events.4		#Add minorities to province / Culture Conversion -
		race_setup_events.5		#Culture Conversion - turns minorities into majorities cleanup
		race_setup_events.9		#Expel/Purge opinionsrace_setup_events.9		#Expel/Purge opinions
		# migration_force_settle.1
		new_sun_cult.241
		new_sun_cult.255		#Amussu incident trigger event
		bulwar_flavour.10
		dartaxagerdim_events.20
		flavour_mulen.26		#Mulen institution spread
	}

	random_events = {
		75 = 0

		100 = aw_bandits.1
		100 = aw_ghouls.1
		100 = aw_goblins.1
		100 = aw_hags.1
		100 = aw_haunted_house.1
		100 = aw_orcs.1
		100 = aw_satyrs.1
		100 = aw_thieves_guild.1
		100 = aw_trolls.1
		100 = aw_vampires.1
		100 = aw_werewolves.1
		100 = aw_wyvern.1
		100 = aw_zombies.1
		100 = aw_eldritch_cultists.1
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
		# Subject Interactions
		50 = subject_interaction_events.1
		50 = subject_interaction_events.4
		50 = subject_interaction_events.5
		50 = subject_interaction_events.6
		50 = subject_interaction_events.7
		50 = subject_interaction_events.9
		50 = subject_interaction_events.11
		50 = subject_interaction_events.14
		50 = subject_interaction_events.15
		50 = subject_interaction_events.17
		50 = subject_interaction_events.18
		50 = subject_interaction_events.19
		50 = subject_interaction_events.20
		50 = subject_interaction_events.21
		50 = subject_interaction_events.22
		50 = subject_interaction_events.23
		50 = subject_interaction_events.24
		50 = subject_interaction_events.25
		50 = subject_interaction_events.26
		50 = subject_interaction_events.27
		50 = subject_interaction_events.29
		50 = subject_interaction_events.30
		50 = subject_interaction_events.31
		50 = subject_interaction_events.32
		50 = subject_interaction_events.34
		50 = subject_interaction_events.35
		50 = subject_interaction_events.36
		50 = subject_interaction_events.38
		50 = subject_interaction_events.40
		50 = subject_interaction_events.43
		75 = tributary_events.1
		75 = tributary_events.2
		75 = tributary_events.3
		75 = tributary_events.4
		75 = tributary_events.5
		75 = tributary_events.6
		75 = tributary_events.7
		75 = tributary_events.8
		75 = tributary_events.9
		75 = tributary_events.10
		75 = tributary_events.13
		75 = tributary_events.16
		75 = tributary_events.17
		75 = tributary_events.18
		75 = tributary_events.19
		75 = tributary_events.23
		75 = tributary_events.24
		75 = tributary_events.26
		75 = tributary_events.25
		75 = tributary_events.27

		1000 = 0
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
		# Anbennar - Mulen factions

		300 = flavour_mulen.11
		300 = flavour_mulen.12
		100 = flavour_mulen.13
		100 = flavour_mulen.14
		100 = flavour_mulen.15
		100 = flavour_mulen.16
		100 = flavour_mulen.17
		100 = flavour_mulen.18
		100 = flavour_mulen.19
		100 = flavour_mulen.20
		100 = flavour_mulen.21
		100 = flavour_mulen.22
		100 = flavour_mulen.23
	}
}

on_four_year_pulse = {

	if = { 	#Gommo global expansion
		limit = { owns = 536 } #Aqatbar
		536 = { province_event = { id = gommo_expansion_events.20 days = 1 random = 90 } }
    }
	if = {
		limit = { owns = 365 } #Port Jaher
		365 = { province_event = { id = gommo_expansion_events.21 days = 1 random = 90 } }
    }
	if = {
		limit = { owns = 2773 } #Kherka
		2773 = { province_event = { id = gommo_expansion_events.24 days = 1 random = 90 } }
    }

	events = {
	}
	random_events = {
		400 = 0
		# randomevents.txt 1.35: moved here from biyearly
		100 = 3051
		100 = 5008
		100 = 5014
		100 = 5015
		100 = 5017
		100 = 5018
		100 = 5019
		100 = 5020
		100 = 5021
		100 = 5022
		100 = 5023
		100 = 5024
		100 = 5025
		100 = 5027
		100 = 5032
		100 = 5040
		100 = 5045
		#100 = 5050
		100 = 5051
		100 = 5052
		100 = 5053
		10 = 5054
		100 = 5055
		100 = 5056
		100 = 5058
		100 = 5059
		100 = 5060
		#100 = 5061
		100 = 5064
		100 = 5065
		#100 = 5066
		100 = 5068
		100 = 5070
		100 = 5071
		100 = 5072
		100 = 5074
		100 = 5075
		100 = 5076
		100 = 5077
		100 = 5082
		100 = 5083
		100 = 5084
		100 = 5085
		#100 = 5086
		100 = 5088
		100 = 5089
		100 = 5090
		100 = 5091
		100 = 5092
		100 = 5093
		100 = 5094
		100 = 5095
		10 = 5096
		100 = 5097
		100 = 5098
		100 = 5099
		100 = 6000
		100 = 6001
		100 = 6003
		#100 = 6004
		#100 = 6005
		#100 = 6006
		100 = 6012
		100 = 6013
		100 = 6015
		100 = 710
		#100 = 711
		100 = 712
		100 = 713
		100 = 714
		100 = 715
		100 = 716
		100 = 717
		100 = 718
		100 = 719
		100 = 720
		100 = 722
		100 = 723
		#100 = 724
		100 = 725
		100 = 726
		100 = 727
		100 = 728
		100 = 729

		# 100 = random_event.1
		# 100 = random_event.2	#this is America culture shift
		100 = random_event.3
		#100 = random_event.4
		100 = random_event.5
		100 = random_event.6
		100 = random_event.7
		#100 = random_event.8
		150 = random_event.9
		100 = random_event.10
		100 = random_event.11
		100 = random_event.12
		#100 = random_event.13	#refers to mecca so
		100 = random_event.14
		100 = random_event.15
		100 = random_event.16

		100 = random_event.26
	}
	random_events = {
		400 = 0
		# Republic Factions
		100 = republic_factions.2
		100 = republic_factions.5
		100 = republic_factions.7
		100 = republic_factions.9
		100 = republic_factions.10
		100 = republic_factions.12
		100 = republic_factions.13
		100 = republic_factions.14
		100 = republic_factions.15
		100 = republic_factions.16
		100 = republic_factions.17
		100 = republic_factions.18
		100 = republic_factions.19
		100 = republic_factions.20
		100 = republic_factions.22
		100 = republic_factions.23
		100 = republic_factions.24

		# Anbennar - Technocracy Factions
		100 = artificer_factions.2
		100 = artificer_factions.3
		100 = artificer_factions.4
		100 = artificer_factions.5
		100 = artificer_factions.6
		100 = artificer_factions.7
		100 = artificer_factions.8
		100 = artificer_factions.9
		100 = artificer_factions.10
		100 = artificer_factions.11

		# Anbennar - Northern League Mangate Factions
		100 = flavor_gawed.14
		100 = flavor_gawed.15
		100 = flavor_gawed.16
		100 = flavor_gawed.17
		100 = flavor_gawed.18
		100 = flavor_gawed.19
		100 = flavor_gawed.20
		100 = flavor_gawed.21
		100 = flavor_gawed.22
		100 = flavor_gawed.23

		# Pirate Factions
		100 = pirates.10
		100 = pirates.11
		100 = pirates.12
		100 = pirates.13
		100 = pirates.14
		100 = pirates.15
		100 = pirates.16
		100 = pirates.17
		100 = pirates.18
		100 = pirates.19
	}

}

on_four_year_pulse_2 = {
	random_events = {

		#Made these four year as its a bit repetitive - once more events are in will move it back to bi or yearly!
		800 = racial_pop_events_centaur.0
		800 = racial_pop_events_dwarven.0
		800 = racial_pop_events_elven.0
		800 = racial_pop_events_gnollish.0
		800 = racial_pop_events_gnomish.0
		800 = racial_pop_events_goblin.0
		800 = racial_pop_events_half_elven.0
		800 = racial_pop_events_half_orcish.0
		800 = racial_pop_events_halfling.0
		800 = racial_pop_events_harimari.0
		800 = racial_pop_events_harpy.0
		800 = racial_pop_events_hobgoblin.0
		800 = racial_pop_events_human.0
		800 = racial_pop_events_kobold.0
		800 = racial_pop_events_ogre.0
		800 = racial_pop_events_orcish.0
		800 = racial_pop_events_ruinborn.0
		800 = racial_pop_events_troll.0

		400 = 0
	}

	events = {
		race_setup_events.1		#Sets up Racial Tolerance Level (in case a country appears later)
		race_setup_events.2		#Ai only event
	}
}

on_four_year_pulse_3 = {
	events = {
		fragments.2000
		anb_ruler.10		#Long-lived theocracy abdication
		corins_circle.101	#Arosha Oakbreaker Startup
		corins_circle.20	#Arosha Oakbreaker Corinite
		corins_circle.21	#Arosha Oakbreaker Monstrousness Down
		new_sun_cult.160		#tension increase event in Bulwar
	}

	random_events = {
		#dwarovar flavor events, don't put anything else here
		700 = 0

		100 = diggy.552 #cave goblin technocracy mil reform
		100 = diggy.553 #venombrew surplus
		100 = diggy.554 #railway breaks down
		100 = diggy.555 #wandering ettins
		100 = diggy.556 #restored machine
		100 = diggy.557 #halannas breath
		100 = diggy.558 #spider raid
		100 = diggy.559 #native orcs submit
		100 = diggy.560 #natives kill eachother
		100 = diggy.561 #treasure chamber
		90 = diggy.562 #ancient war golem
		100 = diggy.563 #ancestor statue
		100 = diggy.564 #ancient armory
		70 = diggy.565 #expedition monsters
		100 = diggy.566 #cave bats
		100 = diggy.567 #bugbears attack colony
		100 = diggy.568 #train wreck
		100 = diggy.569 #shoddy mine
		100 = diggy.570 #old battlefield
		70 = diggy.571 #ancient text
		100 = diggy.573 #family heirloom
		100 = diggy.574 #treasure map
		100 = diggy.575 #diggy hole
		100 = diggy.576 #lantern oil
		100 = diggy.577 #serpents gift
		100 = diggy.578 #serpents curse

		100 = ancestor_worship.1	#Discover Krummul
		100 = ancestor_worship.2	#Discover Balgar
		100 = ancestor_worship.3	#Discover Murri
		100 = ancestor_worship.100	#New Ancestor
		100 = ancestor_worship.101	#Ancient Knowledge unearthed
		100 = ancestor_worship.102	#Conflicting Records lead to conflict
		100 = ancestor_worship.103	#Krummul Stories Inspire Warriors
		100 = ancestor_worship.104	#Balgar stories inspire architects
		100 = ancestor_worship.105	#Quila Stories inspire farming
		100 = ancestor_worship.106	#Urist Stories inspire spelunkers
		100 = ancestor_worship.107	#Mellegar stories inspire inventors
		100 = ancestor_worship.108	#Hehogrim Stories inspire joy
		100 = ancestor_worship.109	#Gimron Stories inspire justice
		100 = ancestor_worship.110	#Murri Stories inspire adventurers
		100 = ancestor_worship.111	#Dagrin stories inspire missionaries
		100 = ancestor_worship.112	#Outsider stories become popular
		100 = ancestor_worship.113	#Grave of local ancestor
		100 = ancestor_worship.114	#Ancestor Holiday Celebration
		100 = ancestor_worship.115	#Clan leader is making a shrine before even dying
		100 = ancestor_worship.116	#Tales of a noble foreigner
		100 = ancestor_worship.117	#Celebrate the ancestors
		100 = ancestor_worship.118	#Monsters destroy ancestor's grave
	}
}

on_four_year_pulse_4 = {
	random_events = {
		1000 = bulwar_flavour.31
		30 = bulwar_flavour.32
		30 = bulwar_flavour.33	
		20 = bulwar_flavour.37
		100 = bulwar_flavour.40
		200 = bulwar_flavour.41
		1000 = bulwar_flavour.42
		100 = bulwar_flavour.43
		100 = bulwar_flavour.101
		100 = bulwar_flavour.102
		100 = bulwar_flavour.103
		100 = bulwar_flavour.104
		100 = bulwar_flavour.105
		100 = bulwar_flavour.106
		100 = bulwar_flavour.107
		100 = bulwar_flavour.108
		100 = bulwar_flavour.109
		100 = bulwar_flavour.110
		1000 = 0
	}
	
	events = {
		harpy_events.115
	}
}

on_five_year_pulse = {
	random_events = {
		# Aristocracy 		13  (8g 5b)
		100 = ideagroups.100
		100 = ideagroups.101
		100 = ideagroups.102
		100 = ideagroups.103
		100 = ideagroups.104
		100 = ideagroups.105
		100 = ideagroups.106
		100 = ideagroups.107
		100 = ideagroups.108
		100 = ideagroups.109
		100 = ideagroups.110
		100 = ideagroups.111
		100 = ideagroups.112

		# Plutocracy 		19 (12g 7b)
		100 = ideagroups.200
		100 = ideagroups.201
		100 = ideagroups.202
		100 = ideagroups.203
		100 = ideagroups.204
		100 = ideagroups.205
		100 = ideagroups.206
		100 = ideagroups.207
		100 = ideagroups.208
		100 = ideagroups.209
		100 = ideagroups.210
		100 = ideagroups.211
		100 = ideagroups.212
		100 = ideagroups.213
		100 = ideagroups.214
		100 = ideagroups.215
		100 = ideagroups.216
		100 = ideagroups.217
		100 = ideagroups.218

		# Innovativenes		11 (7g 4b)
		100 = ideagroups.300
		100 = ideagroups.301
		100 = ideagroups.302
		100 = ideagroups.303
		100 = ideagroups.304
		100 = ideagroups.305
		100 = ideagroups.306
		100 = ideagroups.307
		100 = ideagroups.308
		100 = ideagroups.309
		100 = ideagroups.310

		# Religious		18 (11g 7b)
		100 = ideagroups.400
		100 = ideagroups.401
		100 = ideagroups.402
		100 = ideagroups.403
		100 = ideagroups.404
		100 = ideagroups.405
		100 = ideagroups.406
		100 = ideagroups.407
		100 = ideagroups.408
		100 = ideagroups.409
		100 = ideagroups.410
		100 = ideagroups.411
		100 = ideagroups.412
		100 = ideagroups.413
		100 = ideagroups.414
		100 = ideagroups.415
		100 = ideagroups.416
		100 = ideagroups.417

		# Spy			9 (6g 3b)
		100 = ideagroups.500
		100 = ideagroups.501
		100 = ideagroups.502
		100 = ideagroups.503
		100 = ideagroups.504
		100 = ideagroups.505
		100 = ideagroups.506
		100 = ideagroups.507
		100 = ideagroups.508

		# Diplomatic		9 (6g 3b)
		100 = ideagroups.600
		100 = ideagroups.601
		100 = ideagroups.602
		100 = ideagroups.603
		100 = ideagroups.604
		100 = ideagroups.605
		100 = ideagroups.606
		100 = ideagroups.607
		100 = ideagroups.608

		# Offensive 		14 (9g 5b)
		100 = ideagroups.700
		100 = ideagroups.701
		100 = ideagroups.702
		100 = ideagroups.703
		100 = ideagroups.704
		100 = ideagroups.705
		100 = ideagroups.706
		100 = ideagroups.707
		100 = ideagroups.708
		100 = ideagroups.709
		100 = ideagroups.710
		100 = ideagroups.711
		100 = ideagroups.712
		100 = ideagroups.713

		# Defensive		11 (5g 6b)
		100 = ideagroups.800
		100 = ideagroups.801
		100 = ideagroups.802
		100 = ideagroups.803
		100 = ideagroups.804
		100 = ideagroups.805
		100 = ideagroups.806
		100 = ideagroups.807
		100 = ideagroups.808
		100 = ideagroups.809
		100 = ideagroups.810
		100 = ideagroups.811
		100 = ideagroups.812
		100 = ideagroups.813
		100 = ideagroups.814
		100 = ideagroups.815

		# Trade			6 (7g 4b)
		100 = ideagroups.900
		100 = ideagroups.901
		100 = ideagroups.902
		100 = ideagroups.903
		100 = ideagroups.904
		100 = ideagroups.905
		100 = ideagroups.906
		100 = ideagroups.907
		100 = ideagroups.908
		100 = ideagroups.909
		100 = ideagroups.910

		# Maritime			22 (14g 8b)
		100 = ideagroups.1000
		100 = ideagroups.1001
		100 = ideagroups.1002
		100 = ideagroups.1003
		100 = ideagroups.1004
		100 = ideagroups.1005
		100 = ideagroups.1006
		100 = ideagroups.1007
		100 = ideagroups.1008
		100 = ideagroups.1009
		100 = ideagroups.1010
		100 = ideagroups.1011
		100 = ideagroups.1012
		100 = ideagroups.1013
		100 = ideagroups.1014
		100 = ideagroups.1015
		100 = ideagroups.1016
		100 = ideagroups.1017
		100 = ideagroups.1018
		100 = ideagroups.1019
		100 = ideagroups.1020
		100 = ideagroups.1021

		# Economic		11 (7g 4b)
		100 = ideagroups.1100
		100 = ideagroups.1101
		100 = ideagroups.1102
		100 = ideagroups.1103
		100 = ideagroups.1104
		100 = ideagroups.1105
		100 = ideagroups.1106
		100 = ideagroups.1107
		100 = ideagroups.1108
		100 = ideagroups.1109
		100 = ideagroups.1110

		# Exploration		11 (7g 4b)
		100 = ideagroups.1200
		100 = ideagroups.1201
		100 = ideagroups.1202
		100 = ideagroups.1203
		100 = ideagroups.1204
		100 = ideagroups.1205
		100 = ideagroups.1206
		100 = ideagroups.1207
		100 = ideagroups.1208
		100 = ideagroups.1209
		100 = ideagroups.1210

		# Quality		11 (7g 4b)
		100 = ideagroups.1300
		100 = ideagroups.1301
		100 = ideagroups.1302
		100 = ideagroups.1303
		100 = ideagroups.1304
		100 = ideagroups.1305
		100 = ideagroups.1306
		100 = ideagroups.1307
		100 = ideagroups.1308
		100 = ideagroups.1309
		100 = ideagroups.1310

		# Quantity		11 (7g 4b)
		100 = ideagroups.1400
		100 = ideagroups.1401
		100 = ideagroups.1402
		100 = ideagroups.1403
		100 = ideagroups.1404
		100 = ideagroups.1405
		100 = ideagroups.1406
		100 = ideagroups.1407
		100 = ideagroups.1408
		100 = ideagroups.1409
		100 = ideagroups.1410

		# Expansion		11 (7g 4b)
		100 = ideagroups.1500
		100 = ideagroups.1501
		100 = ideagroups.1502
		100 = ideagroups.1503
		100 = ideagroups.1504
		100 = ideagroups.1505
		100 = ideagroups.1506
		100 = ideagroups.1507
		100 = ideagroups.1508
		100 = ideagroups.1509
		100 = ideagroups.1510

		# Administrative	8 (5g 3b) #1.35 adjusted
		100 = ideagroups.1600
		100 = ideagroups.1601
		100 = ideagroups.1602
		100 = ideagroups.1605
		100 = ideagroups.1606
		100 = ideagroups.1607
		100 = ideagroups.1608
		100 = ideagroups.1609

		# Influence		11 (7g 4b)
		100 = ideagroups.1800
		100 = ideagroups.1801
		100 = ideagroups.1802
		100 = ideagroups.1803
		100 = ideagroups.1804
		100 = ideagroups.1805
		100 = ideagroups.1806
		100 = ideagroups.1807
		100 = ideagroups.1808
		100 = ideagroups.1809
		100 = ideagroups.1810

		# Humanist		11 (7g 4b)
		100 = ideagroups.1900
		100 = ideagroups.1901
		100 = ideagroups.1902
		100 = ideagroups.1903
		100 = ideagroups.1904
		100 = ideagroups.1905
		100 = ideagroups.1906
		100 = ideagroups.1907
		100 = ideagroups.1908
		100 = ideagroups.1909
		100 = ideagroups.1910

		# Horde Ideas		10 (8g 2b)
		100 = ideagroups.1922
		100 = ideagroups.1923
		100 = ideagroups.1924
		100 = ideagroups.1925
		100 = ideagroups.1926
		100 = ideagroups.1927
		100 = ideagroups.1928
		100 = ideagroups.1929
		100 = ideagroups.1930
		100 = ideagroups.1931

		#Theocracy Ideas		11 (9g 2b)
		100 = ideagroups.1911
		100 = ideagroups.1912
		100 = ideagroups.1913
		100 = ideagroups.1914
		100 = ideagroups.1915
		100 = ideagroups.1916
		100 = ideagroups.1917
		100 = ideagroups.1918
		100 = ideagroups.1919
		100 = ideagroups.1920
		100 = ideagroups.1921

		# Indigenous		10 (6g 4b)
		100 = ideagroups.1932
		100 = ideagroups.1933
		100 = ideagroups.1934
		100 = ideagroups.1935
		100 = ideagroups.1936
		100 = ideagroups.1937
		100 = ideagroups.1938
		100 = ideagroups.1939
		100 = ideagroups.1940
		100 = ideagroups.1941

		1000 = 0
	}

	events = {
		#bertus_racial_military.1001	#update military every 5 years
		#Favored by the Gods Regent Court Events
		favored_RC.1
		favored_RC.4
		favored_RC.7
		favored_RC.10
		favored_RC.13
		favored_RC.16
		favored_RC.19
		favored_RC.22
		favored_RC.25
		favored_RC.28
		favored_RC.31
		favored_RC.34
		favored_RC.37
		#favored_RC.40
		bulwar_flavour.30 #Surani Refugees Settling
		#bertus mod #	anb_miscevents.15	
		flavor_rogieria.20 #Emulant of Rogier
		#bertus mod#	flavor_cestirmark.4 #Random Trollsbayer Advisors
		flavour_zongji.1 #Li�ngzhu examination
		#bertus mod#	flavor_cestirmark.300 #Special Cases events
		blorc.101 #blorc plunder management, yes again
	}

	if = {
		limit = { has_government_mechanic = enslavement_mechanic ai = no }
		decrease_slave_cost = yes
	}
	if = {	#Shadowmoon handler
		limit = {
			has_country_flag = in_shadowmoon_conspiracy
			B37 = { has_country_flag = shadowmoon_begin_covert_actions }
		}
		if = {
			limit = { OR = { AND = { has_opinion = { who = B37 value = 100 } exists = B37 } tag = B37 } }
			random_list = {
				25 = { country_event = { id = flavor_rogieria.24 random = 185 } }	# Hurt Legitimacy
				25 = { country_event = { id = flavor_rogieria.25 random = 185 } }	# Hurt Prestige
				10 = { trigger = { tag = B37 } country_event = { id = flavor_rogieria.26 random = 185 } }	# Hurt Relations
				25 = { }
			}
		}
		else = {
			clr_country_flag = in_shadowmoon_conspiracy
			B37 = { country_event = { id = flavor_rogieria.27 days = 7 } }
		}
	}
	if = {	#Railskulker train stuff
		limit = { tag = H75 has_reform = railskulker_capital_on_train_tracks }
		country_event = { id = flavour_railskulker.18 }
	}

	# Gommo research division
	country_event = { id = gommo_expansion_events.10 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.11 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.12 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.13 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.14 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.15 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.16 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.17 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.18 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.19 days = 1 random = 90 }

	if = {
		limit = { owns = 536 } #Aqatbar
		random = { chance = 35 country_event = { id = gommo_expansion_events.30 days = 1 random = 90 } }
	}
	if = {
		limit = { owns = 365 } #Port Jaher
		random = { chance = 35 country_event = { id = gommo_expansion_events.31 days = 1 random = 90 } }
	}
	if = {
		limit = { owns = 2773 } #Kherka
		random = { chance = 35 country_event = { id = gommo_expansion_events.34 days = 1 random = 90 } }
	}
}

# Estates pulse
on_five_year_pulse_2 = {
	random_events = {
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.6
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		100 = burghers_estate_events.9
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		400 = nobles_estate_events.9 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Clergy
		100 = church_estate_events.1
		#Regional Variations:
		100 = church_estate_events.101
		100 = church_estate_events.102
		100 = church_estate_events.103
		100 = church_estate_events.104
		100 = church_estate_events.105
		100 = church_estate_events.2
		100 = church_estate_events.3
		100 = church_estate_events.4
		400 = church_estate_events.5 #Disloyal
		400 = church_estate_events.6 #Demands
		100 = church_estate_events.7 #Bonus
		100 = church_estate_events.8
		100 = church_estate_events.9
		100 = church_estate_events.10
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands

		#Anbennar
		# Artificers
		100 = artificers_estate_events.1
		100 = artificers_estate_events.2
		100 = artificers_estate_events.3
		100 = artificers_estate_events.4
		100 = artificers_estate_events.5
		400 = artificers_estate_events.6 #Demands
		100 = artificers_estate_events.7
		100 = artificers_estate_events.8
		100 = artificers_estate_events.9
		100 = artificers_estate_events.10
		100 = artificers_estate_events.11
		400 = artificers_estate_events.15 #Disloyal

		# Adventurers
		100 = adventurers_estate_events.1
		100 = adventurers_estate_events.2
		100 = adventurers_estate_events.3
		100 = adventurers_estate_events.4
		100 = adventurers_estate_events.5
		400 = adventurers_estate_events.6
		100 = adventurers_estate_events.7
		100 = adventurers_estate_events.8
		100 = adventurers_estate_events.9
		400 = adventurers_estate_events.10	#Demands
		400 = adventurers_estate_events.11	#Demands
		100 = adventurers_estate_events.12
		100 = adventurers_estate_events.13	#Bonus
		#400 = adventurers_estate_events.15 #Disloyal - this is commented as .15 is not an valid events its one of those revolt events

		# Mages
		100 = mages_estate_events.1
		100 = mages_estate_events.2
		100 = mages_estate_events.3
		100 = mages_estate_events.4
		100 = mages_estate_events.5
		100 = mages_estate_events.6
		100 = mages_estate_events.7
		100 = mages_estate_events.8
		100 = mages_estate_events.9
		100 = mages_estate_events.10
		100 = mages_estate_events.11	#Demands
		400 = mages_estate_events.12	#Demands
		100 = mages_estate_events.13	#Bonus
		100 = mages_estate_events.14
		100 = mages_estate_events.15
		100 = mages_estate_events.16
		100 = mages_estate_events.17
		100 = mages_estate_events.18
		400 = mages_estate_events.19	#Disloyal
		100 = mages_estate_events.20	#Bonus
		#400 = mages_estate_events.21 #Disloyal - same as above
		100 = mages_estate_events.22
		400 = mages_estate_events.24	#Disloyal

		#sebhuliamnoblerivalry
		100 = dartaxagerdim_events.50
		100 = dartaxagerdim_events.51

		# Castonath Patricians
		100 = castonath_patricians_events.101
		100 = castonath_patricians_events.102
		100 = castonath_patricians_events.103
		100 = castonath_patricians_events.104
		100 = castonath_patricians_events.105
		100 = castonath_patricians_events.106
		100 = castonath_patricians_events.107
		100 = castonath_patricians_events.108
		100 = castonath_patricians_events.109
		100 = castonath_patricians_events.110
		100 = castonath_patricians_events.111
		400 = castonath_patricians_events.112 # Revolt
		100 = castonath_patricians_events.113
		100 = castonath_patricians_events.114
		100 = castonath_patricians_events.117
		100 = castonath_patricians_events.118

		1000 = 0
	}

	# country_event = { id = estate_castes_events.100 days = 60 } # Debug Caste event to allow Caste Fluidity changes
}

on_five_year_pulse_3 = {
	REB = {
		if = {
			limit = { has_global_flag = runetimer }
			clr_global_flag = runetimer
		}
		else = {
			set_global_flag = runetimer
		}
	}
	random_events = {
		# 100 = estate_regency_events.2 # Anbennar: randomly add privileges, even country specific ones
		100 = estate_regency_events.3
		100 = estate_regency_events.4
		100 = estate_regency_events.5
		100 = estate_regency_events.6
		100 = estate_regency_events.7
		100 = estate_regency_events.9
		100 = propagate_religion_events.1
		100 = propagate_religion_events.2
		100 = propagate_religion_events.3
		100 = propagate_religion_events.4
		100 = propagate_religion_events.5
		100 = propagate_religion_events.6
		100 = propagate_religion_events.8
		100 = propagate_religion_events.9
		100 = propagate_religion_events.10
		#100 = propagate_religion_events.11 #Province event
		
		1000 = 0
	}
	events = {
		aw_spawner.0	#Spawns Adventurers Wanted! encounters

		corins_circle.100
		diggy_fallen.10			#Runefather's Maw upkeep Increase
		bulwar_flavour.34		#Avamezan horse race
		# race_setup_events.3 #Unmatching Tolerances - Fixes level of tolerance towards other races
    }
}

on_five_year_pulse_4 = {
	#fail-safe if for whatever reason these flags stay after being used in events
	if = {
		limit = { had_country_flag = { flag = advisor_events_adm days = 720 } }
		clr_country_flag = advisor_events_adm
	}
	if = {
		limit = { had_country_flag = { flag = advisor_events_dip days = 720 } }
		clr_country_flag = advisor_events_dip
	}
	if = {
		limit = { had_country_flag = { flag = advisor_events_mil days = 720 } }
		clr_country_flag = advisor_events_mil
	}

	random_events = {
		#Anbennar: we don't have these
		# 200 = 0
		# 100 = kalmar_union_events.7
		# 100 = kalmar_union_events.8
		# 100 = kalmar_union_events.9

		#Gommo expansion
		50 = gommo_expansion_events.1
		20 = gommo_expansion_events.2

		1000 = 0
	}
	country_event = { id = precursor_relics.4 }
	country_event = { id = precursor_relics.5 }
	country_event = { id = precursor_relics.6 }
}

# El Dorado
on_explore_coast = {
	random_events = {
		10 = exploration_events.1
		10 = exploration_events.2
		10 = exploration_events.3
		10 = exploration_events.4
		10 = exploration_events.5
		10 = exploration_events.6
		10 = exploration_events.7
		10 = exploration_events.8
		10 = exploration_events.9
		10 = exploration_events.10
		10 = exploration_events.11
		10 = exploration_events.12
		10 = exploration_events.13
		10 = exploration_events.14
		10 = exploration_events.15
	}
}

on_conquistador_empty = {
	 random_events = {
		20 = fragments.1 #Glowing City
		20 = fragments.2 #Dragon House
		20 = fragments.3 #Elfenbride's Manse
		20 = fragments.4 #God Fragment
		20 = fragments.5 #Vault Ruin
		20 = fragments.6 #Portal Nexus
		20 = fragments.7 #Floating City Crash Site

		#Glowing City
		50 = fragments.101
		50 = fragments.102
		50 = fragments.103
		50 = fragments.104
		50 = fragments.105
		50 = fragments.106

		#The Dragon House
		50 = fragments.201
		50 = fragments.202
		50 = fragments.203
		50 = fragments.204
		50 = fragments.205
		50 = fragments.206

		#The Elfenbride's Manse
		50 = fragments.301
		50 = fragments.302
		50 = fragments.303
		50 = fragments.304
		50 = fragments.305
		50 = fragments.306

		#The God's Fragment Ruin
		50 = fragments.401
		50 = fragments.402
		50 = fragments.403
		50 = fragments.404
		50 = fragments.405
		50 = fragments.406

		#Vault Ruin
		50 = fragments.501
		50 = fragments.502
		50 = fragments.503
		50 = fragments.504
		50 = fragments.505
		50 = fragments.506

		#Portal Nexus
		50 = fragments.601
		50 = fragments.602
		50 = fragments.603
		50 = fragments.604
		50 = fragments.605
		50 = fragments.606

		##Floating City Crash Site
		50 = fragments.701
		50 = fragments.702
		50 = fragments.703
		50 = fragments.704
		50 = fragments.705
		50 = fragments.706


		1800 = 0
	}
}

on_conquistador_native = {	
}

on_buy_religious_reform = {
	events = {
		religious_reforms.1
		religious_reforms.2
		religious_reforms.3
	}
}

on_circumnavigation = {
	events = {
		exploration_events.17
		exploration_events.16 #First Circumnavigation Europe
	}
}

on_become_free_city = {
	events = {
		free_cities.1
	}
	if = {
		limit = { has_global_flag = parliamentary_colleges_hre_flag OR = { has_reform = free_city has_reform = subject_free_city_reform } }
		capital_scope = { add_province_modifier = {name = free_city_trade_value_boost_modifier duration = -1} }
	}
}

on_remove_free_city = {	#bertus mod
	if = {
		limit = { NOT = { hre_reform_passed = imperial_cities is_subject_of = emperor } }
		country_event = { id = free_cities.2}
	}
	if = {
		limit = { capital_scope = { has_province_modifier = free_city_trade_value_boost_modifier } }
		capital_scope = { remove_province_modifier = free_city_trade_value_boost_modifier }
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	add_province_modifier = { name = revoked_estate_modifier duration = 5475 } #15 years
}

on_revoke_estate_land = {
}

on_revoke_estate_land_ai_post = {
	add_local_autonomy = 25
}

on_revoke_estate_land_post = {
	add_local_autonomy = 25
}

on_grant_estate_land = {
	remove_province_modifier = revoked_estate_modifier
}

on_death_has_harem = {
	if = { limit = { has_heir = no }
		if = { 
			limit = { OR = { has_reform = harpy_matriarchy_reform has_reform = siadan_harpy_empire } }
			country_event = { id = harpy_events.101 }
		}
		else_if = {
			limit = { OR = { has_reform = dakinshi_warlord_reform has_reform = namasonamingo_reform } }
			country_event = { id = harem_events.2 }
		}
	}
}

on_select_heir_from_harem = {
}

#Tus Astral Shamanism
on_fetishist_cult_change = {
}

# country
on_gain_great_power_status = {
	if = {
		limit = { NOT = { has_country_flag = became_great_power_flag } }
		set_country_flag = became_great_power_flag
	}
}

# country
on_lose_great_power_status = {
}

# province
on_province_religion_converted = {
	on_province_religion_changed_effect = yes #1.35
	on_province_religion_converted_effect = yes #1.35

	if = {
		limit = {
			owner = { has_country_flag = jaddari_the_western_beacon_flag }
			has_province_modifier = jaddari_the_western_beacon
			religion = the_jadd
		}
		hidden_effect = { remove_province_modifier = jaddari_the_western_beacon }
	}

	if = {
		limit = {
			region = akan_region
			has_terrain = mountain
			religion = mother_akan
			owner = { religion = mother_akan }
		}
		add_permanent_province_modifier = { name = akan_ascetic_cult duration = -1 }
		REB = { change_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	else_if = {
		limit = {
			region = akan_region
			has_terrain = mountain
			has_province_modifier = akan_ascetic_cult
		}
		remove_province_modifier = akan_ascetic_cult
		REB = { subtract_variable = { akan_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akan }
			country_event = { id = mother_akan.3 }
		}
	}
	#fey court piety
	if = {
		limit = { owner = { religion_group = fey_religion NOT = { religion = vechnogejzn } } }
		owner = { add_piety = 0.1 }
	}
}

#1.35
on_province_religion_changed = {
	on_province_religion_changed_effect = yes
}

# province
on_province_culture_converted = {
	on_province_culture_converted_estate_privilges_effect = yes
	on_province_culture_change_effect = yes #1.35
	if = {
		limit = {
			NOT = {
				AND = { culture_is_human = yes has_human_majority_trigger = yes }
				AND = { culture_is_elven = yes has_elven_majority_trigger = yes }
				AND = { culture_is_dwarven = yes has_dwarven_majority_trigger = yes }
				AND = { culture_is_halfling = yes has_halfling_majority_trigger = yes }
				AND = { culture_is_gnomish = yes has_gnomish_majority_trigger = yes }
				AND = { culture_is_harimari = yes has_harimari_majority_trigger = yes }
				AND = { culture_is_gnollish = yes has_gnollish_majority_trigger = yes }
				AND = { culture_is_ruinborn = yes has_ruinborn_majority_trigger = yes }
				AND = { culture_is_orcish = yes has_orcish_majority_trigger = yes }
				AND = { culture_is_goblin = yes has_goblin_majority_trigger = yes }
				AND = { culture_is_ogre = yes has_ogre_majority_trigger = yes }
				AND = { culture_is_centaur = yes has_centaur_majority_trigger = yes }
				AND = { culture_is_troll = yes has_troll_majority_trigger = yes }
				AND = { culture_is_harpy = yes has_harpy_majority_trigger = yes }
				AND = { culture_is_half_orcish = yes has_half_orcish_majority_trigger = yes }
				AND = { culture_is_half_elven = yes has_half_elven_majority_trigger = yes }
				AND = { culture_is_hobgoblin = yes has_hobgoblin_majority_trigger = yes }
				AND = { culture_is_kobold = yes has_kobold_majority_trigger = yes }
				AND = { culture_is_lizardfolk = yes has_lizardfolk_majority_trigger = yes }
			}
		}
		bertus_dev_reduction = {value = 0.5}	#bertus mod 
	}
	remove_province_modifier = noble_castles_boost_modifier

	province_event = { id = race_setup_events.15 days = 3 }
	if = {
		limit = { has_province_modifier = Z26_axzo_vurte NOT = { culture = greenscale_kobold } }
		remove_province_modifier = Z26_axzo_vurte
	}
	xhazobkult_set_appropriate_modifier = yes

	if = {
		limit = { owner = { tag = B32 } culture = castanorian }
		hidden_effect = {
			remove_province_modifier = castanor_culture_convert_100
			remove_province_modifier = castanor_culture_convert_95
			remove_province_modifier = castanor_culture_convert_90
			remove_province_modifier = castanor_culture_convert_85
			remove_province_modifier = castanor_culture_convert_80
			remove_province_modifier = castanor_culture_convert_75
		}
	}
	if = {	#luciande orc hunting
		limit = { province_id = 355 NOT = { culture = green_orc } }
		remove_province_modifier = B34_orc_hunting_grounds
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1038_flag} }	#overall pop removal
		set_province_flag = bertus_pops_1038_flag
	}
	if = {
		limit = { NOT = { has_province_flag = bertus_pops_1037_flag } }	#overall pop updater
		set_province_flag = bertus_pops_1037_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1037_flag
				has_province_flag = bertus_pops_1038_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
}

# province, general conversion through effects 1.35
on_province_culture_changed = {
	remove_province_modifier = noble_castles_boost_modifier
	on_province_culture_converted_estate_privilges_effect = yes
	on_province_culture_change_effect = yes
	province_event = { id = race_setup_events.15 }	#update races
	if = {	#bertus mod
		limit = {owner = {has_idea = assimilation3} }
		add_base_manpower = 2
	}

	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1038_flag} }	#overall pop removal
		set_province_flag = bertus_pops_1038_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1037_flag} }	#overall pop updater
		set_province_flag = bertus_pops_1037_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1037_flag
				has_province_flag = bertus_pops_1038_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
}

# province
# FROM = old owner
on_province_owner_change = {
	if = { limit = { culture = noculture } change_culture = owner }
	if = { limit = { religion = noreligion } change_religion = owner }
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1039_flag} }	#climate & terrain preferences updater
		set_province_flag = bertus_pops_1039_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1041_flag} }	#base tax based modifiers
		set_province_flag = bertus_pops_1041_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1042_flag} }	#racial base production modifiers
		set_province_flag = bertus_pops_1042_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1043_flag} }	#base manpower based modifiers
		set_province_flag = bertus_pops_1043_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1049_flag} }	#base production modifiers
		set_province_flag = bertus_pops_1049_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1039_flag
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1041_flag
				has_province_flag = bertus_pops_1042_flag
				has_province_flag = bertus_pops_1043_flag
				has_province_flag = bertus_pops_1049_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}

	events = {
		# japan.1
		unraveling.10
	}
	on_province_owner_change_government_effect = yes
	on_province_owner_change_estate_privileges_effect = yes
	on_development_modifiers_effect = yes  	#bertus mod
	
	if = {
		limit = { province_id = 601 }
		every_province = {
			limit = { has_province_modifier = bulwar_canals_boost_modifier }
			remove_province_modifier = bulwar_canals_boost_modifier
		}
	}
	if = {
		limit = { province_id = 676 }
		every_province = {
			limit = { has_province_modifier = great_dam_boost_modifier }
			remove_province_modifier = great_dam_boost_modifier
		}
	}
	if = {	#bertus mod
		limit = { province_id = 4124 }
		owner = { country_event = { id = flavor_greedy_grin.5 } }
	}
	if = {	#bertus mod
		limit = {
			owner = { has_government_attribute = magisterium_damesear_claim NOT = { has_country_flag = magisterium_damesear_claim_removed } }
			NOT = { area = west_damesear_area area = east_damesear_area area = ardail_island_area }
			is_part_of_hre = yes
		}
		owner = {
			if = {
				limit = { OR = { has_global_flag = aoa_incident_active_flag_cd_flag war_with = emperor } }
				set_global_flag = incident_magisterium_damesear_isle_rights_violation_delay_flag
			}
			else = {
				set_imperial_incident = incident_magisterium_damesear_isle_rights_violation
				set_global_flag = aoa_incident_active_flag_cd_flag
			}
		}
	}
			
	#Krakazol/Rahen initial friendship, formerly rahen.1
	if = {
		limit = {
			province_id = 4266
			owner = { culture_group = dwarven has_reform = dwarovar_adventurer_reform }
			4462 = { owner = { is_subject = no NOT = { tag = R62 } } } #keppakazol
		}
		4462 = { owner = { country_event = { id = rahen.1 days = 60 } } } #delay so ai attitude switches from unknown
	}

	#Black Orc trophies
	if = { # take trophy for blorc.
		limit = { owner = { primary_culture = black_orc } }
		trigger_switch = {
			on_trigger = province_id
			2863 = { province_event = { id = blorc.1 } }
			2868 = { province_event = { id = blorc.2 } }
			4119 = { province_event = { id = blorc.3 } }
			4208 = { province_event = { id = blorc.4 } }
			4020 = { province_event = { id = blorc.5 } }
			4147 = { province_event = { id = blorc.6 } }
			4236 = { province_event = { id = blorc.7 } }
			2931 = { province_event = { id = blorc.8 } }
			4056 = { province_event = { id = blorc.9 } }
			2963 = { province_event = { id = blorc.10 } }
			4238 = { province_event = { id = blorc.11 } }
			2942 = { province_event = { id = blorc.12 } }
			4093 = { province_event = { id = blorc.13 } }
			4100 = { province_event = { id = blorc.14 } }
			2973 = { province_event = { id = blorc.15 } }
			4039 = { province_event = { id = blorc.16 } }
			4217 = { province_event = { id = blorc.17 } }
			4078 = { province_event = { id = blorc.18 } }
			4124 = { province_event = { id = blorc.19 } }
			2914 = { province_event = { id = blorc.20 } }
			4218 = { province_event = { id = blorc.21 } }
			4247 = { province_event = { id = blorc.22 } }
			4265 = { province_event = { id = blorc.23 } }
			4284 = { province_event = { id = blorc.24 } }
			4266 = { province_event = { id = blorc.25 } }
			4350 = { province_event = { id = blorc.26 } }
			4311 = { province_event = { id = blorc.27 } }
			4323 = { province_event = { id = blorc.28 } }
		}
	}
	if = {
		limit = { FROM = { primary_culture = black_orc } }
		blorc_hold_trophy_remove = yes # remove trophies from Blorcs
	}
	if = {
		limit = { has_blorc_trophy_pile = yes }
		clr_province_flag = blorc_plunder_capital_@FROM
		FROM = {
			if = {
				limit = { NOT = { any_owned_province = { has_province_flag = blorc_plunder_capital_@PREV } } }
				clr_country_flag = blorc_plunder_capital_set
			}
		}
		owner = { country_event = { id = blorc.104 } }
	}
	if = {
		limit = { owner = { NOT = { num_of_colonists = 1 } ai = yes } is_colony = yes }
		multiply_colonysize = 0
	}
	if = {
		limit = {
			OR = {
				owner = { has_country_modifier = monstrous_nation }
				owner = { government = tribal }
				owner = { has_country_modifier = ruinborn_administration }
			}
			OR = {
				has_province_modifier = ravelian_society
				has_province_modifier = ravelian_lodge
			}
		}
		province_event = { id = ravelian.21 }
	}

	xhazobkult_set_appropriate_modifier = yes

	if = {
		limit = { has_province_modifier = ghavaanaj_white_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_white_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_white_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_white_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_red_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_red_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_red_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_red_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_purple_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_purple_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_purple_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_purple_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_black_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_black_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_black_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_black_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_palace_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_palace_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_palace_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_palace_herd_locked duration = -1 }
	}
	if = {
		limit = { has_province_modifier = ghavaanaj_castle_herd_unlocked owner = { NOT = { has_country_flag = ghavaanaj_castle_herd_unlocked_flag } } }
		remove_province_modifier = ghavaanaj_castle_herd_unlocked
		add_permanent_province_modifier = { name = ghavaanaj_castle_herd_locked duration = -1 }
	}
	if = {
		limit = { owner = { tag = I89 NOT = { has_country_flag = centaur_no_zeal } } }
		trigger_switch = {
			on_trigger = superregion

			bulwar_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = burning_spear_revolt } has_faction = burning_spear } }
					add_province_modifier = { name = centaur_burning_spear_territory duration = -1 }
				}
			}
			escann_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = verdant_bliss_revolt } has_faction = verdant_bliss } }
					add_province_modifier = { name = centaur_verdant_bliss_territory duration = -1 }
				}
			}
			deepwoods_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = verdant_bliss_revolt } has_faction = verdant_bliss } }
					add_province_modifier = { name = centaur_verdant_bliss_territory duration = -1 }
				}
			}
			gerudia_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
		}
		trigger_switch = {
			on_trigger = region

			alenic_frontier_region = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
			dragon_coast_region = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
		}
		if = {
			limit = {
				owner = { NOT = { has_country_flag = vine_tearer_revolt } has_faction = vine_tearer }
				continent = africa
				NOT = { superregion = bulwar_superregion }
			}
			add_province_modifier = { name = centaur_vine_tearer_territory duration = -1 }
		}
		if = {
			limit = {
				owner = { NOT = { has_country_flag = rosen_rider_revolt } has_faction = rosen_rider }
				superregion = western_cannor_superregion
				NOT = { region = alenic_frontier_region }
				NOT = { region = dragon_coast_region }
			}
			add_province_modifier = { name = centaur_rosen_rider_territory duration = -1 }
		}
	}

	if = {
		limit = { owner = { is_subject_of_type = acolyte_dominion } }
		owner = {
			change_variable = { aInfluence = 2 }
			every_known_country = {
				limit = { is_subject_of_type = acolyte_dominion }
				ROOT = { remove_claim = PREV }
			}
		}
	}

	province_event = { id = roadwarrior.6 days = 3 } #Roadwarrior looting stuff
	province_event = { id = race_setup_events.15 days = 1 }

	if = {	#reapply dungeon flags
		limit = { has_dwarovar_dungeon = yes }
		dungeon_ownership_reset_effect = yes
	}
	if = {	#dwarovar expeditions
		limit = {
			OR = {
				has_province_modifier = expedition_target
				has_dwarovar_dungeon = yes
			}
		}
		generate_expedition = { base_floor = 1 base_danger = 1 }
		expedition_dead_effect = yes
		FROM = { clr_country_flag = expedition_happening }
		clr_province_flag = sent_expedition_@FROM
		clr_province_flag = generated_party_stats_@FROM
		if = { #re-add country flag to new owner if they already have an expedition elsewhere
			limit = { owner = { any_owned_province = { has_province_flag = sent_expedition_@owner } } }
			owner = { set_country_flag = expedition_happening }
		}
		if = { #re-add country flag to old owner if necessary
			limit = { FROM = { any_owned_province = { has_province_flag = sent_expedition_@owner } } }
			FROM = { set_country_flag = expedition_happening }
		}
		#reapply gems
		respawn_dwarovkron_fragments = yes
	}
	if = {	#hold migration digging/repairing exploits
		limit = { province_group = hold_province is_city = no }
		if = {
			limit = { has_advanced_hold_infrastructure = yes }
			set_province_flag = specialized_hold
		}
		if = {
			limit = {
				FROM = {
					capital_scope = { OR = { has_construction = digging_deeper has_construction = restoring_hold } }
					NOT = { num_of_cities = 2 } #abandoned colony
				}
			}
			FROM = {
				capital_scope = { cancel_construction = yes }
				if = {
					limit = { has_country_flag = is_digging }
					FROM = {
						clr_country_flag = is_digging
						clr_country_flag = dig_prod
						clr_country_flag = dig_manpower
						clr_country_flag = dig_culture
						clr_country_flag = dig_explosive
						remove_country_modifier = dig_prod
						remove_country_modifier = dig_manpower
						remove_country_modifier = dig_explosive
					}
				}
			}
		}
	}
	if = {	#AI EWoC cores
		limit = { superregion = escann_superregion }
		owner = { country_event = { id = escanni_wars.4 } }
	}
	if = {	#broken masquerade vampires t3 tier down
		limit = { has_province_modifier = aw_vampires_3 }
		spawn_rebels = { type = vampires_nobles size = 1 }
		remove_province_modifier = aw_vampires_3
		add_permanent_province_modifier = { name = aw_vampires_2 duration = -1 }
		province_event = { id = disaster_vampire_masquerade.99 days = 7}
	}
}

# country 1.35
on_parliament_debate_reset = {
	on_parliament_debate_reset_effect = yes
}

#province 1.35
on_parliament_seat_given = {
	on_parliament_seat_given_effect = yes
}

#province 1.35
on_parliament_seat_lost = {
	on_parliament_seat_lost_effect = yes
}

# country
on_parliament_debate_failed = {
	on_parliament_debate_failed_effect = yes #1.35
}

# country
on_parliament_debate_succeeded = {
	on_parliament_debate_succeeded_effect = yes #1.35
	increase_issue_passed_counter = yes
}

#AnbennarDependencies - we need our own version of this

# country
on_harmonized_pagan = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.1
	}
}
on_harmonized_christian = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.2
	}
}
on_harmonized_muslim = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.3
	}
}
on_harmonized_jewish_group = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.5
	}
}
on_harmonized_zoroastrian_group = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.6
	}
}
on_harmonized_dharmic = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.4
	}
}
on_harmonized_mahayana = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.9
	}
}
on_harmonized_buddhism = { #Theravada
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.8
	}
}
on_harmonized_shinto = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.7
	}
}
on_harmonized_vajrayana = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.10
	}
}

# province
on_consecrate_patriarch = {
	if = { #1.35
		limit = { owner = { has_country_flag = has_improved_consecration } }
		add_province_modifier = { name = consecrated_ground duration = -1 hidden = yes }
	}
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
	if = {
		limit = { has_faction = hob_lion_command }
		add_faction_influence = { faction = hob_lion_command influence = 1 }
	}
	if = { #1.35
		limit = { has_government_attribute = theocratic_monarchy_mechanic }
		change_statists_vs_orangists = 0.01
	}
}

# country
on_general_recruited = {
	on_general_recruited_effect = yes
}

# country
on_admiral_recruited = {
	if = {
		limit = { has_country_flag = admirals_give_army_professionalism }
		add_army_professionalism = 0.005
	}
	if = {
		limit = {
			OR = {
				has_country_modifier = pol_global_maritime_empire_modifier
				has_country_modifier = pol_global_maritime_empire_2_modifier
				has_government_attribute = admirals_give_navy_tradition
			}
		}
		add_navy_tradition = 1
	}
	if = {
		limit = { has_government_attribute = admirals_give_republican_tradition }
		add_republican_tradition = 1
	}
	if = {
		limit = { has_government_attribute = admirals_give_sailors }
		add_yearly_sailors = 0.5
	}
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
	if = {
		limit = { OR = { has_country_modifier = pol_global_maritime_empire_modifier has_country_modifier = pol_global_maritime_empire_2_modifier } }
		add_navy_tradition = 1
	}
}

# THIS = Province, FROM = Country
on_regiment_recruited = {
	FROM = { #Anbennar
		if = {
			limit = { has_estate_privilege = estate_lion_command_war_room_rights }
			add_legitimacy = 0.2
		}
	}
}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited = {
	on_mercenary_recruited_effect = yes #1.35

	#Anbennar
	if = {
		limit = { FROM = { tag = H78 has_reform = seghdihr_segbandalic_military } }
		FROM = { add_army_professionalism = -0.05 } #so its -10% total
	}
}

# THIS = One province in the state
# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {
	hidden_effect = {
		owner = {save_event_target_as = province_owner}
		remove_province_modifier = pasha_removed_modifier
	}
	area = {
		limit = { owned_by = event_target:province_owner }
		add_or_extend_province_modifier_effect = { MODIFIER = pasha_removed_modifier DURATION = 3650 }
		remove_province_modifier = the_provincial_system
	}
}

# THIS = Province
on_janissaries_raised = {
}

on_cawa_raised = {
	hidden_effect = {
		owner = {
			if = {
				limit = { NOT = {manpower = 1} }
				add_mil_power = -2
			}
			else = {
				add_manpower = -1
			}
			if = {
				limit = { NOT = {treasury = 10} }
				add_adm_power = -2
			}
			else = {
				add_treasury = -10
			}
		}
	}
}

on_carolean_raised = {
}

on_hussars_raised = {
}

on_revolutionary_guard_raised = {
}

on_banner_raised = {
}

on_cossack_raised = {
}

on_marine_raised = {
}

on_rajput_raised = {
}

on_streltsy_raised = {
}

on_tercio_raised = {
}

on_musketeer_raised = {
}

on_samurai_raised = {
}

on_qizilbash_raised = {
}

on_mamluks_raised = {
}

on_geobukseon_raised = {
}

on_man_of_war_raised = {
}

on_galleon_raised = {
}

on_galleass_raised = {
}

on_caravel_raised = {
}

on_voc_indiamen_raised = {
}

on_hre_reform_passed = {
}

on_mandate_reform_passed = {
}

on_reform_enacted = {
	if = {
		limit = {
			tag = I89
			NOT = { has_country_flag = centaur_no_zeal }
		}
		if = {
			limit = { has_country_flag = verdant_bliss_flag }
			add_faction = verdant_bliss
		}
		if = {
			limit = { has_country_flag = burning_spear_flag }
			add_faction = burning_spear
		}
		if = {
			limit = { has_country_flag = tiger_bane_flag }
			add_faction = tiger_bane
		}
		if = {
			limit = { has_country_flag = raging_blizzard_flag }
			add_faction = raging_blizzard
		}
		if = {
			limit = { has_country_flag = vine_tearer_flag }
			add_faction = vine_tearer
		}
		if = {
			limit = { has_country_flag = rosen_rider_flag }
			add_faction = rosen_rider
		}
	}
	if = {
		limit = { has_reform = hobgoblin_stratocracy_reform }
		if = {
			limit = { NOT = { has_estate_privilege = estate_wolf_command_war_room_rights } }
			remove_faction = hob_wolf_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_boar_command_war_room_rights } }
			remove_faction = hob_boar_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_lion_command_war_room_rights } }
			remove_faction = hob_lion_command
		}
		if = {
			limit = { has_estate_privilege = estate_dragon_command_war_room_rights }
			add_faction = hob_dragon_command
		}
		if = {
			limit = { has_estate_privilege = estate_elephant_command_war_room_rights }
			add_faction = hob_elephant_command
		}
		if = {
			limit = { has_estate_privilege = estate_tiger_command_war_room_rights }
			add_faction = hob_tiger_command
		}
	}
	update_artifice_points = yes
}

on_reform_changed = {
	if = {
		limit = {
			tag = I89
			NOT = { has_country_flag = centaur_no_zeal }
		}
		if = {
			limit = { has_country_flag = verdant_bliss_flag }
			add_faction = verdant_bliss
		}
		if = {
			limit = { has_country_flag = burning_spear_flag }
			add_faction = burning_spear
		}
		if = {
			limit = { has_country_flag = tiger_bane_flag }
			add_faction = tiger_bane
		}
		if = {
			limit = { has_country_flag = vine_tearer_flag }
			add_faction = vine_tearer
		}
		if = {
			limit = { has_country_flag = rosen_rider_flag }
			add_faction = rosen_rider
		}
	}
	if = {
		limit = { has_reform = hobgoblin_stratocracy_reform }
		if = {
			limit = { NOT = { has_estate_privilege = estate_wolf_command_war_room_rights } }
			remove_faction = hob_wolf_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_boar_command_war_room_rights } }
			remove_faction = hob_boar_command
		}
		if = {
			limit = { NOT = { has_estate_privilege = estate_lion_command_war_room_rights } }
			remove_faction = hob_lion_command
		}
		if = {
			limit = { has_estate_privilege = estate_dragon_command_war_room_rights }
			add_faction = hob_dragon_command
		}
		if = {
			limit = { has_estate_privilege = estate_elephant_command_war_room_rights }
			add_faction = hob_elephant_command
		}
		if = {
			limit = { has_estate_privilege = estate_tiger_command_war_room_rights }
			add_faction = hob_tiger_command
		}
	}
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {
	if = {
		limit = { owner = { has_country_flag = enable_upgrading_centers_of_trade_dev } }
		add_base_production = 1
	}
}

on_center_of_trade_downgrade = {
	if = {
		limit = { owner = { has_country_flag = enable_upgrading_centers_of_trade_dev } }
		add_base_production = -1
	}
}

on_culture_promoted = {
	on_culture_promoted_estate_privileges_effect = yes
	on_culture_promoted_effect = yes	#bertus mod
	on_culture_update_effect = yes	#bertus mod
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_culture_country_effect = yes #Anbennar

	#Anbennar
	#bertus mod#	country_event = { id = race_setup_events.6 }
	#bertus mod#	country_event = { id = racial_modifiers.7 }	#Save primary culture
	#bertus mod#	country_event = { id = racial_modifiers.8 }	#Change back primary culture if the country has a locked administration
	country_event = { id = monstrous.102 days = 35 } #Remove opinion if no longer monstrous, 35days delay to let the triggered modifier update itself
	update_nsc_level_secondary_effects = yes
}

# ROOT = country
on_culture_demoted = {
	on_culture_demoted_estate_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_culture_country_effect = yes #Anbennar
	on_culture_demoted_effect = yes
	on_culture_update_effect = yes	#bertus mod
}

# ROOT = country
on_primary_culture_changed = {
	on_primary_culture_changed_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_primary_culture_change_effect = yes #Anbennar
	on_primary_culture_changed_effects = yes	#bertus mod
	
	#Anbennar
	country_event = { id = racial_modifiers.5 }	#Racial Admin and Military - on primary culture change
	if = {
		limit = { NOT = { primary_culture = black_orc } }
		remove_country_modifier = black_orc_trophy_khugdihr
		remove_country_modifier = black_orc_trophy_haraz_orldhum
		remove_country_modifier = black_orc_trophy_amldihr
		remove_country_modifier = black_orc_trophy_krakdhumvror
		remove_country_modifier = black_orc_trophy_dur_vazhatun
		remove_country_modifier = black_orc_trophy_orlazam_az_dihr
		remove_country_modifier = black_orc_trophy_mithradhum
		remove_country_modifier = black_orc_trophy_er_natvir
		remove_country_modifier = black_orc_trophy_verkal_kozenad
		remove_country_modifier = black_orc_trophy_hul_jorkad
		remove_country_modifier = black_orc_trophy_orlghelovar
		remove_country_modifier = black_orc_trophy_shazstundihr
		remove_country_modifier = black_orc_trophy_arg_ordstun
		remove_country_modifier = black_orc_trophy_verkal_skomdihr
		remove_country_modifier = black_orc_trophy_ovdal_lodhum
		remove_country_modifier = black_orc_trophy_gor_burad
		remove_country_modifier = black_orc_trophy_gor_vazumbrog
		remove_country_modifier = black_orc_trophy_hehodovar
		remove_country_modifier = black_orc_trophy_seghdihr
		remove_country_modifier = black_orc_trophy_verkal_gulan
		remove_country_modifier = black_orc_trophy_gor_ozumbrog
		remove_country_modifier = black_orc_trophy_ovdal_kanzad
		remove_country_modifier = black_orc_trophy_grozumdihr
		remove_country_modifier = black_orc_trophy_ovdal_az_an
		remove_country_modifier = black_orc_trophy_hul_az_krakazol
		remove_country_modifier = black_orc_trophy_tuwad_dhumankon
		remove_country_modifier = black_orc_trophy_gronstunad
		remove_country_modifier = black_orc_trophy_verkal_dromak
	}
	else = { #transfer all trophies to Blorc
		if = { limit = { owns = 2863 } 2863 = { province_event = { id = blorc.1 } } }
		if = { limit = { owns = 2868 } 2868 = { province_event = { id = blorc.2 } } }
		if = { limit = { owns = 4119 } 4119 = { province_event = { id = blorc.3 } } }
		if = { limit = { owns = 4208 } 4208 = { province_event = { id = blorc.4 } } }
		if = { limit = { owns = 4020 } 4020 = { province_event = { id = blorc.5 } } }
		if = { limit = { owns = 4147 } 4147 = { province_event = { id = blorc.6 } } }
		if = { limit = { owns = 4236 } 4236 = { province_event = { id = blorc.7 } } }
		if = { limit = { owns = 2931 } 2931 = { province_event = { id = blorc.8 } } }
		if = { limit = { owns = 4056 } 4056 = { province_event = { id = blorc.9 } } }
		if = { limit = { owns = 2963 } 2963 = { province_event = { id = blorc.10 } } }
		if = { limit = { owns = 4238 } 4238 = { province_event = { id = blorc.11 } } }
		if = { limit = { owns = 2942 } 2942 = { province_event = { id = blorc.12 } } }
		if = { limit = { owns = 4093 } 4093 = { province_event = { id = blorc.13 } } }
		if = { limit = { owns = 4100 } 4100 = { province_event = { id = blorc.14 } } }
		if = { limit = { owns = 2973 } 2973 = { province_event = { id = blorc.15 } } }
		if = { limit = { owns = 4039 } 4039 = { province_event = { id = blorc.16 } } }
		if = { limit = { owns = 4217 } 4217 = { province_event = { id = blorc.17 } } }
		if = { limit = { owns = 4078 } 4078 = { province_event = { id = blorc.18 } } }
		if = { limit = { owns = 4124 } 4124 = { province_event = { id = blorc.19 } } }
		if = { limit = { owns = 2914 } 2914 = { province_event = { id = blorc.20 } } }
		if = { limit = { owns = 4218 } 4218 = { province_event = { id = blorc.21 } } }
		if = { limit = { owns = 4247 } 4247 = { province_event = { id = blorc.22 } } }
		if = { limit = { owns = 4265 } 4265 = { province_event = { id = blorc.23 } } }
		if = { limit = { owns = 4284 } 4284 = { province_event = { id = blorc.24 } } }
		if = { limit = { owns = 4266 } 4266 = { province_event = { id = blorc.25 } } }
		if = { limit = { owns = 4350 } 4350 = { province_event = { id = blorc.26 } } }
		if = { limit = { owns = 4311 } 4311 = { province_event = { id = blorc.27 } } }
		if = { limit = { owns = 4323 } 4323 = { province_event = { id = blorc.28 } } }
	}
	if = {
		limit = { OR = { has_reform = black_demesne_reform has_reform = black_acolyte_reform } NOT = { primary_culture = black_demesner } }
		change_primary_culture = black_demesner
	}
}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	#Anbennar
	##############################################################################################
	#If you are adding an action here to automatically flip new vassals to a custom subject type,
	#It must be done in an event, or the game can crash
	##############################################################################################

	FROM = { update_nsc_level_secondary_effects = yes }
	if = {	#Command Slave States subject
		limit = {
			ROOT = { tag = R62 } # The Command
			FROM = { has_country_flag = command_slave_state_flag }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = the_command.3000 } }
	}
	if = {
		limit = {
			FROM = { is_subject_of_type = slave_state }
			NOT = { culture_group = hobgoblin } # the revolter commands can inherit slave states too
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = the_command.3001 } }
	}
	FROM = {	# Anbennar CNs gotta follow overlord culture for races. Religion is a bonus.
		if = {
			limit = { is_colonial_nation = yes }
			export_to_variable  = { variable_name = majorityCulture value = dominant_culture }
			export_to_variable  = { variable_name = overlordCulture value = primary_culture who = ROOT } 
			export_to_variable  = { variable_name = overlordReligion value = religion who = ROOT } 
	
			# only change stuff if culture is different
			if = { limit = { NOT = { is_variable_equal = { which = majorityCulture which = overlordCulture } } }
				change_primary_culture = variable:overlordCulture	# use overlord race
				change_religion = variable:overlordReligion			# use overlord religion
				add_accepted_culture = variable:majorityCulture 	# we accept the majority natives.
			}
			capital_scope = {  # capital uses overlord culture and religion.
				change_culture = FROM
				change_religion = FROM
			}
		}
	}
	FROM = {	# Racial Tolerance Setup
		country_event = { id = race_setup_events.1 }		#Sets up Racial Tolerance Level
		country_event = { id = race_setup_events.2 }		#Ai only event for preferred tolerace
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	#Anbennar
	FROM = { update_nsc_level_secondary_effects = yes }
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	on_religion_change_estate_privileges_effect = yes
	if = {
		limit = {
			has_dlc = "Emperor"
			FROM = { is_revolutionary = yes }
		}
		change_government = republic
		add_government_reform = junior_revolutionary_republic_reform
		set_country_flag = had_revolution
	}
	if = { # Anbennar: changed to ravelian rectorate, our papacy
		limit = { tag = Z97 }
		change_government = theocracy
		change_religion = ravelian
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_country_flag = released_in_1444
	}
	#Anbennar
	country_event = { id = monstrous.100 days = 35 }
	country_event = { id = new_sun_cult.11 days = 1 }
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {
}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {	#bertus mod
	FROM = {
		remove_province_modifier = religious_zeal_at_conv
		add_permanent_province_modifier = { name = expelled_minority_home duration = 7300 }
	}
	THIS = {
		change_culture = FROM
		change_religion = FROM
	}
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {	#Anbennar
		limit = { has_country_modifier = pirate_republic_shared_loot has_reform = pirate_republic_reform }
		add_republican_tradition = 0.25
	}
	if = {
		limit = { religion = kvangahga }
		add_church_power = 5
	}	
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
	FROM = {
		set_country_flag = captured_flagship_country_flag
		if = {
			limit = { has_country_modifier = hsa_pride_eagle_of_the_fleet_modifier }
			remove_country_modifier = hsa_pride_eagle_of_the_fleet_modifier
		}
		 country_event = { id = flagship_events.1 } 
	}
	ROOT = {
		country_event = { id = flagship_events.2 }
		set_country_flag = trophy_hunter_flag
	}
	#Anbennar
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 5 }
	}
	if = {
		limit = { FROM = { is_subject_of_type = acolyte_dominion } }
		FROM = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
	FROM = { set_country_flag = sunk_flagship_country_flag }
	ROOT = { country_event = { id = flagship_events.4 } }
	FROM = { country_event = { id = flagship_events.3 } }
	FROM = {
		if = {
			limit = { has_country_modifier = hsa_pride_eagle_of_the_fleet_modifier }
			remove_country_modifier = hsa_pride_eagle_of_the_fleet_modifier
		}
	}
	if = {	#Anbennar
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 5 }
	}
	if = {
		limit = { FROM = { is_subject_of_type = acolyte_dominion } }
		FROM = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	if = { # Anbennar: changed to ravelian rectorate, our papacy
		limit = { tag = Z97 }
		change_government = theocracy
		change_religion = ravelian	#changed this from catholic
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			FROM = { has_reform = religious_permanent_revolution_reform }
			NOT = { tag = PAP }
		}
		change_religion = FROM
		adopt_reform_progress = FROM
		add_country_modifier = { name = global_holy_war_released_modifier duration = 3650 hidden = yes }
		capital_scope = { change_religion = FROM }
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_country_flag = released_in_1444
	}
	if = {
		limit = { THIS = { culture = cave_goblin } has_global_flag = cave_goblin_modernity }
		country_event = { id = cavegoblinflavor.2 } #cave goblin modernity for cave goblins not alive when the global event fired
	}
	country_event = { id = anbennar_setup.19 }
	country_event = { id = monstrous.100 days = 35 }
	if = {
		limit = { NOT = { has_dlc = "Emperor" } }
		if = {
			limit = { religion = ravelian }
			if = {
				limit = { has_global_flag = first_council_harsh }
				add_country_modifier = { name = first_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = first_council_conciliatory }
				add_country_modifier = { name = first_council_conciliatory duration = -1 }
			}
			if = {
				limit = { has_global_flag = second_council_harsh }
				add_country_modifier = { name = second_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = second_council_conciliatory }
				add_country_modifier = { name = second_council_conciliatory duration = -1 }
			}
			if = {
				limit = { has_global_flag = third_council_harsh }
				add_country_modifier = { name = third_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = third_council_conciliatory }
				add_country_modifier = { name = third_council_conciliatory duration = -1 }
			}
			if = {
				limit = { has_global_flag = fourth_council_harsh }
				add_country_modifier = { name = fourth_council_harsh duration = -1 }
			}
			else_if = {
				limit = { has_global_flag = fourth_council_conciliatory }
				add_country_modifier = { name = fourth_council_conciliatory duration = -1 }
			}
		}
	}
	country_event = { id = new_sun_cult.11 days = 1 }

}

# ROOT = province, FROM = country
on_trade_good_changed = {
	on_trade_good_changed_estate_privileges_effect = yes
	on_trade_good_changed_government_effect = yes
	on_trade_good_changed_bertus_effect = yes
	
	if = {
		limit = { 
			has_advanced_hold_infrastructure = yes
			NOT = {
				province_id = 2914 #verkal gulan
				province_id = 4236 #mithradhum
			}
		}
		clr_hold_advanced_infrastructure = yes
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1042_flag} }	#racial base production modifiers
		set_province_flag = bertus_pops_1042_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1049_flag} }	#base production modifiers
		set_province_flag = bertus_pops_1049_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1042_flag
				has_province_flag = bertus_pops_1049_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
}

# this = country
on_loan_repaid = {
	on_loan_repaid_estate_privileges_effect = yes
	if = {
		limit = { has_idea = national_bank }
		add_inflation = -0.05
	}
}

# this = country
on_rebels_break_country = {
	add_country_modifier = { name = just_lost_to_rebels duration = 10 hidden = yes }
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		divide_variable = { aInfluence = 2 }
	}
	if = { #Aftermath of the War
		limit = {
			tag = R62 #The Command
			NOT = { num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = { value = 1 region = shamakhad_region } }
		}
		R08 = { country_event = { id = flavor_tiltaghar.14 days = 1 } } #Tiltaghar
	}
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
	if = {
		limit = { has_country_flag = need_to_fire_adm_advisor }
		set_country_flag = just_fired_adm_advisor
		remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
	if = {
		limit = { has_country_flag = need_to_fire_dip_advisor }
		set_country_flag = just_fired_dip_advisor
		remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
	if = {
		limit = { has_country_flag = need_to_fire_mil_advisor }
		set_country_flag = just_fired_mil_advisor
		remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {

}

# this = country
on_post_dip_advisor_fired = {

}

# this = country
on_post_mil_advisor_fired = {

}

# this = new client state, from = parent country
on_create_client_state = {
	#bertus mod#	country_event = { id = racial_modifiers.6 days = 1 }	#Racial mil change if unmatching
	country_event = { id = anbennar_setup.19 }
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
	if = {
		limit = { has_reform = junior_revolutionary_republic_reform }
		add_government_reform = revolutionary_republic_reform
	}
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}

# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	remove_named_unrest = estate_land_seized
	clr_province_flag = has_estate_unrest_flag

	if = {	#bertus mod
		limit = {
			owner = { has_idea = justiz5 }
		}
		add_local_autonomy = -10
		set_variable = { which = temp value = 0 }
		export_to_variable = { which = temp value = development }
		while = {
			limit = { check_variable = { which = temp value = 0 } }
			change_variable = { which = temp value = -1 }
			owner = { change_government_reform_progress = 1 }
		}
	}
	# Re-add their influence to Castonath if gets conquered from nation with the estate
	if = {
		limit = {
			OR = { province_id = 831 province_id = 832 province_id = 833 }
			OR = {
				FROM = { has_estate = estate_castonath_patricians }
				FROM = { has_country_flag = castonath_patricians_curtailing_relationship }
				owner = { has_country_flag = castonath_patricians_curtailing_relationship }
				owner = { has_estate = estate_castonath_patricians }
			}
		}
		if = {
			limit = { owner = { has_estate = estate_castonath_patricians } }
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
		}
		else_if = {
			limit = { owner = { has_country_flag = castonath_patricians_curtailing_relationship } }
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			add_province_modifier = { name = castonath_patricians_curtailing duration = 3650 }
		}
		if = {
			limit = { FROM = { has_country_flag = castonath_patricians_curtailing_relationship } }
			add_permanent_province_modifier = { name = castonath_patrician_influence_some duration = -1 }
		}
		if = {
			limit = {
				FROM = { estate_influence = { estate = estate_castonath_patricians influence = 80 } }
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = { name = castonath_patrician_influence_full duration = -1 }
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
			remove_province_modifier = castonath_patrician_influence_some
		}
		else_if = {
			limit = {
				FROM = { estate_influence = { estate = estate_castonath_patricians influence = 60 } }
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = { name = castonath_patrician_influence_significant duration = -1 }
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
			remove_province_modifier = castonath_patrician_influence_some
		}
		else_if = {
			limit = {
				FROM = { estate_influence = { estate = estate_castonath_patricians influence = 40 } }
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = { name = castonath_patrician_influence_considerable duration = -1 }
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_some
		}
		else = {
			if = {
				limit = { owner = { NOT = { tag = B61 } } }
				add_permanent_province_modifier = { name = castonath_patrician_influence_some duration = -1 }
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
		}
	}
	if = {
		limit = { has_province_flag = expedition_in_progress }
		expedition_dead_effect = yes
		clr_province_flag = generated_party_stats_@FROM
		clr_province_flag = sent_expedition_@FROM
	}

	if = {
		limit = {
			owner = { has_country_flag = siadan_harimari_autonomy }
			has_country_modifier = harimari_administration
		}
		add_province_modifier = { name = siadan_harimari_autonomy duration = -1 }
	}
	if = {	#swamp trolls conquest modifiers
		limit = {
			owner = { culture = swamp_troll }
			has_province_flag = hag_conquest_flag
		}
		add_province_modifier = { name = hag_conquest duration = -1 desc = hag_conquest_tooltip }
	}
}

on_country_creation = {
	if = {
		limit = {
			tag = Z97
			OR = { NOT = { religion = ravelian } NOT = { has_reform = papacy_reform } NOT = { government = theocracy } }
		}
		change_religion = ravelian
		change_government = theocracy
		add_government_reform = papacy_reform
	}
	if = {
		limit = {
			OR = { has_reform = adventurer_reform has_reform = dwarovar_warband has_reform = roaming_horde }
			ai = yes
		}
		if = {
			limit = { capital_scope = { continent = serpentspine } }
			add_country_modifier = { name = dont_colonize_but_migrate duration = 3650 }
		}
		else = {
			add_country_modifier = { name = dont_colonize_but_migrate duration = 365 hidden = yes }
		}
	}
	country_event = { id = anbennar_setup.19 }
	country_event = { id = new_sun_cult.11 days = 1 }
}

# ROOT = country, FROM = country they fled from
on_cossacks_receive_serfs = {
}

on_federation_leader_change = {
	if = {
		limit = { tag = FROM }
		disband_federation = THIS
	}
	else = {
		# New strongest member becomes the new federation leader
		set_federation_leader = THIS
	}
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
	slave_raid_pillage_capital_effect = yes
}

#FROM = country dev was transferred from, ROOT = country doing the transferring
on_transfer_development = {
}

on_colonial_type_change = {
	clr_country_flag = encourage_cash_crops_flag
}

on_estate_led_regency = {
	if = {
		limit = { has_government_attribute = improved_nobles_regency }
		add_ruler_modifier = { name = empowered_regency_modifier duration = -1 }
		change_adm = 1
		change_dip = 1
		change_mil = 1
	}
}

on_estate_led_regency_surpassed = {
	if = {
		limit = {
			num_of_powerful_estates = 1
			has_estate_led_regency = { estate = any }
			NOT = { estate_led_regency_influence = 70 }
			OR = {
				AND = {
					has_estate_led_regency = { estate = estate_burghers }
					NOT = { has_estate_loyalty_modifier = { estate = estate_church modifier = REFUSED_REGENCY } }
					NOT = { has_estate_loyalty_modifier = { estate = estate_nobles modifier = REFUSED_REGENCY } }
				}
				AND = {
					has_estate_led_regency = { estate = estate_church }
					NOT = { has_estate_loyalty_modifier = { estate = estate_burghers modifier = REFUSED_REGENCY } }
					NOT = { has_estate_loyalty_modifier = { estate = estate_nobles modifier = REFUSED_REGENCY } }
				}
				AND = {
					has_estate_led_regency = { estate = estate_nobles }
					NOT = { has_estate_loyalty_modifier = { estate = estate_burghers modifier = REFUSED_REGENCY } }
					NOT = { has_estate_loyalty_modifier = { estate = estate_church modifier = REFUSED_REGENCY } }
				}
			}
		}
		country_event = { id = estate_regency_events.1 }
	}
}

on_extended_regency = {
	random_events = {
		100 = extended_regency_events.4
		100 = extended_regency_events.5
		100 = extended_regency_events.6

		300 = 0
	}
}

on_estate_removed = {
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source, fires when the colony is created 1.35
on_colony_established = {
	if = {	#bertus mod
		limit = { owner = {has_idea = A01_scions_of_elvenkind} }
		add_elven_minority_size_effect = yes
	}
}

#scope = new country, FROM = parent country 1.35
on_colonial_nation_established = {
	FROM = { country_event = { id = bertus_changes.1039 } }
}

on_colonist_boosting_colony = {
	on_colonist_boosting_colony_effect = yes
	hidden_effect = {
		if = {
			limit = { NOT = { native_size = 1 } } # If there are few natives
			remove_racial_majority = yes
		}
		if = {
			limit = {
				owner = { has_country_flag = khug_manifest_destiny_flag }
				NOT = { has_province_modifier = khug_manifest_destiny }
				region = northern_pass_region
			}
			add_province_modifier = { name = khug_manifest_destiny duration = 3650 }
		}
	}
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
	on_force_conversion_effect = yes
}

on_institution_embracement = {
	if = {
		limit = { has_government_attribute = monarch_power_on_institutions }
		add_adm_power = 100
		add_dip_power = 100
		add_mil_power = 100
	}
	if = { #Anbennar
		limit = { has_estate = estate_dragon_command has_institution = manufactories }
		set_estate_privilege = estate_dragon_command_ninyu_kikun_sunyanin_artificers
	}
}

on_national_focus_change = {}

#ROOT = new capital province, FROM = old capital province
on_capital_moved = {
	if = { 
		limit = { has_province_modifier = cant_colonize }	#Anbennar
		province_event = { id = migration_force_settle.3 days = 1 }
	}
	else = {
		#Not Anbennar
		if = { #removes/sets dev cost bonus on capital state for government reforms
			limit = {
				owner = {has_government_attribute = lower_dev_cost_in_capital_state}
				NOT = { has_province_modifier = lower_dev_cost_in_capital_state_modifier }
			}
			FROM = { area = { remove_province_modifier = lower_dev_cost_in_capital_state_modifier } }
			area = { add_province_modifier = { name = lower_dev_cost_in_capital_state_modifier duration = -1 hidden = yes } }
		}
		#Anbennar
		if = { #removes/sets gov cost bonus on capital region for government reforms
			limit = {
				owner = {has_government_attribute = lower_gov_cost_in_home_region}
				NOT = { has_province_modifier = lower_gov_cost_in_home_region_modifier }
			}
			FROM = { region = { remove_province_modifier = lower_gov_cost_in_home_region_modifier } }
			area = { add_province_modifier = { name = lower_gov_cost_in_home_region_modifier duration = -1 hidden = yes } }
		}
	}
}

#ROOT = province that was expanded in, FROM = country that did it
on_expanded_infrastructure = {
	change_variable = { infrastructure_level = 1 }
	if = {
		limit = { owner = { has_idea = konigreich2 } NOT = { has_province_modifier = konigreich2_infrastructure_fl_modifier } }
		add_province_modifier = { name = konigreich2_infrastructure_fl_modifier duration = -1 hidden = yes }
	}
	if = {
		limit = { owner = { has_idea = konigreich5 } has_port = yes NOT = { has_province_modifier = konigreich5_infrastructure_naval_fl_modifier } }
		add_province_modifier = { name = konigreich5_infrastructure_naval_fl_modifier duration = -1 hidden = yes }
	}
}

on_expanded_infrastructure_removed = {
	if = {
		limit = { has_province_modifier = konigreich2_infrastructure_fl_modifier NOT = { num_of_times_expanded_infrastructure = 1 } }
		remove_province_modifier = konigreich2_infrastructure_fl_modifier
	}
	if = {
		limit = { has_province_modifier = konigreich5_infrastructure_naval_fl_modifier NOT = { num_of_times_expanded_infrastructure = 1 } }
		remove_province_modifier = konigreich5_infrastructure_naval_fl_modifier
	}
}
#ROOT = province that was centralized in
on_centralized_state = {
	if = {
		limit = { owner = { has_government_attribute = centralize_state_development } }
		area = { limit = {owned_by = ROOT } add_1_dev_to_provinces = yes }
	}
	if = {
		limit = { owner = { has_idea = zentra6 } }
		area = { limit = {owned_by = ROOT has_province_modifier = centralized_province } add_1_dev_to_provinces = yes }
	}
}
#ROOT = country
monarch_on_shipwreck = {
}

heir_on_shipwreck = {
}

consort_on_shipwreck = {
}

#ROOT = country
on_defender_of_faith_loss = {
	clr_country_flag = claimed_defender_of_faith_flag
	remove_country_modifier = liv_the_livonian_defender
	remove_country_modifier = gov_improved_defender_of_faith_mod
	remove_country_modifier = pol_shield_against_catholicism_modifier
}

on_defender_of_faith_claim = {
	set_country_flag = claimed_defender_of_faith_flag
	if = {
		limit = {
			religion = catholic
			has_country_flag = liv_the_livonian_defender_flag
			NOT = { has_country_modifier = liv_the_livonian_defender }
		}
		add_country_modifier = { name = liv_the_livonian_defender duration = -1 desc = liv_the_livonian_defender_tt } }
	if = {
		limit = { has_government_attribute = improved_defender_of_faith }
		add_country_modifier = { name = gov_improved_defender_of_faith_mod duration = -1 }
	}
}

on_hre_dismantled = {
	every_province = {
		limit = {has_province_modifier = empire_centralization_modifier}
		remove_province_modifier = empire_centralization_modifier
	}
}

on_new_age = {
	remove_all_age_timed_modifiers = yes
	remove_country_modifier = flottenbasis_manpower_3
	remove_country_modifier = flottenbasis_manpower_2
	remove_country_modifier = flottenbasis_manpower_1
	remove_country_modifier = flottenbasis_sailors_3
	remove_country_modifier = flottenbasis_sailors_2
	remove_country_modifier = flottenbasis_sailors_1
	remove_country_modifier = zentra_manpower_1
	remove_country_modifier = zentra_manpower_2
	remove_country_modifier = zentra_manpower_3
	remove_country_modifier = imperialismus_autoritaet_1
	remove_country_modifier = imperialismus_autoritaet_2
	remove_country_modifier = imperialismus_autoritaet_3
	remove_country_modifier = konigreich_force_land_1
	remove_country_modifier = konigreich_force_land_2
	remove_country_modifier = konigreich_force_land_3
	remove_country_modifier = konigreich_force_fleet_1
	remove_country_modifier = konigreich_force_fleet_2
	remove_country_modifier = konigreich_force_fleet_3
	if = {
		limit = { has_idea = flottenbasis4 }
		trigger_switch = {
			on_trigger = current_age
			age_of_revolutions = {add_country_modifier = {name = flottenbasis_sailors_3 duration = -1 hidden = yes}}
			age_of_absolutism = {add_country_modifier = {name = flottenbasis_sailors_2 duration = -1 hidden = yes}}
			age_of_reformation = {add_country_modifier = {name = flottenbasis_sailors_1 duration = -1 hidden = yes}}
		}
	}
	if = {
		limit = { has_idea = flottenbasis1 }
		trigger_switch = {
			on_trigger = current_age
			age_of_revolutions = {add_country_modifier = {name = flottenbasis_manpower_3 duration = -1 hidden = yes}}
			age_of_absolutism = {add_country_modifier = {name = flottenbasis_manpower_2 duration = -1 hidden = yes}}
			age_of_reformation = {add_country_modifier = {name = flottenbasis_manpower_1 duration = -1 hidden = yes}}
		}
	}
	if = {
		limit = { has_idea = zentra5 }
		trigger_switch = {
			on_trigger = current_age
			age_of_revolutions = {add_country_modifier = {name = zentra_manpower_3 duration = -1 hidden = yes}}
			age_of_absolutism = {add_country_modifier = {name = zentra_manpower_2 duration = -1 hidden = yes}}
			age_of_reformation = {add_country_modifier = {name = zentra_manpower_1 duration = -1 hidden = yes}}
		}
	}
	if = {
		limit = { has_idea = imperialismus2 }
		trigger_switch = {
			on_trigger = current_age
			age_of_revolutions = {add_country_modifier = {name = imperialismus_autoritaet_3 duration = -1 hidden = yes}}
			age_of_absolutism = {add_country_modifier = {name = imperialismus_autoritaet_2 duration = -1 hidden = yes}}
			age_of_reformation = {add_country_modifier = {name = imperialismus_autoritaet_1 duration = -1 hidden = yes}}
		}
	}
	if = {
		limit = { has_idea = konigreich2 }
		trigger_switch = {
			on_trigger = current_age
			age_of_revolutions = {add_country_modifier = {name = konigreich_force_land_3 duration = -1 hidden = yes}}
			age_of_absolutism = {add_country_modifier = {name = konigreich_force_land_2 duration = -1 hidden = yes}}
			age_of_reformation = {add_country_modifier = {name = konigreich_force_land_1 duration = -1 hidden = yes}}
		}
	}
	if = {
		limit = { has_idea = konigreich5 }
		trigger_switch = {
			on_trigger = current_age
			age_of_revolutions = {add_country_modifier = {name = konigreich_force_fleet_3 duration = -1 hidden = yes}}
			age_of_absolutism = {add_country_modifier = {name = konigreich_force_fleet_2 duration = -1 hidden = yes}}
			age_of_reformation = {add_country_modifier = {name = konigreich_force_fleet_1 duration = -1 hidden = yes}}
		}
	}
}

#ROOT = province
on_adm_exploited = {
	on_adm_exploited_effects = yes
	on_development_reduction_modifiers_effect = yes
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1041_flag} }	#base tax based modifiers
		set_province_flag = bertus_pops_1041_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1041_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
}

on_dip_exploited = {
	on_development_reduction_modifiers_effect = yes
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1042_flag} }	#racial base production modifiers
		set_province_flag = bertus_pops_1042_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1042_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
}

on_mil_exploited = {
	on_development_reduction_modifiers_effect = yes
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1040_flag} }	#development based modifiers
		set_province_flag = bertus_pops_1040_flag
	}
	if = {
		limit = { NOT = {has_province_flag = bertus_pops_1043_flag} }	#base manpower based modifiers
		set_province_flag = bertus_pops_1043_flag
	}
	if = {
		limit = {
			OR = {
				has_province_flag = bertus_pops_1040_flag
				has_province_flag = bertus_pops_1043_flag
			}
		}
		owner = { country_event = { id = bertus_pops.1000 days = 30 } }
	}
}

on_raze = {
	add_permanent_province_modifier = { name = province_razed duration = 7300 }
}

on_concentrate_development = {
}

# EVERYTHING BELOW 1.35
on_slacken_start = {
	hidden_effect = {	#bertus mod
		add_country_modifier = { name = slackening_modifier duration = -1 hidden = yes }
	}
}
on_slacken_stop = {
	hidden_effect = { remove_country_modifier = slackening_modifier }
}

on_colony_finished = { #ROOT - Province
	on_colony_finished_effect = yes
}

on_advisor_hired = { #ROOT - Country

}

on_adm_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
	if = {	#bertus mod
		limit = { has_country_modifier = magic_menu_mind_control_spell_adm_modifier }
		remove_country_modifier = magic_menu_mind_control_spell_adm_modifier
	}
}

on_dip_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
	if = {	#bertus mod
		limit = { has_country_modifier = magic_menu_mind_control_spell_dip_modifier }
		remove_country_modifier = magic_menu_mind_control_spell_dip_modifier
	}
}

on_mil_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!
	if = {	#bertus mod
		limit = { has_country_modifier = magic_menu_mind_control_spell_mil_modifier }
		remove_country_modifier = magic_menu_mind_control_spell_mil_modifier
	}
}

on_core = { #ROOT - Province, #FROM - Country that gets the core

}

on_tech_taken = { #ROOT - Country

}

on_adm_tech_taken = { #ROOT - Country, executed after on_tech_taken!
	if = {
		limit = {
			has_idea = civil_servants
		}
		change_government_reform_progress = 25
	}
}

on_dip_tech_taken = { #ROOT - Country, executed after on_tech_taken!

}

on_mil_tech_taken = { #ROOT - Country, executed after on_tech_taken!
	update_tech_flag = yes	#bertus mod
	country_event = { id = bertus_changes.1041 }
} 

on_barrage = { #ROOT - barraging country, FROM - barraged province 
	if = {
		limit = { has_country_flag = marrhold_grenadiers_flag has_estate_privilege = estate_human_griffon_academies }
		FROM = { change_siege = 2 add_devastation = 10 }
	}
	if = {	#bertus mod
		limit = { has_government_attribute = extra_siege_on_breach }
		FROM = { change_siege = 2 }
	}
}

on_naval_barrage = { #ROOT - barraging country, FROM - barraged province 
	if = {
		limit = {has_idea = maritim3}
		FROM = {change_siege = 1}
	}
}

on_scorch_earth  = { #ROOT - scorching country, FROM - scorched province

}

on_war_ended = { #ROOT - Winer FROM - Loser
	on_war_ended_effects = yes	#bertus mod
}

on_alliance_broken = { #ROOT - Original alliance creator, FROM - Alliance accepter
	on_alliance_broken_effect = yes
}

on_royal_marriage_broken = { #ROOT - Original marriage creator, FROM - Marriage accepter

}

on_alliance_created = { #ROOT - Alliance sender, FROM - Alliance accepter

}

on_royal_marriage = { #ROOT - Marraige sender, FROM - marriage accepter

}		

on_heir_disinherited = {
	on_heir_disinherited_or_death_effect = yes
}
on_overrun = { #ROOT - winner, FROM - loser, on stackwipe

}