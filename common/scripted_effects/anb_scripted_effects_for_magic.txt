
ruler_save_spell_schools = {
	if = { limit = { is_abjuration_1 = yes } set_country_flag = saved_abjuration_1 }
	if = { limit = { is_abjuration_2 = yes } set_country_flag = saved_abjuration_2 }
	if = { limit = { is_abjuration_3 = yes } set_country_flag = saved_abjuration_3 }
	if = { limit = { is_conjuration_1 = yes } set_country_flag = saved_conjuration_1 }
	if = { limit = { is_conjuration_2 = yes } set_country_flag = saved_conjuration_2 }
	if = { limit = { is_conjuration_3 = yes } set_country_flag = saved_conjuration_3 }
	if = { limit = { is_divination_1 = yes } set_country_flag = saved_divination_1 }
	if = { limit = { is_divination_2 = yes } set_country_flag = saved_divination_2 }
	if = { limit = { is_divination_3 = yes } set_country_flag = saved_divination_3 }
	if = { limit = { is_enchantment_1 = yes } set_country_flag = saved_enchantment_1 }
	if = { limit = { is_enchantment_2 = yes } set_country_flag = saved_enchantment_2 }
	if = { limit = { is_enchantment_3 = yes } set_country_flag = saved_enchantment_3 }
	if = { limit = { is_evocation_1 = yes } set_country_flag = saved_evocation_1 }
	if = { limit = { is_evocation_2 = yes } set_country_flag = saved_evocation_2 }
	if = { limit = { is_evocation_3 = yes } set_country_flag = saved_evocation_3 }
	if = { limit = { is_illusion_1 = yes } set_country_flag = saved_illusion_1 }
	if = { limit = { is_illusion_2 = yes } set_country_flag = saved_illusion_2 }
	if = { limit = { is_illusion_3 = yes } set_country_flag = saved_illusion_3 }
	if = { limit = { is_necromancy_1 = yes } set_country_flag = saved_necromancy_1 }
	if = { limit = { is_necromancy_2 = yes } set_country_flag = saved_necromancy_2 }
	if = { limit = { is_necromancy_3 = yes } set_country_flag = saved_necromancy_3 }
	if = { limit = { is_transmutation_1 = yes } set_country_flag = saved_transmutation_1 }
	if = { limit = { is_transmutation_2 = yes } set_country_flag = saved_transmutation_2 }
	if = { limit = { is_transmutation_3 = yes } set_country_flag = saved_transmutation_3 }
	
}

ruler_give_saved_spell_schools = {
	if = { limit = { has_country_flag = saved_abjuration_1 } set_ruler_flag = abjuration_1 }
	if = { limit = { has_country_flag = saved_abjuration_2 } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
	if = { limit = { has_country_flag = saved_abjuration_3 } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 set_ruler_flag = abjuration_3 }
	if = { limit = { has_country_flag = saved_conjuration_1 } set_ruler_flag = conjuration_1 }
	if = { limit = { has_country_flag = saved_conjuration_2 } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
	if = { limit = { has_country_flag = saved_conjuration_3 } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 set_ruler_flag = conjuration_3 }
	if = { limit = { has_country_flag = saved_divination_1 } set_ruler_flag = divination_1 }
	if = { limit = { has_country_flag = saved_divination_2 } set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
	if = { limit = { has_country_flag = saved_divination_3 } set_ruler_flag = divination_1 set_ruler_flag = divination_2 set_ruler_flag = divination_3 }
	if = { limit = { has_country_flag = saved_enchantment_1 } set_ruler_flag = enchantment_1 }
	if = { limit = { has_country_flag = saved_enchantment_2 } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
	if = { limit = { has_country_flag = saved_enchantment_3 } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 set_ruler_flag = enchantment_3 }
	if = { limit = { has_country_flag = saved_evocation_1 } set_ruler_flag = evocation_1 }
	if = { limit = { has_country_flag = saved_evocation_2 } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
	if = { limit = { has_country_flag = saved_evocation_3 } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 set_ruler_flag = evocation_3 }
	if = { limit = { has_country_flag = saved_illusion_1 } set_ruler_flag = illusion_1 }
	if = { limit = { has_country_flag = saved_illusion_2 } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
	if = { limit = { has_country_flag = saved_illusion_3 } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 set_ruler_flag = illusion_3 }
	if = { limit = { has_country_flag = saved_necromancy_1 } set_ruler_flag = necromancy_1 }
	if = { limit = { has_country_flag = saved_necromancy_2 } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
	if = { limit = { has_country_flag = saved_necromancy_3 } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 set_ruler_flag = necromancy_3 }
	if = { limit = { has_country_flag = saved_transmutation_1 } set_ruler_flag = transmutation_1 }
	if = { limit = { has_country_flag = saved_transmutation_2 } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
	if = { limit = { has_country_flag = saved_transmutation_3 } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 set_ruler_flag = transmutation_3 }}

ruler_clear_spell_schools = {
	clr_country_flag = abjuration_1
	clr_country_flag = abjuration_2
	clr_country_flag = abjuration_3
	clr_country_flag = conjuration_1
	clr_country_flag = conjuration_2
	clr_country_flag = conjuration_3
	clr_country_flag = divination_1
	clr_country_flag = divination_2
	clr_country_flag = divination_3
	clr_country_flag = enchantment_1
	clr_country_flag = enchantment_2
	clr_country_flag = enchantment_3
	clr_country_flag = evocation_1
	clr_country_flag = evocation_2
	clr_country_flag = evocation_3
	clr_country_flag = illusion_1
	clr_country_flag = illusion_2
	clr_country_flag = illusion_3
	clr_country_flag = necromancy_1
	clr_country_flag = necromancy_2
	clr_country_flag = necromancy_3
	clr_country_flag = transmutation_1
	clr_country_flag = transmutation_2
	clr_country_flag = transmutation_3
}

ruler_clear_saved_spell_schools = {
	clr_country_flag = saved_abjuration_1
	clr_country_flag = saved_abjuration_2
	clr_country_flag = saved_abjuration_3
	clr_country_flag = saved_conjuration_1
	clr_country_flag = saved_conjuration_2
	clr_country_flag = saved_conjuration_3
	clr_country_flag = saved_divination_1
	clr_country_flag = saved_divination_2
	clr_country_flag = saved_divination_3
	clr_country_flag = saved_enchantment_1
	clr_country_flag = saved_enchantment_2
	clr_country_flag = saved_enchantment_3
	clr_country_flag = saved_evocation_1
	clr_country_flag = saved_evocation_2
	clr_country_flag = saved_evocation_3
	clr_country_flag = saved_illusion_1
	clr_country_flag = saved_illusion_2
	clr_country_flag = saved_illusion_3
	clr_country_flag = saved_necromancy_1
	clr_country_flag = saved_necromancy_2
	clr_country_flag = saved_necromancy_3
	clr_country_flag = saved_transmutation_1
	clr_country_flag = saved_transmutation_2
	clr_country_flag = saved_transmutation_3
}

magic_project_clear_lichdom_flags = {
	set_ruler_flag = magic_project_lichdom_complete
	clr_ruler_flag = magic_project_lichdom_started
	clr_ruler_flag = magic_project_lichdom_1
	clr_ruler_flag = magic_project_lichdom_2
	clr_ruler_flag = magic_project_lichdom_3
	clr_ruler_flag = magic_project_lichdom_4
	clr_ruler_flag = magic_project_lichdom_5
	clr_ruler_flag = magic_project_lichdom_6
	clr_ruler_flag = magic_project_lichdom_7
	clr_ruler_flag = magic_project_lichdom_8
	clr_ruler_flag = magic_project_lichdom_9
	clr_ruler_flag = magic_project_lichdom_10
	
	clr_ruler_flag = magic_project_lichdom_1_adventurers
	clr_ruler_flag = magic_project_lichdom_1_state
	clr_ruler_flag = magic_project_lichdom_1_myself
	clr_ruler_flag = magic_project_lichdom_2_amulet
	clr_ruler_flag = magic_project_lichdom_2_box
	clr_ruler_flag = magic_project_lichdom_5_a
	clr_ruler_flag = magic_project_lichdom_5_b
	clr_ruler_flag = magic_project_lichdom_5_c
	clr_ruler_flag = magic_project_lichdom_6_a
	clr_ruler_flag = magic_project_lichdom_6_b
	clr_ruler_flag = magic_project_lichdom_6_c
	clr_ruler_flag = magic_project_lichdom_7_heart
	clr_ruler_flag = magic_project_lichdom_7_unicorn
	clr_ruler_flag = magic_project_lichdom_8_a
}

magic_project_clear_lichdom_government_flags = {
	clr_country_flag = wizard_king_magocracy
	clr_country_flag = original_gov_monarchy
	clr_country_flag = original_gov_republic
	clr_country_flag = original_gov_theocracy
	clr_country_flag = original_gov_clergy
	clr_country_flag = original_gov_monastic
	clr_country_flag = original_gov_secular
	clr_country_flag = original_gov_adventurer
	clr_country_flag = original_gov_rezankand
	clr_country_flag = original_gov_oracular
	clr_country_flag = original_gov_tribal
}

clear_spell_flags = {
	clr_country_flag = spell_1
	clr_country_flag = spell_2
	clr_country_flag = spell_3
	clr_country_flag = spell_4
	clr_country_flag = spell_5
	clr_country_flag = spell_6
	clr_country_flag = spell_7
	clr_country_flag = spell_8
	clr_country_flag = spell_9
	clr_country_flag = spell_10
}

calculate_lichdom_chance = {
	set_variable ={ which=$which$ value=0 }
	
	if = { limit = { has_ruler_flag = magic_project_lichdom_2_box } change_variable = { which = $which$ value = 1 } }
	if = { limit = { has_ruler_flag = magic_project_lichdom_5_b } change_variable = { which = $which$ value = 1 } }
	if = { limit = { has_ruler_flag = magic_project_lichdom_5_c } change_variable = { which = $which$ value = 2 } }
	if = { limit = { has_ruler_flag = magic_project_lichdom_6_b } change_variable = { which = $which$ value = 1 } }
	if = { limit = { has_ruler_flag = magic_project_lichdom_6_c } change_variable = { which = $which$ value = 2 } }
	if = { limit = { has_ruler_flag = magic_project_lichdom_7_unicorn } change_variable = { which = $which$ value = 1 } }
	if = { limit = { has_ruler_flag = magic_project_lichdom_8_a } change_variable = { which = $which$ value = 1 } }
}

magic_ruler_give_contextual_spell_school = {
	#Yeah eventually lol
}

magic_ruler_give_random_spell_school = {
	random_list = {
		10 = {
			if = { limit = { is_abjuration_1 = yes } set_ruler_flag = abjuration_2 }
			else_if = { limit = { is_abjuration_2 = yes } set_ruler_flag = abjuration_3 }
			else = { set_ruler_flag = abjuration_1 }
		}
		10 = {
			if = { limit = { is_conjuration_1 = yes } set_ruler_flag = conjuration_2 }
			else_if = { limit = { is_conjuration_2 = yes } set_ruler_flag = conjuration_3 }
			else =  { set_ruler_flag = conjuration_1 }
		}
		10 = {
			if = { limit = { is_divination_1 = yes } set_ruler_flag = divination_2 }
			else_if = { limit = { is_divination_2 = yes } set_ruler_flag = divination_3 }
			else =  { set_ruler_flag = divination_1 }
		}
		10 = {
			if = { limit = { is_enchantment_1 = yes } set_ruler_flag = enchantment_2 }
			else_if = { limit = { is_enchantment_2 = yes } set_ruler_flag = enchantment_3 }
			else =  { set_ruler_flag = enchantment_1 }
		}
		10 = {
			if = { limit = { is_evocation_1 = yes } set_ruler_flag = evocation_2 }
			else_if = { limit = { is_evocation_2 = yes } set_ruler_flag = evocation_3 }
			else =  { set_ruler_flag = evocation_1 }
		}
		10 = {
			if = { limit = { is_illusion_1 = yes } set_ruler_flag = illusion_2 }
			else_if = { limit = { is_illusion_2 = yes } set_ruler_flag = illusion_3 }
			else =  { set_ruler_flag = illusion_1 }
		}
		10 = {
			trigger = { NOT = { tag = I20 has_reform = krakazol_olzonog } } #krakazol should not generate with necromancy
			if = { limit = { is_necromancy_1 = yes } set_ruler_flag = necromancy_2 }
			else_if = { limit = { is_necromancy_2 = yes } set_ruler_flag = necromancy_3 }
			else =  { set_ruler_flag = necromancy_1 }
		}
		10 = {
			if = { limit = { is_transmutation_1 = yes } set_ruler_flag = transmutation_2 }
			else_if = { limit = { is_transmutation_2 = yes } set_ruler_flag = transmutation_3 }
			else =  { set_ruler_flag = transmutation_1 }
		}
	}
}

magic_ruler_give_random_adm_school = {
	random_list = {
		34 = {
			if = { limit = { is_conjuration_1 = yes } set_ruler_flag = conjuration_2 }
			else_if = { limit = { is_conjuration_2 = yes } set_ruler_flag = conjuration_3 }
			else =  { set_ruler_flag = conjuration_1 }
		}
		33 = {
			if = { limit = { is_transmutation_1 = yes } set_ruler_flag = transmutation_2 }
			else_if = { limit = { is_transmutation_2 = yes } set_ruler_flag = transmutation_3 }
			else =  { set_ruler_flag = transmutation_1 }
		}
		33 = {
			if = { limit = { is_divination_1 = yes } set_ruler_flag = divination_2 }
			else_if = { limit = { is_divination_2 = yes } set_ruler_flag = divination_3 }
			else =  { set_ruler_flag = divination_1 }
		}
	}
}

magic_ruler_give_random_dip_school = {
	random_list = {
		34 = {
			if = { limit = { is_illusion_1 = yes } set_ruler_flag = illusion_2 }
			else_if = { limit = { is_illusion_2 = yes } set_ruler_flag = illusion_3 }
			else =  { set_ruler_flag = illusion_1 }
		}
		33 = {
			if = { limit = { is_enchantment_1 = yes } set_ruler_flag = enchantment_2 }
			else_if = { limit = { is_enchantment_2 = yes } set_ruler_flag = enchantment_3 }
			else =  { set_ruler_flag = enchantment_1 }
		}
		33 = {
			if = { limit = { is_necromancy_1 = yes } set_ruler_flag = necromancy_2 }
			else_if = { limit = { is_necromancy_2 = yes } set_ruler_flag = necromancy_3 }
			else =  { set_ruler_flag = necromancy_1 }
		}
	}
}

magic_ruler_give_random_mil_school = {
	random_list = {
		50 = {
			if = { limit = { is_evocation_1 = yes } set_ruler_flag = evocation_2 }
			else_if = { limit = { is_evocation_2 = yes } set_ruler_flag = evocation_3 }
			else =  { set_ruler_flag = evocation_1 }
		}
		50 = {
			if = { limit = { is_abjuration_1 = yes } set_ruler_flag = abjuration_2 }
			else_if = { limit = { is_abjuration_2 = yes } set_ruler_flag = abjuration_3 }
			else =  { set_ruler_flag = abjuration_1 }
		}
	}
}


clear_witch_king_points = {
	#variable is set in magic ruler initialization
	hidden_effect = { set_variable = { which = pointsWitchKing value = 0 } }
}

increase_witch_king_points_small = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_small_tt
	hidden_effect = { change_variable = { which = pointsWitchKing value = 1 } }
}

increase_witch_king_points_medium = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_medium_tt
	hidden_effect = { change_variable = { which = pointsWitchKing value = 2 } }
}

increase_witch_king_points_large = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_large_tt
	hidden_effect = { change_variable = { which = pointsWitchKing value = 3 } }
}

increase_witch_king_points_massive = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_massive_tt
	hidden_effect = { change_variable = { which = pointsWitchKing value = 15 } }
}

magic_project_clear_homunculus_flags = {
		hidden_effect = {
			clr_ruler_flag = magic_project_homunculus_started
			clr_ruler_flag = magic_project_homunculus_1
			clr_ruler_flag = magic_project_homunculus_2
			clr_ruler_flag = magic_project_homunculus_3
			clr_ruler_flag = magic_project_homunculus_4
			clr_ruler_flag = magic_project_homunculus_5
			clr_ruler_flag = magic_project_homunculus_complete
			
			clr_ruler_flag = homunculus_current_male
			clr_ruler_flag = homunculus_current_female
			clr_ruler_flag = homunculus_current_androgyne
			clr_ruler_flag = homunculus_current_humanlike
			clr_ruler_flag = homunculus_current_artificial
		}
}

foresight_spell_chance = {
	random_list = {
		$success$ = {
			if = {		# Tughayasa's tier 2 monument reward
				limit = { 4527 = { owned_by = ROOT has_province_flag = tughayasa_better_divination_1 } }
				add_country_modifier = { name = magic_realm_divination_foresight duration = 450 }
				custom_tooltip = tughayasa_divination_booster_tt
			}
			else_if = {		# Tughayasa's tier 3 monument reward
				limit = { 4527 = { owned_by = ROOT has_province_flag = tughayasa_better_divination_2 } }
				add_country_modifier = { name = magic_realm_divination_foresight duration = 600 }
				custom_tooltip = tughayasa_divination_booster_tt
			}
			else = {
				add_ruler_modifier = { name = magic_realm_divination_foresight duration = 365 }
			}
		}
		$failure$ = {
			add_ruler_modifier = { name = magic_realm_divination_foresight_madness duration = 10950 }
		}
	}
}

magic_scrying_rivals_cost = {
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 1 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 5 } }
		}
		add_dip_power = -25
		add_mil_power = -50
	}
}

magic_study_clear_study_effects = {
	clr_ruler_flag = ruler_studying_abjuration
	clr_ruler_flag = ruler_studying_conjuration
	clr_ruler_flag = ruler_studying_divination
	clr_ruler_flag = ruler_studying_enchantment
	clr_ruler_flag = ruler_studying_evocation
	clr_ruler_flag = ruler_studying_illusion
	clr_ruler_flag = ruler_studying_necromancy
	clr_ruler_flag = ruler_studying_transmutation
	
	clr_ruler_flag = ruler_studying_help_from_mages_estate
	clr_ruler_flag = ruler_studying_help_from_advisor
	clr_ruler_flag = ruler_studying_library_archives
	clr_ruler_flag = ruler_studying_ancient_tome_found
	clr_ruler_flag = ruler_studying_magic_relic
	clr_ruler_flag = ruler_studying_magic_precursor_knowledge
	clr_ruler_flag = ruler_studying_magisterial_support
	clr_ruler_flag = ruler_studying_mana_1
	clr_ruler_flag = ruler_studying_mana_2
	clr_ruler_flag = ruler_studying_mana_3
	clr_ruler_flag = ruler_studying_gold_1
	clr_ruler_flag = ruler_studying_gold_2
	clr_ruler_flag = ruler_studying_gold_3
	clr_ruler_flag = ruler_studying_unregulated_research
	clr_ruler_flag = ruler_studying_unsafe_experiments
	clr_ruler_flag = ruler_studying_live_experiments
	clr_ruler_flag = ruler_studying_forbidden_knowledge
	clr_ruler_flag = ruler_studying_appealed_to_darker_powers
	
	clr_ruler_flag = money_magic_study
	clr_ruler_flag = ruler_studying_magic_flag
	clr_ruler_flag = magical_study_1
	clr_ruler_flag = magical_study_2
	clr_ruler_flag = magical_study_3
	
	remove_country_modifier = ruler_studying_magic
	
	hidden_effect = {
		set_variable = {
			which = ruler_study_experience  value = 0
		}
		
		if = { limit = { has_country_flag = patron_xp_bonus }
			remove_country_modifier = patron_favored_school_modifier
			clr_country_flag = patron_xp_bonus
		}
		if = { limit = { has_country_flag = patron_xp_malus }
			remove_country_modifier = patron_disfavored_school_modifier
			clr_country_flag = patron_xp_malus
		}
	}
}

magic_study_level_up_abjuration = {
	if = {
		limit = { is_abjuration_2 = yes }
		set_ruler_flag = abjuration_3
		custom_tooltip = tooltip_abjuration_3_level_up 
	}
	else_if = {
		limit = { is_abjuration_1 = yes }
		set_ruler_flag = abjuration_2
		custom_tooltip = tooltip_abjuration_2_level_up 
	}
	else = {
		set_ruler_flag = abjuration_1
		custom_tooltip = tooltip_abjuration_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_abjuration }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_conjuration = {
	if = {
		limit = { is_conjuration_2 = yes }
		set_ruler_flag = conjuration_3
		custom_tooltip = tooltip_conjuration_3_level_up 
	}
	else_if = {
		limit = { is_conjuration_1 = yes }
		set_ruler_flag = conjuration_2
		custom_tooltip = tooltip_conjuration_2_level_up 
	}
	else = {
		set_ruler_flag = conjuration_1
		custom_tooltip = tooltip_conjuration_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_conjuration }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_divination = {
	if = {
		limit = { is_divination_2 = yes }
		set_ruler_flag = divination_3
		custom_tooltip = tooltip_divination_3_level_up 
	}
	else_if = {
		limit = { is_divination_1 = yes }
		set_ruler_flag = divination_2
		custom_tooltip = tooltip_divination_2_level_up 
	}
	else_if = {
		limit = { is_divination_0 = yes }
		set_ruler_flag = divination_1
		custom_tooltip = tooltip_divination_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_divination }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_enchantment = {
	if = {
		limit = { is_enchantment_2 = yes }
		set_ruler_flag = enchantment_3
		custom_tooltip = tooltip_enchantment_3_level_up 
	}
	else_if = {
		limit = { is_enchantment_1 = yes }
		set_ruler_flag = enchantment_2
		custom_tooltip = tooltip_enchantment_2_level_up 
	}
	else_if = {
		limit = { is_enchantment_0 = yes }
		set_ruler_flag = enchantment_1
		custom_tooltip = tooltip_enchantment_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_enchantment }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_evocation = {
	if = {
		limit = { is_evocation_2 = yes }
		set_ruler_flag = evocation_3
		custom_tooltip = tooltip_evocation_3_level_up 
	}
	else_if = {
		limit = { is_evocation_1 = yes }
		set_ruler_flag = evocation_2
		custom_tooltip = tooltip_evocation_2_level_up 
	}
	else_if = {
		limit = { is_evocation_0 = yes }
		set_ruler_flag = evocation_1
		custom_tooltip = tooltip_evocation_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_evocation }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_illusion = {
	if = {
		limit = { is_illusion_2 = yes }
		set_ruler_flag = illusion_3
		custom_tooltip = tooltip_illusion_3_level_up 
	}
	else_if = {
		limit = { is_illusion_1 = yes }
		set_ruler_flag = illusion_2
		custom_tooltip = tooltip_illusion_2_level_up 
	}
	else_if = {
		limit = { is_illusion_0 = yes }
		set_ruler_flag = illusion_1
		custom_tooltip = tooltip_illusion_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_illusion }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_necromancy = {
	if = {
		limit = { is_necromancy_2 = yes }
		set_ruler_flag = necromancy_3
		custom_tooltip = tooltip_necromancy_3_level_up 
	}
	else_if = {
		limit = { is_necromancy_1 = yes }
		set_ruler_flag = necromancy_2
		custom_tooltip = tooltip_necromancy_2_level_up 
	}
	else_if = {
		limit = { is_necromancy_0 = yes }
		set_ruler_flag = necromancy_1
		custom_tooltip = tooltip_necromancy_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_necromancy }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_transmutation = {
	if = {
		limit = { is_transmutation_2 = yes }
		set_ruler_flag = transmutation_3
		custom_tooltip = tooltip_transmutation_3_level_up 
	}
	else_if = {
		limit = { is_transmutation_1 = yes }
		set_ruler_flag = transmutation_2
		custom_tooltip = tooltip_transmutation_2_level_up 
	}
	else_if = {
		limit = { is_transmutation_0 = yes }
		set_ruler_flag = transmutation_1
		custom_tooltip = tooltip_transmutation_1_level_up 
	}
	if = {
		limit = { has_ruler_flag = ruler_studying_transmutation }
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_all = {
	magic_study_level_up_abjuration = yes
	magic_study_level_up_divination = yes
	magic_study_level_up_conjuration = yes
	magic_study_level_up_enchantment = yes
	magic_study_level_up_evocation = yes
	magic_study_level_up_illusion = yes
	magic_study_level_up_necromancy = yes
	magic_study_level_up_transmutation = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_mana = {
	if = {
		limit = { has_ruler_flag = ruler_studying_mana_1 NOT = { has_ruler_flag = ruler_studying_mana_2 } }
		set_ruler_flag = ruler_studying_mana_2
	}
	else_if = {
		limit = { has_ruler_flag = ruler_studying_mana_2 NOT = { has_ruler_flag = ruler_studying_mana_3 } }
		set_ruler_flag = ruler_studying_mana_3
	}
	else = {
		set_ruler_flag = ruler_studying_mana_1
	}
}

magic_study_level_up_gold = {
	if = {
		limit = { has_ruler_flag = ruler_studying_gold_1 NOT = { has_ruler_flag = ruler_studying_gold_2 } }
		set_ruler_flag = ruler_studying_gold_2
	}
	else_if = {
		limit = { has_ruler_flag = ruler_studying_gold_2 NOT = { has_ruler_flag = ruler_studying_gold_3 } }
		set_ruler_flag = ruler_studying_gold_3
	}
	else = {
		set_ruler_flag = ruler_studying_gold_1
	}
}

remove_siege_spells_from_province = {
	remove_province_modifier = siege_magic_elemental_besieger
	remove_province_modifier = siege_magic_giant_besieger
	remove_province_modifier = siege_magic_dragon_besieger
}

magic_casted_spell = {
#Eventually this would be spending spell slots, but for its a spell-a-month limit
	hidden_effect = { ROOT = { add_ruler_modifier = { name = ruler_recently_casted_spell duration = 28 desc = ruler_recently_casted_spell_desc } } }
	set_ruler_flag = magic_just_casted_spell
}
open_single_menu = {
	set_ruler_flag = magic_menu_opened
}

close_single_menu = {
	if = {
		limit = { has_ruler_flag = magic_menu_opened }
		clr_ruler_flag = magic_menu_opened 
	}
}

clear_siege_magic_effects = {
	#remove_province_modifier = 
}

count_provinces_with_farm_goods_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = { which = $which$ value=0 }
	
	every_owned_province = {
	    limit = { plant_growth_target = yes }
	    ROOT = { change_variable = { which = $which$ value = 1 } }
	}
}

count_provinces_broad_ward_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = { which = $which$ value=0 }
	
	every_owned_province = {
	    limit = {
			has_no_ward_province_modifiers = yes
			is_city = yes
			OR = { fort_level = 2 is_capital = yes }
		}
	    ROOT = { change_variable = { which = $which$ value = 1 } }
	}
}

count_provinces_narrow_ward_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = { which = $which$ value=0 }
	
	every_owned_province = {
	    limit = {
			has_no_ward_province_modifiers = yes
			is_city = yes
			OR = { AND = { has_building = ramparts fort_level = 2 } is_capital = yes }
		}
	    ROOT = { change_variable = { which = $which$ value = 1 } }
	}
}
# Can handle experience = 50, 100, 200 or 500. If you want to add more then you need to create new tooltips for them.
increase_study_experience = {
	[[experience]
		custom_tooltip = magic_study_experience_$experience$_tt 								# Loc only exists for 50, 100, 200 and 500 currently
		
		hidden_effect = {
			set_variable = { experienceGain = $experience$ }
			export_to_variable = { which = experienceModifier value = modifier:study_experience_modifier }
			multiply_variable = { which = experienceGain which = experienceModifier }
		}
		
		while = {
			limit = { check_variable = { which = experienceGain value = 0 } }
			change_variable = { which = experienceGain value = -1 }
			change_variable = { which = ruler_study_experience value = 1 }
		}
		hidden_effect = {
			multiply_variable = { which = experienceModifier value = 100 }
		}
	]

	hidden_effect = {
		country_event = { id = magic_study.100 days = 1 }
	}
}

# Tooltip to increase: add_magic_study_modifier_1_tt		Handle 1,2,5,7,10,12,15,17,20,25,33,50,100
# Tooltip to decrease : remove_magic_study_modifier_1_tt	Handle 1,2,5,7,10,12,15,17,20,25,33,50,100

# Fires the correct event for magical study completing
# finished_study_effect = {
	# trigger_switch = {
		# on_trigger = has_ruler_flag
	
		# ruler_studying_abjuration = { country_event = { id = magic_study.2 days = 7 } }
		# ruler_studying_conjuration = { country_event = { id = magic_study.5 days = 7 } }
		# ruler_studying_divination = { country_event = { id = magic_study.8 days = 7 } }
		# ruler_studying_enchantment = { country_event = { id = magic_study.11 days = 7 } }
		# ruler_studying_evocation = { country_event = { id = magic_study.14 days = 7 } }
		# ruler_studying_illusion = { country_event = { id = magic_study.17 days = 7 } }
		# ruler_studying_necromancy = { country_event = { id = magic_study.20 days = 7 } }
		# ruler_studying_transmutation = { country_event = { id = magic_study.23 days = 7 } }
	# }
	# country_event = { id = magic_study.100 }
# }

magic_study_start_effect = {
	add_ruler_modifier = { name = ruler_studying_magic duration = -1}
	custom_tooltip = study_experience_cost_tt
	set_ruler_flag = ruler_studying_magic_flag
	hidden_effect = {
		if = { limit = { ai = no }
			if = { limit = { has_ruler_flag = magical_study_1 } set_variable = { ruler_study_experience_target = 1000 } }
			else_if = { limit = { has_ruler_flag = magical_study_2 } set_variable = { ruler_study_experience_target = 1500 } }
			else_if = { limit = { has_ruler_flag = magical_study_3 } set_variable = { ruler_study_experience_target = 2000 } }
			else = { set_variable = { ruler_study_experience_target = 5000 } }
		}
		country_event = { id = magic_ruler.21 }
	}
}

magic_legend_lore_effect = {	#bertus mod
	set_ruler_flag = ruler_studying_legend_lore
	increase_study_experience = { experience = 250 }
	add_ruler_modifier = { name = magic_loreseeker_cooldown duration = 730 hidden = yes }
}

magic_legend_lore_cost_tooltip = {	
	if = {
		limit = {
			OR = {
				AND = { has_ruler_flag = ruler_studying_abjuration has_ruler_flag = abjuration_2 }
				AND = { has_ruler_flag = ruler_studying_conjuration has_ruler_flag = conjuration_2 }
				AND = { has_ruler_flag = ruler_studying_divination has_ruler_flag = divination_2 }
				AND = { has_ruler_flag = ruler_studying_enchantment has_ruler_flag = enchantment_2 }
				AND = { has_ruler_flag = ruler_studying_evocation has_ruler_flag = evocation_2 }
				AND = { has_ruler_flag = ruler_studying_illusion has_ruler_flag = illusion_2 }
				AND = { has_ruler_flag = ruler_studying_necromancy has_ruler_flag = necromancy_2 }
				AND = { has_ruler_flag = ruler_studying_transmutation has_ruler_flag = transmutation_2 }
			}
		}
		if = { limit = { NOT = { dip_power = 80 } } custom_tooltip = magic_need_80_dip_tt }
		if = { limit = { NOT = { dip_power = 20 } } custom_tooltip = magic_need_20_mil_tt }
	}
	else_if = {
		limit = {
			OR = {
				AND = { has_ruler_flag = ruler_studying_abjuration has_ruler_flag = abjuration_1 }
				AND = { has_ruler_flag = ruler_studying_conjuration has_ruler_flag = conjuration_1 }
				AND = { has_ruler_flag = ruler_studying_divination has_ruler_flag = divination_1 }
				AND = { has_ruler_flag = ruler_studying_enchantment has_ruler_flag = enchantment_1 }
				AND = { has_ruler_flag = ruler_studying_evocation has_ruler_flag = evocation_1 }
				AND = { has_ruler_flag = ruler_studying_illusion has_ruler_flag = illusion_1 }
				AND = { has_ruler_flag = ruler_studying_necromancy has_ruler_flag = necromancy_1 }
				AND = { has_ruler_flag = ruler_studying_transmutation has_ruler_flag = transmutation_1 }
			}
		}
		if = { limit = { NOT = { dip_power = 40 } } custom_tooltip = magic_need_40_dip_tt }
		if = { limit = { NOT = { dip_power = 10 } } custom_tooltip = magic_need_10_mil_tt }
	}
	else = {
		if = { limit = { NOT = { dip_power = 20 } } custom_tooltip = magic_need_20_dip_tt }
		if = { limit = { NOT = { dip_power = 5 } } custom_tooltip = magic_need_5_mil_tt }
	}
}

set_magic_patron = {
	set_ruler_flag = $name_key$_patron
	custom_tooltip = $name_key$_desc_tt
	hidden_effect = {
		[[favoured_school_1] set_ruler_flag = patron_favored_$favoured_school_1$ ]
		[[favoured_school_2] set_ruler_flag = patron_favored_$favoured_school_2$ ]
		[[disfavoured_school_1] set_ruler_flag = patron_disfavored_$disfavoured_school_1$ ]
		[[disfavoured_school_2] set_ruler_flag = patron_disfavored_$disfavoured_school_2$ ]
		[[initial_approval] set_variable = { PatronApproval = $initial_approval$ } ]
	}
}

change_patron_approval = {
	[[add]
		custom_tooltip = patron_pleased_tt
		hidden_effect = {
			change_variable = { PatronApproval = $add$ }
			if = { limit = { check_variable = { PatronApproval = 9 } } set_variable = { PatronApproval = 8 } }
		}
	]
	[[remove]
		custom_tooltip = patron_displeased_tt
		hidden_effect = {
			subtract_variable = { PatronApproval = $remove$ }
			if = { limit = { NOT = { check_variable = { PatronApproval = 0 } } } set_variable = { PatronApproval = 0 } }
		}
	]
}

kill_adm_homunculus = {
	remove_country_modifier = artist_homunculus
	remove_country_modifier = inquisitor_homunculus
	remove_country_modifier = master_of_mint_homunculus
	remove_country_modifier = natural_scientist_homunculus
	remove_country_modifier = philosopher_homunculus
	remove_country_modifier = theologian_homunculus
	remove_country_modifier = treasurer_homunculus	
	clr_country_flag = employs_adm_homunculus
}

kill_dip_homunculus = {
	remove_country_modifier = colonial_governor_homunculus
	remove_country_modifier = diplomat_homunculus
	remove_country_modifier = naval_reformer_homunculus
	remove_country_modifier = navigator_homunculus
	remove_country_modifier = spymaster_homunculus
	remove_country_modifier = statesman_homunculus
	remove_country_modifier = trader_homunculus
	clr_country_flag = employs_dip_homunculus
}

kill_mil_homunculus = {
	remove_country_modifier = army_organiser_homunculus
	remove_country_modifier = army_reformer_homunculus
	remove_country_modifier = commandant_homunculus
	remove_country_modifier = grand_captain_homunculus
	remove_country_modifier = master_recruiter_homunculus
	remove_country_modifier = military_engineer_homunculus
	remove_country_modifier = quartermaster_homunculus
	clr_country_flag = employs_mil_homunculus
}
