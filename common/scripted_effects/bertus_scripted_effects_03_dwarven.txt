
# Dwarvens

smallest_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = smallest_increase_in_dwarven_tolerance_tooltip
	hidden_effect = { change_variable = {which = dwarven_race_tolerance value = 0.1} }
}
small_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = small_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		change_variable = {which = dwarven_race_tolerance value = 1}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}

medium_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = medium_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		change_variable = {which = dwarven_race_tolerance value = 3}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}

large_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = large_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		change_variable = {which = dwarven_race_tolerance value = 5}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}	
}

largest_increase_of_dwarven_tolerance_effect = {
	custom_tooltip = largest_increase_in_dwarven_tolerance_tooltip
	hidden_effect = {
		change_variable = {which = dwarven_race_tolerance value = 10}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}
smallest_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = smallest_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		subtract_variable = {which = dwarven_race_tolerance value = 0.1}
	}
}
small_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = small_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		subtract_variable = {which = dwarven_race_tolerance value = 1}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}

medium_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = medium_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		subtract_variable = {which = dwarven_race_tolerance value = 3}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}

large_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = large_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		subtract_variable = {which = dwarven_race_tolerance value = 5}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}

largest_decrease_of_dwarven_tolerance_effect = {
	custom_tooltip = largest_decrease_in_dwarven_tolerance_tooltip
	hidden_effect = {
		subtract_variable = {which = dwarven_race_tolerance value = 10}
		country_event = {id = dwarven_tolerance_events.5005} 	# dwarven tolerance update
	}
}

update_dwarven_tolerance = {
	hidden_effect = {
		while = {	# If it ends up above the max it puts it at the highest point (never above 100)
			limit = { check_variable = {which = dwarven_race_tolerance which = max_race_tolerance} }
			change_variable = {which = dwarven_race_tolerance value = -1}
			add_prestige_or_monarch_power = { amount = 1 }
		}
		if = {	# If it ends up below 0 it adds back up to 1
			limit = {NOT = {check_variable = {which = dwarven_race_tolerance value = 1}}}
			set_variable = {which = dwarven_race_tolerance value = 1}
		}
		country_event = {id = dwarven_tolerance_events.5004} 	# dwarven tolerance provinces update 
	}
}

add_dwarven_minority_size_effect = {
	custom_tooltip = add_dwarven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {has_province_modifier = dwarven_minority_oppressed_small}
			remove_province_modifier = dwarven_minority_oppressed_small
			add_permanent_province_modifier = { name = dwarven_minority_oppressed_large  duration = -1}
		}
		#Impact Coexisting
		else_if = {
			limit = {has_province_modifier = dwarven_minority_coexisting_small}
			remove_province_modifier = dwarven_minority_coexisting_small
			add_permanent_province_modifier = { name = dwarven_minority_coexisting_large duration = -1}
		}
		#Impact Integrated
		else_if = {
			limit = {has_province_modifier = dwarven_minority_integrated_small}
			remove_province_modifier = dwarven_minority_integrated_small
			add_permanent_province_modifier = { name = dwarven_minority_integrated_large duration = -1}
		}
		else_if = {
			limit = {
				OR = {
					has_dwarven_majority_trigger = yes
					has_province_modifier = dwarven_minority_oppressed_large
					has_province_modifier = dwarven_minority_coexisting_large
					has_province_modifier = dwarven_minority_integrated_large
				}
			}
			add_1_dev_to_provinces = yes
		}
		else_if = {
			limit = {has_dwarven_minority_trigger = no}
			add_permanent_province_modifier = { name = dwarven_minority_coexisting_small duration = -1}
		}
	}
}

remove_dwarven_minority_size_effect = {
	custom_tooltip = remove_dwarven_minority_size_effect_tooltip
	hidden_effect = {
		#Impact Oppressed
		if = {
			limit = {has_province_modifier = dwarven_minority_oppressed_small}
			remove_province_modifier = dwarven_minority_oppressed_small
			remove_racial_modifiers = yes
		}
		if = {
			limit = {has_province_modifier = dwarven_minority_oppressed_large}
			remove_province_modifier = dwarven_minority_oppressed_large
			add_permanent_province_modifier = { name = dwarven_minority_oppressed_small duration = -1}
		}
		#Impact Coexisting
		if = {
			limit = {has_province_modifier = dwarven_minority_coexisting_small}
			remove_province_modifier = dwarven_minority_coexisting_small
			remove_racial_modifiers = yes
		}
		if = {
			limit = {has_province_modifier = dwarven_minority_coexisting_large}
			remove_province_modifier = dwarven_minority_coexisting_large
			add_permanent_province_modifier = { name = dwarven_minority_coexisting_small duration = -1}
		}
		#Impact Integrated
		if = {
			limit = {has_province_modifier = dwarven_minority_integrated_small}
			remove_province_modifier = dwarven_minority_integrated_small
			remove_racial_modifiers = yes
		}
		if = {
			limit = {has_province_modifier = dwarven_minority_integrated_large}
			remove_province_modifier = dwarven_minority_integrated_large
			add_permanent_province_modifier = { name = dwarven_minority_integrated_small duration = -1}
		}
	}
}