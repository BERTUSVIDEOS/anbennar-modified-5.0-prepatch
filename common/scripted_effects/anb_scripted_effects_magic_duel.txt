magic_duel_initialize_stats = {
	set_variable = { mag_shield = 0 }
	set_variable = { mag_accuracy = 100 }
	set_variable = { mag_evasion = 15 }
	set_variable = { mag_resistance = 0 }
	set_variable = { mag_dot = 0 }
	set_variable = { mag_hot = 0 }
	trigger_switch = {
		on_trigger = ADM
		6 = { set_variable = { mag_hp = 200 } }
		5 = { set_variable = { mag_hp = 180 } }
		4 = { set_variable = { mag_hp = 160 } }
		3 = { set_variable = { mag_hp = 140 } }
		2 = { set_variable = { mag_hp = 120 } }
		1 = { set_variable = { mag_hp = 100 } }
		0 = { set_variable = { mag_hp = 80 } }
	}
	trigger_switch = {
		on_trigger = DIP
		6 = { set_variable = { mag_mana = 150 } }
		5 = { set_variable = { mag_mana = 130 } }
		4 = { set_variable = { mag_mana = 110 } }
		3 = { set_variable = { mag_mana = 90 } }
		2 = { set_variable = { mag_mana = 70 } }
		1 = { set_variable = { mag_mana = 50 } }
		0 = { set_variable = { mag_mana = 30 } }
	}
	trigger_switch = {
		on_trigger = MIL
		6 = { set_variable = { mag_power = 1.3 } }
		5 = { set_variable = { mag_power = 1.25 } }
		4 = { set_variable = { mag_power = 1.2 } }
		3 = { set_variable = { mag_power = 1.15 } }
		2 = { set_variable = { mag_power = 1.1 } }
		1 = { set_variable = { mag_power = 1.05 } }
		0 = { set_variable = { mag_power = 1 } }
	}
	
	#Races
	if = {
		limit = { ruler_is_human = yes }
		multiply_variable = { mag_hp = 1 }
		multiply_variable = { mag_mana = 1 }
		multiply_variable = { mag_power = 1 }
	}
	else_if = {
		limit = { ruler_is_half_elven = yes }
		multiply_variable = { mag_hp = 0.95 }
		multiply_variable = { mag_mana = 1.05 }
		multiply_variable = { mag_power = 1 }
	}
	else_if = {
		limit = { ruler_is_elven = yes }
		multiply_variable = { mag_hp = 0.9 }
		multiply_variable = { mag_mana = 1.5 }
		multiply_variable = { mag_power = 1.2 }
	}
	else_if = {
		limit = { ruler_is_dwarven = yes }
		multiply_variable = { mag_hp = 1.1 }
		multiply_variable = { mag_mana = 0.9 }
		multiply_variable = { mag_power = 1 }
		change_variable = { mag_resistance = 5 }
	}
	else_if = {
		limit = { ruler_is_gnomish = yes }
		multiply_variable = { mag_hp = 0.75 }
		multiply_variable = { mag_mana = 1 }
		multiply_variable = { mag_power = 1 }
	}
	else_if = {
		limit = { ruler_is_half_orcish = yes }
		multiply_variable = { mag_hp = 1.1 }
		multiply_variable = { mag_mana = 0.9 }
		multiply_variable = { mag_power = 1 }
	}
	else_if = {
		limit = { ruler_is_orcish = yes }
		multiply_variable = { mag_hp = 1.3 }
		multiply_variable = { mag_mana = 0.8 }
		multiply_variable = { mag_power = 1.1 }
		change_variable = { mag_resistance = 5 }
	}
	else_if = {
		limit = { ruler_is_goblin = yes }
		multiply_variable = { mag_hp = 0.75 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.1 }
	}
	else_if = {
		limit = { ruler_is_gnollish = yes }
		multiply_variable = { mag_hp = 1.25 }
		multiply_variable = { mag_mana = 0.9 }
		multiply_variable = { mag_power = 0.9 }
	}
	else_if = {
		limit = { ruler_is_kobold = yes }
		multiply_variable = { mag_hp = 0.7 }
		multiply_variable = { mag_mana = 0.9 }
		multiply_variable = { mag_power = 0.9 }
	}
	else_if = {
		limit = { ruler_is_halfling = yes }
		multiply_variable = { mag_hp = 0.7 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 0.8 }
	}
	else_if = {
		limit = { ruler_is_harimari = yes }
		multiply_variable = { mag_hp = 1.3 }
		multiply_variable = { mag_mana = 1 }
		multiply_variable = { mag_power = 1.1 }
	}
	else_if = {
		limit = { ruler_is_hobgoblin = yes }
		multiply_variable = { mag_hp = 1.3 }
		multiply_variable = { mag_mana = 0.9 }
		multiply_variable = { mag_power = 1 }
	}
	else_if = {
		limit = { ruler_is_troll = yes }
		multiply_variable = { mag_hp = 1.5 }
		multiply_variable = { mag_mana = 0.5 }
		multiply_variable = { mag_power = 1 }
		change_variable = { mag_resistance = 20 }
	}
	else_if = {
		limit = { ruler_is_ogre = yes }
		multiply_variable = { mag_hp = 1.4 }
		multiply_variable = { mag_mana = 0.6 }
		multiply_variable = { mag_power = 1 }
		change_variable = { mag_resistance = 10 }
	}
	else_if = {
		limit = { ruler_is_harpy = yes }
		multiply_variable = { mag_hp = 0.9 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1 }
	}
	else_if = {
		limit = { ruler_is_centaur = yes }
		multiply_variable = { mag_hp = 1.1 }
		multiply_variable = { mag_mana = 0.8 }
		multiply_variable = { mag_power = 1.1 }
	}
	else_if = {
		limit = { ruler_is_ruinborn = yes }
		multiply_variable = { mag_hp = 0.8 }
		multiply_variable = { mag_mana = 2 }
		multiply_variable = { mag_power = 0.5 }
		change_variable = { mag_resistance = 25 }
	}
	
	#Age
	trigger_switch = {
		on_trigger = ruler_age
		
		460 = { multiply_variable = { mag_hp = 0.4 } multiply_variable = { mag_mana = 3.3 } multiply_variable = { mag_power = 2.15 } }
		440 = { multiply_variable = { mag_hp = 0.45 } multiply_variable = { mag_mana = 3.2 } multiply_variable = { mag_power = 2.1 } }
		420 = { multiply_variable = { mag_hp = 0.5 } multiply_variable = { mag_mana = 3.1 } multiply_variable = { mag_power = 2.05 } }
		400 = { multiply_variable = { mag_hp = 0.55 } multiply_variable = { mag_mana = 3 } multiply_variable = { mag_power = 2 } }
		380 = { multiply_variable = { mag_hp = 0.6 } multiply_variable = { mag_mana = 2.9 } multiply_variable = { mag_power = 1.95 } }
		360 = { multiply_variable = { mag_hp = 0.65 } multiply_variable = { mag_mana = 2.8 } multiply_variable = { mag_power = 1.9 } }
		340 = { multiply_variable = { mag_hp = 0.7 } multiply_variable = { mag_mana = 2.7 } multiply_variable = { mag_power = 1.85 } }
		320 = { multiply_variable = { mag_hp = 0.75 } multiply_variable = { mag_mana = 2.6 } multiply_variable = { mag_power = 1.8 } }
		300 = { multiply_variable = { mag_hp = 0.8 } multiply_variable = { mag_mana = 2.5 } multiply_variable = { mag_power = 1.75 } }
		280 = { multiply_variable = { mag_hp = 0.85 } multiply_variable = { mag_mana = 2.4 } multiply_variable = { mag_power = 1.7 } }
		260 = { multiply_variable = { mag_hp = 0.9 } multiply_variable = { mag_mana = 2.3 } multiply_variable = { mag_power = 1.65 } }
		240 = { multiply_variable = { mag_hp = 0.95 } multiply_variable = { mag_mana = 2.2 } multiply_variable = { mag_power = 1.6 } }
		220 = { multiply_variable = { mag_hp = 1 } multiply_variable = { mag_mana = 2.1 } multiply_variable = { mag_power = 1.55 } }
		200 = { multiply_variable = { mag_hp = 1.05 } multiply_variable = { mag_mana = 2 } multiply_variable = { mag_power = 1.5 } }
		180 = { multiply_variable = { mag_hp = 1.1 } multiply_variable = { mag_mana = 1.9 } multiply_variable = { mag_power = 1.45 } }
		160 = { multiply_variable = { mag_hp = 1.15 } multiply_variable = { mag_mana = 1.8 } multiply_variable = { mag_power = 1.40 } }
		140 = { multiply_variable = { mag_hp = 1.2 } multiply_variable = { mag_mana = 1.7 } multiply_variable = { mag_power = 1.35 } }
		120 = { multiply_variable = { mag_hp = 1.25 } multiply_variable = { mag_mana = 1.6 } multiply_variable = { mag_power = 1.3 } }
		100 = { multiply_variable = { mag_hp = 1.3 } multiply_variable = { mag_mana = 1.5 } multiply_variable = { mag_power = 1.25 } }
		80 = { multiply_variable = { mag_hp = 1.35 } multiply_variable = { mag_mana = 1.4 } multiply_variable = { mag_power = 1.2 } }
		60 = { multiply_variable = { mag_hp = 1.4 } multiply_variable = { mag_mana = 1.3 } multiply_variable = { mag_power = 1.15 } }
		40 = { multiply_variable = { mag_hp = 1.45 } multiply_variable = { mag_mana = 1.2 } multiply_variable = { mag_power = 1.1 } }
		20 = { multiply_variable = { mag_hp = 1.5 } multiply_variable = { mag_mana = 1.1 } multiply_variable = { mag_power = 1.05 } }
	}
	
	#Skill
	if = {
		limit = { has_ruler_flag = abjuration_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = abjuration_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = abjuration_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = conjuration_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = conjuration_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.5 }
	}
	else_if = {
		limit = { has_ruler_flag = conjuration_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = divination_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = divination_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = divination_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = enchantment_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = enchantment_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = enchantment_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = evocation_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = evocation_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = evocation_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = illusion_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = illusion_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = illusion_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = necromancy_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = necromancy_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = necromancy_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	if = {
		limit = { has_ruler_flag = transmutation_3 }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_power = 1.075 }
	}
	else_if = {
		limit = { has_ruler_flag = transmutation_2 }
		multiply_variable = { mag_mana = 1.2 }
		multiply_variable = { mag_power = 1.05 }
	}
	else_if = {
		limit = { has_ruler_flag = transmutation_1 }
		multiply_variable = { mag_mana = 1.1 }
		multiply_variable = { mag_power = 1.025 }
	}
	
	#Ruler Personality
	
	
	#Special Shit
	if = {
		limit = { has_ruler_modifier = witch_king_modifier }
		multiply_variable = { mag_mana = 2 }
		multiply_variable = { mag_power = 1.2 }
	}
	if = {
		limit = { has_ruler_flag = is_a_vampire }
		multiply_variable = { mag_mana = 1.5 }
		multiply_variable = { mag_power = 1.3 }
	}
	if = {
		limit = { has_ruler_flag = tluukt_zokka_unsurprised }
		multiply_variable = { mag_hp = 1.5 }
		multiply_variable = { mag_mana = 1.5 }
	}
	if = {
		limit = { has_ruler_flag = tluukt_zokka_undistracted }
		multiply_variable = { mag_mana = 1.3 }
		multiply_variable = { mag_hp = 1.2 }
	}
	if = {
		limit = { has_ruler_flag = tluukt_demonloved }
		multiply_variable = { mag_power = 1.2 }
		set_variable = { mag_shield = 80 }
		change_variable = { mag_resistance = 20 }
	}
	if = {
		limit = {
			has_country_flag = tluukt_vs_carodir
			NOT = { has_ruler_modifier = tluukt_the_rule_of_tluukt }
		}
		multiply_variable = { mag_power = 0.6 }
		multiply_variable = { mag_mana = 0.8 }
		multiply_variable = { mag_hp = 1.25 }
	}
	
	#######
	divide_variable = { mag_mana = 1000 }
	divide_variable = { mag_hp = 1000 }
	# divide_variable = { mag_power = 1000 }
	multiply_variable = { mag_mana = 1000 }
	multiply_variable = { mag_hp = 1000 }
	multiply_variable = { mag_power = 100 }
	set_variable = { which = current_mana which = mag_mana }
	set_variable = { which = current_hp which = mag_hp }
	
}

magic_duel_initialize_stats_npc = {
	[[Jorgurem]
		if = {
			limit = { is_variable_equal = { which = mag_hp value = 0 } }
			set_variable = { mag_hp = 5000 }
			set_variable = { which = current_hp which = mag_hp }
		}
		set_variable = { mag_shield = 1250 }
		set_variable = { mag_accuracy = 100 }
		set_variable = { mag_evasion = 15 }
		set_variable = { mag_resistance = 33 }
		set_variable = { mag_dot = 0 }
		set_variable = { mag_hot = 0 }
		set_variable = { mag_mana = 7000 }
		set_variable = { mag_power = 400 }
		ROOT = { PREV = { set_variable = { which = mag_power which = PREV } } } #It scale with yours because i'm a bad boy
		multiply_variable = { mag_power = 2.55 }								#Then he get even more
		if = {
			limit = { NOT = { check_variable = { mag_power = 420.69 } } }		#And that's if you're too weak, trash
			set_variable = { mag_power = 420.69 }								#Haha funny numbers
		}
		set_variable = { which = current_mana which = mag_mana }
		
		#Available Spell for Jorgurem
		set_country_flag = evocation_1
		set_country_flag = evocation_2
		set_country_flag = evocation_3
		set_country_flag = abjuration_1
		set_country_flag = abjuration_2
		set_country_flag = abjuration_3
		set_country_flag = conjuration_1
		set_country_flag = conjuration_2
		set_country_flag = transmutation_1
		set_country_flag = transmutation_2
		set_country_flag = transmutation_3
		set_country_flag = illusion_1
	]
}

magic_duel_npc_clear_magical_flag = {
	clr_country_flag = abjuration_1
	clr_country_flag = abjuration_2
	clr_country_flag = abjuration_3
	clr_country_flag = conjuration_1
	clr_country_flag = conjuration_2
	clr_country_flag = conjuration_3
	clr_country_flag = divination_1
	clr_country_flag = divination_2
	clr_country_flag = divination_3
	clr_country_flag = enchantment_1
	clr_country_flag = enchantment_2
	clr_country_flag = enchantment_3
	clr_country_flag = evocation_1
	clr_country_flag = evocation_2
	clr_country_flag = evocation_3
	clr_country_flag = illusion_1
	clr_country_flag = illusion_2
	clr_country_flag = illusion_3
	clr_country_flag = necromancy_1
	clr_country_flag = necromancy_2
	clr_country_flag = necromancy_3
	clr_country_flag = transmutation_1
	clr_country_flag = transmutation_2
	clr_country_flag = transmutation_3
}

process_magical_turn = {
	hidden_effect = {
		#This is done to check if both mage have done their turn
		change_variable = { magicProcess = 1 }
		hidden_effect = {
			if = {
				limit = { ai = no }
				if = {
					limit = { event_target:attacker = { tag = ROOT } }
					event_target:defender = { country_event = { id = magic_duel.1 } }
				}
				else = {
					event_target:attacker = { country_event = { id = magic_duel.1 } }
				}
			}
		}
		if = {
			limit = {
				event_target:attacker = { check_variable = { magicProcess = 1 } }
				event_target:defender = { check_variable = { magicProcess = 1 } }
			}
			event_target:attacker = { country_event = { id = magic_duel.3 } } #This is the calculation event
		}
	}
}


######
#Adding New Spell Effect
# Don't Forget To Put the spellFoo multiply and set around the Effect. This is done that way so the Spell Power Modifier is properly displayed to the player
cast_spell = {
	hidden_effect = {
		set_variable = { spellFoo = $value$ } #This is the default power of the spell, that get multiplied by your SpellPower
		set_variable = { mag_damage = 0 }
		subtract_variable = { current_mana = $cost$ }
		divide_variable = { mag_power = 100 } #We bring down mag_power to use it in calculation, then bring it back up to display for the player
		if = {
			limit = { NOT = { check_variable = { current_mana = 1 } } }
			set_variable = { current_mana = 0 }
		}
		[[debuff_spell_evasion]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			if = {
				limit = { event_target:attacker = { tag = ROOT } }
				while = {
					limit = { check_variable = { spellFoo = 1 } }
					event_target:defender = {
						subtract_variable = { mag_evasion = 1 }
						subtract_variable = { printSpellEvasion = 1 }
					}
					subtract_variable = { spellFoo = 1 }
				}
			}
			else = {
				while = {
					limit = { check_variable = { spellFoo = 1 } }
					event_target:attacker = {
						subtract_variable = { mag_evasion = 1 }
						subtract_variable = { printSpellEvasion = 1 }
					}
					subtract_variable = { spellFoo = 1 }
				}
			}
			set_variable = { spellFoo = $value$ } #Some spell can have multiple effect. So we reset the value at the end of an effect. This is done because we don't want spell power buff/debuff effect to be affect by your spell power. (because this get out of control really fast)
		]
		[[debuff_spell_accuracy]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			if = {
				limit = { event_target:attacker = { tag = ROOT } }
				while = {
					limit = { check_variable = { spellFoo = 1 } }
					event_target:defender = {
						subtract_variable = { mag_accuracy = 1 }
						subtract_variable = { printSpellAccuracy = 1 }
					}
					subtract_variable = { spellFoo = 1 }
				}
			}
			else = {
				while = {
					limit = { check_variable = { spellFoo = 1 } }
					event_target:attacker = {
						subtract_variable = { mag_accuracy = 1 }
						subtract_variable = { printSpellAccuracy = 1 }
					}
					subtract_variable = { spellFoo = 1 }
				}
			}
			set_variable = { spellFoo = $value$ }
		]
		[[debuff_spell_power]
			multiply_variable = { spellFoo = 100 }
			trim_spell_foo = yes
			if = {
				limit = { event_target:attacker = { tag = ROOT } }
				while = {
					limit = { check_variable = { spellFoo = 0 } }
					event_target:defender = { subtract_variable = { mag_power = 1 } }
					subtract_variable = { spellFoo = 1 }
				}
			}
			else = {
				while = {
					limit = { check_variable = { spellFoo = 0 } }
					event_target:attacker = { subtract_variable = { mag_power = 1 } }
					subtract_variable = { spellFoo = 1 }
				}
			}
			set_variable = { spellFoo = $value$ }
		]
		[[dot]
			multiply_variable = { which = spellFoo which = mag_power }
			if = {
				limit = { event_target:attacker = { tag = ROOT } }
				while = {
					limit = { check_variable = { spellFoo = 1 } }
					event_target:defender = { change_variable = { mag_dot = 1 } }
					subtract_variable = { spellFoo = 1 }
				}
			}
			else = {
				while = {
					limit = { check_variable = { spellFoo = 1 } }
					event_target:attacker = { change_variable = { mag_dot = 1 } }
					subtract_variable = { spellFoo = 1 }
				}
			}
			set_variable = { spellFoo = $value$ }
		]
		[[buff_spell_evasion]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			change_variable = { which = mag_evasion which = spellFoo }
			change_variable = { which = printSpellEvasion which = spellFoo }
			set_variable = { spellFoo = $value$ }
		]
		[[buff_spell_accuracy]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			change_variable = { which = mag_accuracy which = spellFoo }
			change_variable = { which = printSpellAccuracy which = spellFoo }
			set_variable = { spellFoo = $value$ }
		]
		[[buff_spell_power]
			change_variable = { which = mag_power which = spellFoo }
		]
		[[shield]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			change_variable = { which = mag_shield which = spellFoo }
			set_variable = { which = printShield which = spellFoo }
			set_ruler_flag = print_shield
			set_variable = { spellFoo = $value$ }
		]
		[[hot]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			change_variable = { which = mag_hot which = spellFoo }
			set_variable = { spellFoo = $value$ }
		]
		[[heal]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			change_variable = { which = current_hp which = spellFoo }
			if = {
				limit = { check_variable = { which = current_hp which = mag_hp } }
				set_variable = { which = current_hp which = mag_hp }
			}
			set_variable = { spellFoo = $value$ }
		]
		[[damage]
			multiply_variable = { which = spellFoo which = mag_power }
			trim_spell_foo = yes
			set_variable = { which = mag_damage which = spellFoo }
			set_variable = { spellFoo = $value$ }
		]
		[[regen_mana]
			set_variable = { which = tempMana which = mag_mana }
			multiply_variable = { tempMana = $value$ }
			subtract_variable = { which = tempMana which = mag_mana }
			set_variable = { which = printMana which = tempMana }
			set_ruler_flag = print_mana_regen
			change_variable = { which = current_mana which = tempMana }
		]
		multiply_variable = { mag_power = 100 } #We bring down mag_power to use it in calculation, then bring it back up to display for the player
	}
}

trim_spell_foo = { #Remove the decimal
	divide_variable = { spellFoo = 1000 }
	multiply_variable = { spellFoo = 1000 }
}

clr_magic_duel_printing_flag = {
	hidden_effect = {
		event_target:attacker = {
			clr_ruler_flag = dodged_spell
			clr_ruler_flag = hit_by_spell
			clr_ruler_flag = print_spell_evasion
			clr_ruler_flag = print_spell_accuracy
			clr_ruler_flag = print_mana_regen
			clr_ruler_flag = print_shield
		}
		event_target:defender = {
			clr_ruler_flag = dodged_spell
			clr_ruler_flag = hit_by_spell
			clr_ruler_flag = print_spell_evasion
			clr_ruler_flag = print_spell_accuracy
			clr_ruler_flag = print_mana_regen
			clr_ruler_flag = print_shield
		}
	}
}

reset_printing_value = {
	hidden_effect = {
		set_variable = { printSpellEvasion = 0 }
		set_variable = { printSpellAccuracy = 0 }
		set_variable = { printMana = 0 }
		set_variable = { printShield = 0 }
		clr_magic_duel_printing_flag = yes
	}
}

reset_printing_value_mana = {
	hidden_effect = {
		set_variable = { printSpellEvasion = 0 }
		set_variable = { printSpellAccuracy = 0 }
		set_variable = { printShield = 0 }
		clr_magic_duel_printing_flag_mana = yes
	}
}

clr_magic_duel_printing_flag_mana = {
	hidden_effect = {
		event_target:attacker = {
			clr_ruler_flag = dodged_spell
			clr_ruler_flag = hit_by_spell
			clr_ruler_flag = print_spell_evasion
			clr_ruler_flag = print_spell_accuracy
			clr_ruler_flag = print_shield
		}
		event_target:defender = {
			clr_ruler_flag = dodged_spell
			clr_ruler_flag = hit_by_spell
			clr_ruler_flag = print_spell_evasion
			clr_ruler_flag = print_spell_accuracy
			clr_ruler_flag = print_shield
		}
	}
}

parse_printing_value = {
}

clr_casting_flag = {
	hidden_effect = {
		clr_ruler_flag = casting_abjuration
		clr_ruler_flag = casting_conjuration
		clr_ruler_flag = casting_divination
		clr_ruler_flag = casting_enchantment
		clr_ruler_flag = casting_evocation
		clr_ruler_flag = casting_illusion
		clr_ruler_flag = casting_necromancy
		clr_ruler_flag = casting_transmutation
	}
}

set_printing_flag = {
	if = { limit = { NOT = { is_variable_equal = { which = printSpellAccuracy value = 0 } } } set_ruler_flag = print_spell_accuracy }
	if = { limit = { NOT = { is_variable_equal = { which = printSpellEvasion value = 0 } } } set_ruler_flag = print_spell_evasion }
	if = { limit = { NOT = { is_variable_equal = { which = printMana value = 0 } } } set_ruler_flag = print_mana_regen }
	if = { limit = { NOT = { is_variable_equal = { which = printShield value = 0 } } } set_ruler_flag = print_shield }
}

fix_overflow_value = {
	if = { limit = { check_variable = { mag_evasion = 90 } } set_variable = { mag_evasion = 90 } }
	if = { limit = { NOT = { check_variable = { mag_evasion = 10 } } } set_variable = { mag_evasion = 10 } }
	if = { limit = { check_variable = { mag_accuracy = 200 } } set_variable = { mag_accuracy = 200 } }
	if = { limit = { NOT = { check_variable = { mag_accuracy = 20 } } } set_variable = { mag_accuracy = 20 } }
	if = { limit = { check_variable = { which = current_mana which = mag_mana } } set_variable = { which = current_mana which = mag_mana } }
}

take_spell_damage = {
	set_ruler_flag = hit_by_spell
	set_variable = { printDamage = 0 }
	if = {
		limit = { check_variable = { which = mag_damage which = mag_shield } }
		set_variable = { printShield = 0 }
	}
	while = {
		limit = { check_variable = { mag_damage = 1 } }
		if = {
			limit = { check_variable = { mag_shield = 1 } }
			subtract_variable = { mag_shield = 1 }
			subtract_variable = { printShield = 1 }
			set_ruler_flag = print_shield
		}
		else = {
			set_variable = { mag_shield = 0 }
			subtract_variable = { current_hp = 1 }
			change_variable = { printDamage = 1 }
		}
		subtract_variable = { mag_damage = 1 }
	}
}

spell_hit_or_miss = {
	#whatever bertus mod
}
