
interaction = {	#1-1
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#2-1
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#3-1
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#4-1
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#5-1
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#6-1
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {		
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#7-1
    key = country_goods_interaction
    random_seed = random
	cooldown_months = 0

    trigger = {
		custom_trigger_tooltip = {
			tooltip = trade_goods_variables_localisations_tooltip
			always = yes
		}
    }
    effect = {	
		custom_tooltip = spacing_tooltip
		if = {	#has goods de-activated
			limit = {NOT = {has_global_flag = stored_goods_activated_flag}}
			custom_tooltip = bertus_deactivated_goods_tt
		}
		custom_tooltip = bertus_open_goods_menu_tt
		hidden_effect = {
			country_event = {id = ANEX_event.34}
			country_event = {id = bertus_changes.7000}
		}
		custom_tooltip = spacing_tooltip
    }
	ai_will_do = {factor = 0}
}
interaction = {	#8-1
    key = country_study_magic_interaction
    random_seed = random
	cooldown_months = 0

    trigger = {
		hidden_trigger = {
			ai = no	#bertus mod
			NOT = { has_ruler_flag = magic_menu_opened }
		}
		NOT = { has_country_flag = in_magocracy_heir_selection }
		NOT = { has_ruler_modifier = magic_realm_menu_cooldown }
		NOT = { has_ruler_modifier = ruler_recently_casted_spell }
		ruler_has_mage_personality = yes
		if = { limit = { NOT = {months_of_ruling = 2 }}
			months_of_ruling = 2
		}
		if = { limit = { is_lesser_in_union = yes }
			is_lesser_in_union = no
		}
		if = { limit = { ai = yes }
			NOT = { has_ruler_modifier = ruler_recently_casted_spell }
		}
		if = { limit = { has_ruler_flag = abjuration_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_abjuration_3 }
		}
		else_if = { limit = { has_ruler_flag = abjuration_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_abjuration_2 }
		}
		else_if = { limit = { has_ruler_flag = abjuration_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_abjuration_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_abjuration_0 }
		}
		
		if = { limit = { has_ruler_flag = conjuration_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_conjuration_3 }
		}
		else_if = { limit = { has_ruler_flag = conjuration_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_conjuration_2 }
		}
		else_if = { limit = { has_ruler_flag = conjuration_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_conjuration_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_conjuration_0 }
		}
		
		if = { limit = { has_ruler_flag = divination_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_divination_3 }
		}
		else_if = { limit = { has_ruler_flag = divination_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_divination_2 }
		}
		else_if = { limit = { has_ruler_flag = divination_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_divination_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_divination_0 }
		}
		
		if = { limit = { has_ruler_flag = enchantment_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_enchantment_3 }
		}
		else_if = { limit = { has_ruler_flag = enchantment_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_enchantment_2 }
		}
		else_if = { limit = { has_ruler_flag = enchantment_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_enchantment_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_enchantment_0 }
		}
		
		if = { limit = { has_ruler_flag = evocation_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_evocation_3 }
		}
		else_if = { limit = { has_ruler_flag = evocation_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_evocation_2 }
		}
		else_if = { limit = { has_ruler_flag = evocation_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_evocation_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_evocation_0 }
		}
		
		if = { limit = { has_ruler_flag = illusion_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_illusion_3 }
		}
		else_if = { limit = { has_ruler_flag = illusion_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_illusion_2 }
		}
		else_if = { limit = { has_ruler_flag = illusion_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_illusion_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_illusion_0 }
		}
		
		if = { limit = { has_ruler_flag = necromancy_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_necromancy_3 }
		}
		else_if = { limit = { has_ruler_flag = necromancy_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_necromancy_2 }
		}
		else_if = { limit = { has_ruler_flag = necromancy_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_necromancy_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_necromancy_0 }
		}
		
		if = { limit = { has_ruler_flag = transmutation_3 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_transmutation_3 }
		}
		else_if = { limit = { has_ruler_flag = transmutation_2 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_transmutation_2 }
		}
		else_if = { limit = { has_ruler_flag = transmutation_1 }
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_transmutation_1 }
		}
		else = {
			custom_trigger_tooltip = { always = yes tooltip = tooltip_has_transmutation_0 }
		}
    }
    effect = {
		custom_tooltip = open_ruler_magic_menu_tt
		hidden_effect = { country_event = { id = magic_ruler.0 } }
		open_single_menu = yes	#prevents people from opening the menu multiple times
		#Allows for vampires that become mages naturally
		hidden_effect = {
			if = { 
				limit = { has_ruler_flag = is_a_vampire }
				set_country_flag = mage_vampire
			}
		}
    }
	ai_will_do = {factor = 0}
}
interaction = {	#9-1
    key = country_administration_interaction
    random_seed = random
	cooldown_months = 0

    trigger = {
		hidden_trigger = {
			OR = {
				NOT = { has_country_flag = racial_pop_menu_opened }
				had_country_flag = {	#If something weird happens and the flag wasn't cleared, allow to open after a year
					flag = racial_military_menu_opened
					days = 365
				}
			}
		}
    }
    effect = {		
		country_administration_effect = {
			type = administration
		}
		custom_tooltip = tolerance_of_human_info_tooltip
		custom_tooltip = tolerance_of_elven_info_tooltip
		custom_tooltip = tolerance_of_dwarven_info_tooltip
		custom_tooltip = tolerance_of_halfling_info_tooltip
		custom_tooltip = tolerance_of_gnomish_info_tooltip
		custom_tooltip = tolerance_of_harimari_info_tooltip
		custom_tooltip = tolerance_of_gnollish_info_tooltip
		custom_tooltip = tolerance_of_ruinborn_info_tooltip
		custom_tooltip = tolerance_of_goblin_info_tooltip
		custom_tooltip = tolerance_of_orcish_info_tooltip
		custom_tooltip = tolerance_of_ogre_info_tooltip
		custom_tooltip = tolerance_of_centaur_info_tooltip
		custom_tooltip = tolerance_of_troll_info_tooltip
		custom_tooltip = tolerance_of_harpy_info_tooltip
		custom_tooltip = tolerance_of_half_orcish_info_tooltip
		custom_tooltip = tolerance_of_half_elven_info_tooltip
		custom_tooltip = tolerance_of_hobgoblin_info_tooltip
		custom_tooltip = tolerance_of_kobold_info_tooltip
		custom_tooltip = spacing_tooltip
		custom_tooltip = pop_menu_access_tt
		hidden_effect = {
			if = { limit = { ai = yes }
				country_event = { id = racial_pop_misc.1 }
			}
			else = {	
				pop_menu_calculations = yes
				country_event = { id = racial_pop_misc.3 }
			}
			set_country_flag = racial_pop_menu_opened
		}
    }
	ai_will_do = {factor = 0}
}
interaction = {	#1-2
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#2-2
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#3-2
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#4-2
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#5-2
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#6-2
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#7-2
    key = research_artificery
    random_seed = random
	cooldown_months = 0

    trigger = {
		custom_trigger_tooltip = {
			tooltip = has_artificer_estate_tt
			OR = {
				has_estate = estate_artificers
				AND = {
					has_estate = estate_dragon_command
					has_institution = manufactories
				}
			}
		}
    }
    effect = {
		if = {
			limit = {
				OR = {
					has_estate = estate_artificers
					has_estate = estate_dragon_command
				}
			}
			country_event = {id = bertus_artificers.1}
		}
		if = {
			limit = {
				has_estate = estate_artificers
			}
			custom_tooltip = artifice_breakdown
			hidden_effect = { country_event = { id = artificers_estate_events.100 } }
		}
		else = {
			custom_tooltip = celebrate_space_tooltip			
		}
    }
	ai_will_do = {factor = 0}
}
interaction = {	#8-2
    key = cast_spell
    random_seed = random
	cooldown_months = 0

    trigger = {
		hidden_trigger = {
			ai = no	#bertus mod
		}
		#NOT = {has_country_modifier = cant_cast_magic}
		custom_trigger_tooltip = {
			tooltip = has_magic_estate_tt
			OR = {
				has_estate = estate_mages
				has_estate = estate_acolytes
				tag = Y01	#azjakuma
				has_estate_privilege = artifice_invention_korashi_tuners
			}
		}
		if = { limit = { has_estate = estate_mages }
			estate_influence = { estate = estate_mages influence = 15 }
			if = { limit = { tag = Y63 has_country_flag = Y63_unlocked_minor_runes }
				hidden_trigger = { NOT = { has_country_flag = V63_runes_menu_open } }
			}
			else = {
				NOT = { has_estate_privilege = estate_mages_cast_spells }
				if = { limit = { tag = I02 }	#krak
					mission_completed = krak_relighting_forges
				}
			}
		}
		else_if = { limit = { has_estate = estate_acolytes }
			estate_influence = { estate = estate_acolytes influence = 15 }
			NOT = { has_estate_privilege = estate_acolytes_cast_spells }
		}
		else_if = { limit = { tag = Y01 }
			if = { limit = { has_country_flag = azjakuma_two_magics_allowed }
				custom_trigger_tooltip = {
					tooltip = no_other_magic_shirgrii_two_tooltip
					NOT = {
						calc_true_if = {
							has_estate_privilege = estate_shinukhorchi_cast_magic
							has_estate_privilege = estate_chumijemoya_cast_magic
							has_estate_privilege = estate_ajgriijarul_cast_magic
							has_estate_privilege = estate_kabiurgarko_cast_magic
							has_estate_privilege = estate_khelorvalshi_cast_magic
							amount = 2
						}
					}
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = no_other_magic_shirgrii_tooltip
					NOT = { 
						has_estate_privilege = estate_shinukhorchi_cast_magic
						has_estate_privilege = estate_chumijemoya_cast_magic
						has_estate_privilege = estate_ajgriijarul_cast_magic
						has_estate_privilege = estate_kabiurgarko_cast_magic
						has_estate_privilege = estate_khelorvalshi_cast_magic
					}
				}
			}
			hidden_trigger = { NOT = { has_country_flag = azjakuma_magic_menu_opened } }
		}
		else_if = { limit = { has_estate_privilege = artifice_invention_korashi_tuners }
			NOT = { has_country_modifier = magic_cooldown }
		}
    }
    effect = {
		
		if = { limit = { has_estate = estate_mages }
			if = { limit = { tag = Y63 has_country_flag = Y63_unlocked_minor_runes }
				custom_tooltip = Y63_open_runes_manu_tt
				set_country_flag = V63_runes_menu_open
				hidden_effect = { country_event = { id = verkalozovar_events.100 } }
			}
			else = {
				custom_tooltip = opens_magic_estate_menu_tt
				custom_tooltip = cast_spell_effect_tt
				hidden_effect = {
					set_estate_privilege = estate_mages_cast_spells
					if = { limit = { tag = I02 }
						country_event = { id = flavor_krak.100 }
					}
					else = {
						country_event = { id = magic_estate.1 }
					}
				}
			}
		}
		else_if = { limit = { has_estate = estate_acolytes }
			custom_tooltip = opens_magic_estate_menu_tt
			custom_tooltip = cast_spell_effect_tt
			hidden_effect = {
				set_estate_privilege = estate_acolytes_cast_spells
				country_event = { id = acolyte_estate.1 }
			}
		}
		else_if = { limit = { tag = Y01 }
			custom_tooltip = opens_shirgrii_magic_menu_tt
			custom_tooltip = cast_spell_effect_tt
			hidden_effect = {
				set_country_flag = azjakuma_magic_menu_opened
			}
			clr_country_flag = remove_azjakuma_casting_spells
		}
		else_if = { limit = { has_estate_privilege = artifice_invention_korashi_tuners }
			custom_tooltip = opens_magic_estate_menu_tt
			custom_tooltip = cast_spell_effect_tt
			hidden_effect = {
				country_event = { id = magic_estate.1 }
			}
		}
		clr_country_flag = revoke_mage_estate_spells
    }
	ai_will_do = {factor = 0}
}
interaction = {	#9-2
    key = country_military_interaction
    random_seed = random
	cooldown_months = 0

    trigger = {
		hidden_trigger = {
			NOT = { has_country_flag = racial_military_menu_opened }
		}
    }
    effect = {
		country_administration_effect = {
			type = military
		}
		country_event = {id = bertus_racial_military.1001}
    }
	ai_will_do = {factor = 0}
}
interaction = {	#1-3
    key = first_chair_interaction
    random_seed = random
	cooldown_months = 120

    trigger = {
    }
    effect = {
		country_chairman_effect = {
			type = first_hand
		}
		country_event = {
			id = bertus_racial_military.5200
		}
    }
	ai_will_do = {factor = 10}
}
interaction = {	#2-3
    key = diplomacy_chair_interaction
    random_seed = random
	cooldown_months = 120

    trigger = {
		country_chairman_trigger = {type = diplomacy}
    }
    effect = {
		country_chairman_effect = {
			type = diplomacy
		}
		country_event = {
			id = bertus_racial_military.5201
		}
    }
	ai_will_do = {factor = 10}
}
interaction = {	#3-3
    key = military_chair_interaction
    random_seed = random
	cooldown_months = 120

    trigger = {
		country_chairman_trigger = {type = military}
    }
    effect = {
		country_chairman_effect = {
			type = military
		}
		country_event = {
			id = bertus_racial_military.5202
		}
    }
	ai_will_do = {factor = 10}
}
interaction = {	#4-3
    key = economic_chair_interaction
    random_seed = random
	cooldown_months = 120

    trigger = {
		country_chairman_trigger = {type = economic}
    }
    effect = {
		country_chairman_effect = {
			type = economic
		}
		country_event = {
			id = bertus_racial_military.5203
		}
		if = {
			limit = {
				has_country_modifier = estate_halfling_economic_chairman_modifier
			}
			custom_tooltip = estate_halfling_economic_chairman_tooltip
		}
    }
	ai_will_do = {factor = 10}
}
interaction = {	#5-3
    key = navy_chair_interaction
    random_seed = random
	cooldown_months = 120

    trigger = {
		country_chairman_trigger = {type = navy}
		any_owned_province = {
			has_port = yes
		}
    }
    effect = {
		country_chairman_effect = {
			type = navy
		}
		country_event = {
			id = bertus_racial_military.5204
		}
    }
	ai_will_do = {factor = 10}
}
interaction = {	#6-3
    key = empty_interaction
    random_seed = random
	cooldown_months = 1

    trigger = {	
		custom_trigger_tooltip = {
			tooltip = celebrate_space_tooltip
			always = no
		}
    }
    effect = {
    }
	ai_will_do = {factor = 0}
}
interaction = {	#7-3
    key = summon_the_diet
    random_seed = random
	cooldown_months = 12

    trigger = {
		is_year = 1445
        NOT = { has_any_active_estate_agenda = yes }
		hidden_trigger = { has_any_estates = yes }
		NOT = { has_government_attribute = blocked_call_diet }
    }

    effect = {
        custom_tooltip = ESTATES_SUMMON_THE_DIET_DESC
        hidden_effect = {
	        country_event = { id = bertus_changes.1112 }               
        }
        custom_tooltip = SEPERATOR_TOOLTIP

		if = {
			limit = {
				has_government_attribute = republican_tradition_from_diets
			}
			add_scaled_republican_tradition = 2
		}
    }
	ai_will_do = {factor = 0}
}
